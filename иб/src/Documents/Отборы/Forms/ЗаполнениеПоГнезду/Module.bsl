
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура Заполнить(Команда)
	
	Свинки.Очистить();
	Хрячки.Очистить();
	Заполнено = ВыполнитьНаСервере();
	Если Заполнено>0 Тогда
		Адрес = ЗаписатьПодборВХранилище();
		ВладелецФормы.ОбработатьПодбор(Адрес);
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьПодборВХранилище()
	
	АдресВХранилищеСвинки = ПоместитьВоВременноеХранилище(ДанныеФормыВЗначение(Свинки,Тип("ТаблицаЗначений")));
	АдресВХранилищеХрячки = ПоместитьВоВременноеХранилище(ДанныеФормыВЗначение(Хрячки,Тип("ТаблицаЗначений")));
	
	АдресВХранилище = Новый Структура("Свинки, Хрячки", АдресВХранилищеСвинки, АдресВХранилищеХрячки);
	Возврат АдресВХранилище;
	
КонецФункции

&НаСервере
Функция ВыполнитьНаСервере()
	
	//ОстатокПоросят = ПроверитьНаличиеПоросят();
	//Если ОстатокПоросят < (КоличествоСвинок+КоличествоХрячков) Тогда
	//	сжсвОбщегоНазначенияСервер.СообщитьПользователю("В указанном гнезде нет достаточного количества поросят. Требуется: " 
	//	+ (КоличествоСвинок+КоличествоХрячков) + ". В наличии: " + ОстатокПоросят);
	//	Возврат 0;
	//КонецЕсли;
	
	Отбор = Новый Структура;
	Отбор.Вставить("Серия", СерияНомеров);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаполненныеСвиноматки.НомерВСерии,
	               |	ЗаполненныеСвиноматки.Серия
	               |ПОМЕСТИТЬ СвиноматкиДокумента
	               |ИЗ
	               |	&ЗаполненныеСвиноматки КАК ЗаполненныеСвиноматки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗаполненныеХряки.НомерВСерии,
	               |	ЗаполненныеХряки.Серия
	               |ПОМЕСТИТЬ ХрякиДокумента
	               |ИЗ
	               |	&ЗаполненныеХряки КАК ЗаполненныеХряки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	сжсвСерииНомеров.Серия,
	               |	МАКСИМУМ(сжсвСерииНомеров.Номер) КАК Номер
	               |ПОМЕСТИТЬ Использовано
	               |ИЗ
	               |	РегистрСведений.сжсвСерииНомеров КАК сжсвСерииНомеров
	               |ГДЕ
	               |	сжсвСерииНомеров.Серия = &Серия
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	сжсвСерииНомеров.Серия
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	СвиноматкиДокумента.Серия,
	               |	МАКСИМУМ(СвиноматкиДокумента.НомерВСерии)
	               |ИЗ
	               |	СвиноматкиДокумента КАК СвиноматкиДокумента
	               |ГДЕ
	               |	СвиноматкиДокумента.Серия = &Серия
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СвиноматкиДокумента.Серия
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХрякиДокумента.Серия,
	               |	МАКСИМУМ(ХрякиДокумента.НомерВСерии)
	               |ИЗ
	               |	ХрякиДокумента КАК ХрякиДокумента
	               |ГДЕ
	               |	ХрякиДокумента.Серия = &Серия
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ХрякиДокумента.Серия
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Использовано.Серия,
	               |	МАКСИМУМ(Использовано.Номер) КАК Номер
	               |ИЗ
	               |	Использовано КАК Использовано
	               |ГДЕ
	               |	Использовано.Серия = &Серия
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Использовано.Серия";
	Запрос.УстановитьПараметр("Серия", СерияНомеров);
	Запрос.УстановитьПараметр("ЗаполненныеСвиноматки", ЗаполненныеСвиноматки.Выгрузить());
	Запрос.УстановитьПараметр("ЗаполненныеХряки", ЗаполненныеХряки.Выгрузить());
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() > 0  Тогда
		Выборка.Следующий();
		ПоследнийНомер = Выборка.Номер;
	Иначе
		ПоследнийНомер = 0;
	КонецЕсли;
	
	МаксДлинаНомера = СтрДлина(Строка(Формат(СерияНомеров.КонечныйНомер, "ЧГ=")));
	Если СерияНомеров.НумероватьСвинок И СерияНомеров.НумероватьХрячков Тогда
		Если ПоследнийНомер + КоличествоСвинок + КоличествоХрячков> СерияНомеров.КонечныйНомер Тогда
			ОбщегоНазначенияСервер.СообщитьПользователю("В данной серии не достаточно свободных номеров");
			Возврат 0;
		КонецЕсли;
		Если СерияНомеров.ПорядокНумерацииСвинок > СерияНомеров.ПорядокНумерацииХрячков Тогда
			Для сч =1 По КоличествоХрячков Цикл
				ПоследнийНомер = ?(ПоследнийНомер = 0, СерияНомеров.НачальныйНомер, ПоследнийНомер + 1);
				НоваяСтрока = Хрячки.Добавить();
				НоваяСтрока.НомерХряка = СерияНомеров.КодСерии + Формат(ПоследнийНомер, "ЧЦ=" + МаксДлинаНомера +"; ЧГ=; ЧВН =");

				//НоваяСтрока.НомерХряка = СерияНомеров.КодСерии + Формат(ПоследнийНомер, СерияНомеров.Метаданные().Реквизиты.НачальныйНомер.Формат);
				НоваяСтрока.НомерГнезда = НомерГнезда;
				НоваяСтрока.Серия = СерияНомеров;
				НоваяСтрока.НомерВСерии = ПоследнийНомер;
			КонецЦикла;
			Для сч =1 По КоличествоСвинок Цикл
				ПоследнийНомер = ?(ПоследнийНомер = 0, СерияНомеров.НачальныйНомер, ПоследнийНомер + 1);
				НоваяСтрока = Свинки.Добавить();
				НоваяСтрока.НомерСвиноматки =  СерияНомеров.КодСерии + Формат(ПоследнийНомер, "ЧЦ=" + МаксДлинаНомера +"; ЧГ=; ЧВН =");
				НоваяСтрока.НомерГнезда = НомерГнезда;
				НоваяСтрока.Серия = СерияНомеров;
				НоваяСтрока.НомерВСерии = ПоследнийНомер;
			КонецЦикла;
			
		Иначе
			Для сч =1 По КоличествоСвинок Цикл
				ПоследнийНомер = ?(ПоследнийНомер = 0, СерияНомеров.НачальныйНомер, ПоследнийНомер + 1);
				НоваяСтрока = Свинки.Добавить();
				НоваяСтрока.НомерСвиноматки =  СерияНомеров.КодСерии + Формат(ПоследнийНомер, "ЧЦ=" + МаксДлинаНомера +"; ЧГ=; ЧВН =");
				НоваяСтрока.НомерГнезда = НомерГнезда;
				НоваяСтрока.Серия = СерияНомеров;
				НоваяСтрока.НомерВСерии = ПоследнийНомер;
			КонецЦикла;
			Для сч =1 По КоличествоХрячков Цикл
				ПоследнийНомер = ?(ПоследнийНомер = 0, СерияНомеров.НачальныйНомер, ПоследнийНомер + 1);
				НоваяСтрока = Хрячки.Добавить();
				НоваяСтрока.НомерХряка =  СерияНомеров.КодСерии + Формат(ПоследнийНомер, "ЧЦ=" + МаксДлинаНомера +"; ЧГ=; ЧВН =");
				НоваяСтрока.НомерГнезда = НомерГнезда;
				НоваяСтрока.Серия = СерияНомеров;
				НоваяСтрока.НомерВСерии = ПоследнийНомер;
			КонецЦикла;
			
		КонецЕсли;
	Иначе
		Если СерияНомеров.НумероватьСвинок Тогда
			Если ПоследнийНомер + КоличествоСвинок> СерияНомеров.КонечныйНомер Тогда
				ОбщегоНазначенияСервер.СообщитьПользователю("В данной серии не достаточно свободных номеров");
				Возврат 0;
			КонецЕсли;
			
			Для сч =1 По КоличествоСвинок Цикл
				ПоследнийНомер = ?(ПоследнийНомер = 0, СерияНомеров.НачальныйНомер, ПоследнийНомер + 1);
				НоваяСтрока = Свинки.Добавить();
				НоваяСтрока.НомерСвиноматки = СерияНомеров.КодСерии + Формат(ПоследнийНомер, "ЧЦ=" + МаксДлинаНомера +"; ЧГ=; ЧВН =");
				НоваяСтрока.НомерГнезда = НомерГнезда;
				НоваяСтрока.Серия = СерияНомеров;
				НоваяСтрока.НомерВСерии = ПоследнийНомер;
			КонецЦикла;
		ИначеЕсли СерияНомеров.НумероватьХрячков Тогда
			Если ПоследнийНомер + КоличествоХрячков> СерияНомеров.КонечныйНомер Тогда
				ОбщегоНазначенияСервер.СообщитьПользователю("В данной серии не достаточно свободных номеров");
				Возврат 0;
			КонецЕсли;
			Для сч =1 По КоличествоСвинок Цикл
				ПоследнийНомер = ?(ПоследнийНомер = 0, СерияНомеров.НачальныйНомер, ПоследнийНомер + 1);
				НоваяСтрока = Хрячки.Добавить();
				НоваяСтрока.НомерХряка =  СерияНомеров.КодСерии + Формат(ПоследнийНомер, "ЧЦ=" + МаксДлинаНомера +"; ЧГ=; ЧВН =");
				НоваяСтрока.НомерГнезда = НомерГнезда;
				НоваяСтрока.Серия = СерияНомеров;
				НоваяСтрока.НомерВСерии = ПоследнийНомер;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	Возврат 1;
	
КонецФункции

&НаКлиенте
Процедура СвиноматкаПриИзменении(Элемент)
	
	ПолучитьДанныеПоГнезду();
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеПоГнезду()
	
	Элементы.НомерГнезда.СписокВыбора.Очистить();
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	сжсвГнездаВНаличииОстатки.Свиноматка,
	//|	сжсвГнездаВНаличииОстатки.НомерГнезда,
	//|	сжсвГнездаВНаличииОстатки.КоличествоОстаток
	//|ИЗ
	//|	РегистрНакопления.сжсвГнездаВНаличии.Остатки КАК сжсвГнездаВНаличииОстатки
	//|ГДЕ
	//|	сжсвГнездаВНаличииОстатки.Свиноматка = &Свиноматка";
	//Запрос.УстановитьПараметр("Свиноматка", Свиноматка);
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	сжсвГнездаВНаличии.НомерГнезда
	               |ИЗ
	               |	РегистрНакопления.сжсвГнездаВНаличии КАК сжсвГнездаВНаличии
	               |ГДЕ
	               |	сжсвГнездаВНаличии.Свиноматка = &Свиноматка";
	Запрос.УстановитьПараметр("Свиноматка", Свиноматка);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Элементы.НомерГнезда.СписокВыбора.Добавить(Выборка.НомерГнезда);
	КонецЦикла;
	Если Элементы.НомерГнезда.СписокВыбора.Количество() = 1 Тогда
		НомерГнезда = Элементы.НомерГнезда.СписокВыбора[0].Значение;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СерияНомеровПриИзменении(Элемент)
	
	ЗаполнитьПоследнийИспользованныйНомер();
	УстановитьВидимостьПолей();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоследнийИспользованныйНомер()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаполненныеСвиноматки.НомерВСерии,
	               |	ЗаполненныеСвиноматки.Серия
	               |ПОМЕСТИТЬ СвиноматкиДокумента
	               |ИЗ
	               |	&ЗаполненныеСвиноматки КАК ЗаполненныеСвиноматки
				   |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗаполненныеХряки.НомерВСерии,
	               |	ЗаполненныеХряки.Серия
	               |ПОМЕСТИТЬ ХрякиДокумента
	               |ИЗ
	               |	&ЗаполненныеХряки КАК ЗаполненныеХряки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	сжсвСерииНомеров.Серия,
	               |	МАКСИМУМ(сжсвСерииНомеров.Номер) КАК Номер
	               |ПОМЕСТИТЬ Использовано
	               |ИЗ
	               |	РегистрСведений.сжсвСерииНомеров КАК сжсвСерииНомеров
	               |ГДЕ
	               |	сжсвСерииНомеров.Серия = &Серия
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	сжсвСерииНомеров.Серия
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	СвиноматкиДокумента.Серия,
	               |	МАКСИМУМ(СвиноматкиДокумента.НомерВСерии)
	               |ИЗ
	               |	СвиноматкиДокумента КАК СвиноматкиДокумента
	               |ГДЕ
	               |	СвиноматкиДокумента.Серия = &Серия
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СвиноматкиДокумента.Серия
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХрякиДокумента.Серия,
	               |	МАКСИМУМ(ХрякиДокумента.НомерВСерии)
	               |ИЗ
	               |	ХрякиДокумента КАК ХрякиДокумента
	               |ГДЕ
	               |	ХрякиДокумента.Серия = &Серия
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ХрякиДокумента.Серия
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Использовано.Серия,
	               |	МАКСИМУМ(Использовано.Номер) КАК Номер
	               |ИЗ
	               |	Использовано КАК Использовано
	               |ГДЕ
	               |	Использовано.Серия = &Серия
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Использовано.Серия";
	Запрос.УстановитьПараметр("Серия", СерияНомеров);
	Запрос.УстановитьПараметр("ЗаполненныеСвиноматки", ЗаполненныеСвиноматки.Выгрузить());
	Запрос.УстановитьПараметр("ЗаполненныеХряки", ЗаполненныеХряки.Выгрузить());
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ПоследнийИсользованныйНомер = СерияНомеров.КодСерии + Формат(Выборка.Номер, СерияНомеров.Метаданные().Реквизиты.НачальныйНомер.Формат);
	Иначе
		ПоследнийИсользованныйНомер = СерияНомеров.КодСерии + Формат(СерияНомеров.НачальныйНомер, СерияНомеров.Метаданные().Реквизиты.НачальныйНомер.Формат);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьПолей()
	
	Если СерияНомеров.НумероватьСвинок Тогда
		Элементы.Свинок.Видимость = Истина;
	Иначе
		Свинки = 0;
		Элементы.Свинок.Видимость = Ложь;
	КонецЕсли;
	
	Если СерияНомеров.НумероватьХрячков Тогда
		Элементы.Хрячков.Видимость = Истина;
	Иначе
		Хрячков = 0;
		Элементы.Хрячков.Видимость = Ложь;
	КонецЕсли;

	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполненныеСвиноматки.Загрузить(Параметры.ЗаполненныеСвиноматки.Выгрузить());
	ЗаполненныеХряки.Загрузить(Параметры.ЗаполненныеХряки.Выгрузить());

КонецПроцедуры


#КонецОбласти