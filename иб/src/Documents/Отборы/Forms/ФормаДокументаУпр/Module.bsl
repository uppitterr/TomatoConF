#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	
	// Первоначальное заполнение нового объекта
	если НЕ ЗначениеЗаполнено(Объект.Ссылка) тогда
		ДокОбъект = РеквизитФормыВЗначение("Объект");
		ОбщегоНазначенияСервер.ПервоначальноеЗаполнениеДокумента(ДокОбъект);
		ЗначениеВРеквизитФормы(ДокОбъект, "Объект");
		
		Объект.Группа = Перечисления.сжсвГруппыЖивотных.Группа_1_3;
	КонецЕсли;
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура ("Ферма", Объект.Ферма));
	
КонецПроцедуры

&НаКлиенте
Процедура СвиноматкиНомерГнездаОтъемаПриИзменении(Элемент)
	
	ТекДан = Элементы.Свиноматки.ТекущиеДанные;
	если ЗначениеЗаполнено (ТекДан.НомерГнездаОтъема) тогда
		ТекДан.НомерГнезда = ТекДан.НомерГнездаОтъема;
				
		ДатаСреза = ?(ЗначениеЗаполнено(Объект.Ссылка), Объект.Дата, КонецДня (Объект.Дата));
		ТекДан.Масса = ПолучитьМассуПоросенкаПоНомеруГнезда(ДатаСреза, Объект.Ферма, ТекДан.НомерГнезда);		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ХрякиНомерГнездаОтъемаПриИзменении(Элемент)
	
	ТекДан = Элементы.Хряки.ТекущиеДанные;
	если ЗначениеЗаполнено (ТекДан.НомерГнездаОтъема) тогда
		ТекДан.НомерГнезда = ТекДан.НомерГнездаОтъема;
				
		ДатаСреза = ?(ЗначениеЗаполнено(Объект.Ссылка), Объект.Дата, КонецДня (Объект.Дата));
		ТекДан.Масса = ПолучитьМассуПоросенкаПоНомеруГнезда(ДатаСреза, Объект.Ферма, ТекДан.НомерГнезда);		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СвиноматкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	если Поле.Имя = "СвиноматкиСвиноматка" тогда
		ТекДан = Элемент.ТекущиеДанные;
		если ЗначениеЗаполнено(ТекДан.Свиноматка) тогда
			СтандартнаяОбработка = ложь;
			ПараметрыФормы = Новый Структура ("Ключ", ТекДан.Свиноматка);
			ОткрытьФорму("Справочник.сжсвСвиноматки.ФормаОбъекта", ПараметрыФормы);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ХрякиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	если Поле.Имя = "ХрякиХряк" тогда
		ТекДан = Элемент.ТекущиеДанные;
		если ЗначениеЗаполнено(ТекДан.Хряк) тогда
			СтандартнаяОбработка = ложь;
			ПараметрыФормы = Новый Структура ("Ключ", ТекДан.Хряк);
			ОткрытьФорму("Справочник.сжсвХряки.ФормаОбъекта", ПараметрыФормы);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФермаПриИзменении(Элемент)
	
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура ("Ферма", Объект.Ферма));
	
КонецПроцедуры

&НаКлиенте
Процедура СвиноматкиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	если НоваяСтрока и Копирование тогда
		Элементы.Свиноматки.ТекущиеДанные.Свиноматка = ПредопределенноеЗначение("Справочник.сжсвСвиноматки.ПустаяСсылка");
		Элемент.ТекущиеДанные.Серия = ПредопределенноеЗначение("Справочник.сжсвСерииНомеров.ПустаяСсылка"); 
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ХрякиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	если НоваяСтрока и Копирование тогда
		Элементы.Хряки.ТекущиеДанные.Хряк = ПредопределенноеЗначение("Справочник.сжсвХряки.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоГнезду(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ЗаполненныеСвиноматки", Объект.Свиноматки);
	ПараметрыОткрытия.Вставить("ЗаполненныеХряки", Объект.Хряки);
	ОткрытьФорму("Документ.Отборы.Форма.ЗаполнениеПоГнезду",ПараметрыОткрытия,ЭтотОбъект);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьМассуПоросенкаПоНомеруГнезда (Дата, Ферма, НомерГнезда)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	сжсвГнездаСрезПоследних.Период КАК Период,
	               |	сжсвГнездаСрезПоследних.Голов,
	               |	сжсвГнездаСрезПоследних.Масса
	               |ИЗ
	               |	РегистрСведений.сжсвГнезда.СрезПоследних(
	               |			&Дата,
	               |			Ферма = &Ферма
	               |				И НомерГнезда = &НомерГнезда) КАК сжсвГнездаСрезПоследних
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Период УБЫВ";
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Ферма", Ферма);
	Запрос.УстановитьПараметр("НомерГнезда", НомерГнезда);
	Результат = Запрос.Выполнить();
	если Результат.Пустой() тогда
		Возврат (0);
	иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		если НЕ Выборка.Голов = 0 тогда
			Возврат (Выборка.Масса/Выборка.Голов);
		иначе
			Возврат (0);
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура РаспределитьМассуСвиноматки(Команда)
	
	ОбщаяМасса = 0;
	МассаВведена = ВвестиЧисло(ОбщаяМасса, "Ввод общей массы",8,2);
	если МассаВведена И НЕ ОбщаяМасса=0 И НЕ ЭтотОбъект.Объект.Свиноматки.Количество()=0 тогда
		ОстатокМассы = ОбщаяМасса;
		МассаОдногоЖивотного = ОбщаяМасса/ЭтотОбъект.Объект.Свиноматки.Количество();
		для каждого Строка из ЭтотОбъект.Объект.Свиноматки цикл
			если ОстатокМассы = 0 тогда
				Прервать;
			КонецЕсли;
			
			если Строка.НомерСтроки = ЭтотОбъект.Объект.Свиноматки.Количество() тогда
				Строка.Масса = ОстатокМассы;
			иначе
				Строка.Масса = МИН (ОстатокМассы, МассаОдногоЖивотного);
				ОстатокМассы = ОстатокМассы - Строка.Масса;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РаспределитьМассуХряки(Команда)
	ОбщаяМасса = 0;
	МассаВведена = ВвестиЧисло(ОбщаяМасса, "Ввод общей массы",8,2);
	если МассаВведена И НЕ ОбщаяМасса=0 И НЕ ЭтотОбъект.Объект.Хряки.Количество()=0 тогда
		ОстатокМассы = ОбщаяМасса;
		МассаОдногоЖивотного = ОбщаяМасса/ЭтотОбъект.Объект.Хряки.Количество();
		для каждого Строка из ЭтотОбъект.Объект.Хряки цикл
			если ОстатокМассы = 0 тогда
				Прервать;
			КонецЕсли;
			
			если Строка.НомерСтроки = ЭтотОбъект.Объект.Хряки.Количество() тогда
				Строка.Масса = ОстатокМассы;
			иначе
				Строка.Масса = МИН (ОстатокМассы, МассаОдногоЖивотного);
				ОстатокМассы = ОстатокМассы - Строка.Масса;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область Подбор

// Заносит в документ информацию, введенную в форме подбора
//
// Параметры
//	Адрес - адрес временного хранилища, в котором хранятся введенные данные
&НаКлиенте
Процедура ОбработатьПодбор(Адрес) Экспорт
	
	ДобавитьЗначенияВТаблЧастьФормы(Адрес);
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьЗначенияВТаблЧастьФормы(АдресВХранилище)
	
	ДанныеСвинки = ПолучитьИзВременногоХранилища(АдресВХранилище.Свинки);
	ДанныеХрячки = ПолучитьИзВременногоХранилища(АдресВХранилище.Хрячки);

	для каждого ЭлементДанные из ДанныеСвинки цикл
		ТекущаяСтрока = Объект.Свиноматки.Добавить();
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока,ЭлементДанные); 		
	конеццикла;
	для каждого ЭлементДанные из ДанныеХрячки цикл
		ТекущаяСтрока = Объект.Хряки.Добавить();
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока,ЭлементДанные); 		
	конеццикла;
	
КонецПроцедуры

#КонецОбласти







