#Область ПроведениеДокумента

Процедура ОбработкаПроведения(Отказ, Режим)
	
	// Проверка на задвоение строк
	МассивКолонок = Новый Массив;
	МассивКолонок.Добавить("НомерСвиноматки");
	ДанныеЗадвоены = ОбщегоНазначенияСервер.ПроверитьДокументНаЗадвоениеСтрок(ЭтотОбъект, "Свиноматки", МассивКолонок);
	если ДанныеЗадвоены тогда
		Отказ = истина;
		Возврат;
	КонецЕсли;
	МассивКолонок = Новый Массив;
	МассивКолонок.Добавить("НомерХряка");
	ДанныеЗадвоены = ОбщегоНазначенияСервер.ПроверитьДокументНаЗадвоениеСтрок(ЭтотОбъект, "Хряки", МассивКолонок);
	если ДанныеЗадвоены тогда
		Отказ = истина;
		Возврат;
	КонецЕсли;
	
	ОтменитьПроведениеВведенныхНаОснованииДокументов(Отказ);
	
	Движения.сжсвГруппыСвиноматок.Записывать = истина;
	Движения.сжсвОценкаСвиноматок.Записывать = истина;
	Движения.сжсвИсторияСвиноматок.Записывать = истина;
	Движения.сжсвГруппыХряков.Записывать = истина;
	Движения.сжсвОценкаХряков.Записывать = истина;
	Движения.сжсвИсторияХряков.Записывать = истина;
	Движения.сжсвЖивотныеВНаличии.Записывать = истина;
	Движения.сжсвДвижениеПоТехнолГруппам.Записывать = истина;
	Движения.сжсвПотомки.Записывать = истина;
	Движения.сжсвСерииНомеров.Записывать = истина;
	
	КорпусФун = ОбщегоНазначенияСервер.ВернутьКорпусПоФунОпции(Ферма, Корпус);
	СекторФун = ОбщегоНазначенияСервер.ВернутьСекторПоФунОпции(Ферма, Сектор);
	ТехнолГруппаФун = ОбщегоНазначенияСервер.ВернутьТехнолГруппуПоФунОпции(Ферма, ТехнолГруппа);
	ГруппировкаФун = ОбщегоНазначенияСервер.ВернутьГруппировкуПоФунОпции(Ферма, Группировка);
	УчетВРазрезеСтанков =ПолучитьФункциональнуюОпцию("УчетПоСтанкам", Новый Структура("Ферма", Ферма));
	ПроверкаПриПроведении = Константы.сжсвПроверкаПриПроведении.Получить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	сжсвОтборРемонтногоМолоднякаСвиноматки.Свиноматка,
	|	МАКСИМУМ(ЗНАЧЕНИЕ(Справочник.сжсвХряки.ПустаяСсылка)) КАК Хряк,
	|	сжсвОтборРемонтногоМолоднякаСвиноматки.Станок,
	|	МАКСИМУМ(сжсвОтборРемонтногоМолоднякаСвиноматки.Масса) КАК Масса,
	|	МАКСИМУМ(1) КАК Количество,
	|	РАЗНОСТЬДАТ(сжсвОтборРемонтногоМолоднякаСвиноматки.Свиноматка.ДатаРождения, сжсвОтборРемонтногоМолоднякаСвиноматки.Ссылка.Дата, ДЕНЬ) КАК Возраст,
	|	сжсвОтборРемонтногоМолоднякаСвиноматки.Свиноматка.ДатаРождения КАК ДатаРождения,
	|	сжсвОтборРемонтногоМолоднякаСвиноматки.Свиноматка.Мать КАК Мать,
	|	сжсвОтборРемонтногоМолоднякаСвиноматки.Свиноматка.Отец КАК Отец,
	|	сжсвОтборРемонтногоМолоднякаСвиноматки.НомерГнезда КАК НомерГнезда
	|ПОМЕСТИТЬ ДанныеДокумента
	|ИЗ
	|	Документ.Отборы.Свиноматки КАК сжсвОтборРемонтногоМолоднякаСвиноматки
	|ГДЕ
	|	сжсвОтборРемонтногоМолоднякаСвиноматки.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	сжсвОтборРемонтногоМолоднякаСвиноматки.Станок,
	|	сжсвОтборРемонтногоМолоднякаСвиноматки.Свиноматка,
	|	РАЗНОСТЬДАТ(сжсвОтборРемонтногоМолоднякаСвиноматки.Свиноматка.ДатаРождения, сжсвОтборРемонтногоМолоднякаСвиноматки.Ссылка.Дата, ДЕНЬ),
	|	сжсвОтборРемонтногоМолоднякаСвиноматки.Свиноматка.ДатаРождения,
	|	сжсвОтборРемонтногоМолоднякаСвиноматки.НомерГнезда,
	|	сжсвОтборРемонтногоМолоднякаСвиноматки.Свиноматка.Мать,
	|	сжсвОтборРемонтногоМолоднякаСвиноматки.Свиноматка.Отец
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЗНАЧЕНИЕ(Справочник.сжсвСвиноматки.ПустаяСсылка)),
	|	сжсвОтборРемонтногоМолоднякаХряки.Хряк,
	|	сжсвОтборРемонтногоМолоднякаХряки.Станок,
	|	МАКСИМУМ(сжсвОтборРемонтногоМолоднякаХряки.Масса),
	|	МАКСИМУМ(1),
	|	РАЗНОСТЬДАТ(сжсвОтборРемонтногоМолоднякаХряки.Хряк.ДатаРождения, сжсвОтборРемонтногоМолоднякаХряки.Ссылка.Дата, ДЕНЬ),
	|	сжсвОтборРемонтногоМолоднякаХряки.Хряк.ДатаРождения,
	|	сжсвОтборРемонтногоМолоднякаХряки.Хряк.Мать,
	|	сжсвОтборРемонтногоМолоднякаХряки.Хряк.Отец,
	|	сжсвОтборРемонтногоМолоднякаХряки.НомерГнезда
	|ИЗ
	|	Документ.Отборы.Хряки КАК сжсвОтборРемонтногоМолоднякаХряки
	|ГДЕ
	|	сжсвОтборРемонтногоМолоднякаХряки.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	сжсвОтборРемонтногоМолоднякаХряки.Станок,
	|	сжсвОтборРемонтногоМолоднякаХряки.Хряк,
	|	РАЗНОСТЬДАТ(сжсвОтборРемонтногоМолоднякаХряки.Хряк.ДатаРождения, сжсвОтборРемонтногоМолоднякаХряки.Ссылка.Дата, ДЕНЬ),
	|	сжсвОтборРемонтногоМолоднякаХряки.Хряк.ДатаРождения,
	|	сжсвОтборРемонтногоМолоднякаХряки.НомерГнезда,
	|	сжсвОтборРемонтногоМолоднякаХряки.Хряк.Мать,
	|	сжсвОтборРемонтногоМолоднякаХряки.Хряк.Отец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	сжсвЖивотныеВНаличииОстатки.Ферма,
	|	сжсвЖивотныеВНаличииОстатки.Сектор,
	|	сжсвЖивотныеВНаличииОстатки.Станок,
	|	сжсвЖивотныеВНаличииОстатки.Свиноматка,
	|	сжсвЖивотныеВНаличииОстатки.Хряк,
	|	сжсвЖивотныеВНаличииОстатки.ГруппаЖивотных,
	|	сжсвЖивотныеВНаличииОстатки.ТехнолГруппа,
	|	сжсвЖивотныеВНаличииОстатки.Группировка,
	|	сжсвЖивотныеВНаличииОстатки.Партия,
	|	ЕСТЬNULL(сжсвЖивотныеВНаличииОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(сжсвЖивотныеВНаличииОстатки.МассаОстаток, 0) КАК МассаОстаток
	|ИЗ
	|	РегистрНакопления.сжсвЖивотныеВНаличии.Остатки(
	|			&МоментВремени,
	|			Ферма = &Ферма
	|				И Сектор = &Сектор
	|				И ГруппаЖивотных = &Группа
	|				И ТехнолГруппа = &ТехнолГруппа
	|				И Группировка = &Группировка
	|				И Свиноматка = ЗНАЧЕНИЕ(Справочник.сжсвСвиноматки.ПустаяСсылка)
	|				И Хряк = ЗНАЧЕНИЕ(Справочник.сжсвХряки.ПустаяСсылка)
	|				И Станок = ЗНАЧЕНИЕ(Справочник.сжсвСтанки.ПустаяСсылка)) КАК сжсвЖивотныеВНаличииОстатки
	|ИТОГИ
	|	СУММА(КоличествоОстаток),
	|	СУММА(МассаОстаток)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Свиноматка,
	|	ДанныеДокумента.Хряк,
	|	ДанныеДокумента.Станок,
	|	ДанныеДокумента.Масса КАК Масса,
	|	ДанныеДокумента.Количество КАК Количество,
	|	ДанныеДокумента.Возраст,
	|	ДанныеДокумента.ДатаРождения,
	|	ДанныеДокумента.Мать,
	|	ДанныеДокумента.Отец,
	|	ДанныеДокумента.НомерГнезда
	|ИЗ
	|	ДанныеДокумента КАК ДанныеДокумента
	|ИТОГИ
	|	СУММА(Масса),
	|	СУММА(Количество)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Отцы.Отец КАК Хряк,
	|	сжсвЖивотныеВНаличииОстатки.Ферма,
	|	сжсвЖивотныеВНаличииОстатки.Сектор.Владелец КАК Корпус,
	|	сжсвЖивотныеВНаличииОстатки.Сектор,
	|	сжсвЖивотныеВНаличииОстатки.Станок,
	|	сжсвЖивотныеВНаличииОстатки.ГруппаЖивотных,
	|	сжсвЖивотныеВНаличииОстатки.ТехнолГруппа,
	|	сжсвЖивотныеВНаличииОстатки.Группировка,
	|	сжсвЖивотныеВНаличииОстатки.КоличествоОстаток КАК Количество,
	|	сжсвЖивотныеВНаличииОстатки.МассаОстаток КАК Масса
	|ПОМЕСТИТЬ ПереводыПредв
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеДокумента.Отец КАК Отец
	|	ИЗ
	|		ДанныеДокумента КАК ДанныеДокумента
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеДокумента.Отец) КАК Отцы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.сжсвЖивотныеВНаличии.Остатки(
	|				&МоментВремени,
	|				ГруппаЖивотных = ЗНАЧЕНИЕ(Перечисление.сжсвГруппыЖивотных.ПроверяемыеХряки)
	|					И Хряк В
	|						(ВЫБРАТЬ
	|							ДанныеДокумента.Отец КАК Хряк
	|						ИЗ
	|							ДанныеДокумента)) КАК сжсвЖивотныеВНаличииОстатки
	|		ПО Отцы.Отец = сжсвЖивотныеВНаличииОстатки.Хряк
	|ГДЕ
	|	сжсвЖивотныеВНаличииОстатки.КоличествоОстаток ЕСТЬ НЕ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПереводыПредв.Хряк,
	|	ПереводыПредв.Ферма,
	|	ПереводыПредв.Корпус,
	|	ПереводыПредв.Сектор,
	|	ПереводыПредв.Станок,
	|	ПереводыПредв.ГруппаЖивотных,
	|	ПереводыПредв.ТехнолГруппа,
	|	ПереводыПредв.Группировка,
	|	ПереводыПредв.Количество,
	|	ПереводыПредв.Масса
	|ИЗ
	|	ПереводыПредв КАК ПереводыПредв
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПереводыГрупп.Ферма,
	|	ПереводыГрупп.Корпус,
	|	ПереводыГрупп.Сектор,
	|	ПереводыГрупп.ГруппаЖивотных,
	|	ПереводыГрупп.ТехнолГруппа,
	|	ПереводыГрупп.Группировка,
	|	МАКСИМУМ(ЕСТЬNULL(сжсвПереводИзГруппыВГруппу.Ссылка, ЗНАЧЕНИЕ(Документ.сжсвПереводИзГруппыВГруппу.ПустаяСсылка))) КАК ДокументСсылка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПереводыПредв.Ферма КАК Ферма,
	|		ПереводыПредв.Корпус КАК Корпус,
	|		ПереводыПредв.Сектор КАК Сектор,
	|		ПереводыПредв.Станок КАК Станок,
	|		ПереводыПредв.ГруппаЖивотных КАК ГруппаЖивотных,
	|		ПереводыПредв.ТехнолГруппа КАК ТехнолГруппа,
	|		ПереводыПредв.Группировка КАК Группировка
	|	ИЗ
	|		ПереводыПредв КАК ПереводыПредв
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПереводыПредв.ГруппаЖивотных,
	|		ПереводыПредв.ТехнолГруппа,
	|		ПереводыПредв.Ферма,
	|		ПереводыПредв.Корпус,
	|		ПереводыПредв.Группировка,
	|		ПереводыПредв.Станок,
	|		ПереводыПредв.Сектор) КАК ПереводыГрупп
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.сжсвПереводИзГруппыВГруппу КАК сжсвПереводИзГруппыВГруппу
	|		ПО ПереводыГрупп.Ферма = сжсвПереводИзГруппыВГруппу.Ферма
	|			И ПереводыГрупп.Корпус = сжсвПереводИзГруппыВГруппу.Корпус
	|			И ПереводыГрупп.Сектор = сжсвПереводИзГруппыВГруппу.Сектор
	|			И ПереводыГрупп.ТехнолГруппа = сжсвПереводИзГруппыВГруппу.ТехнолГруппа
	|			И ПереводыГрупп.ГруппаЖивотных = сжсвПереводИзГруппыВГруппу.Группа
	|			И ПереводыГрупп.Группировка = сжсвПереводИзГруппыВГруппу.Группировка
	|			И (сжсвПереводИзГруппыВГруппу.ДокументОснование = &Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПереводыГрупп.Ферма,
	|	ПереводыГрупп.Корпус,
	|	ПереводыГрупп.Сектор,
	|	ПереводыГрупп.ГруппаЖивотных,
	|	ПереводыГрупп.ТехнолГруппа,
	|	ПереводыГрупп.Группировка";
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Ферма", Ферма);
	Запрос.УстановитьПараметр("Сектор", СекторФун);
	Запрос.УстановитьПараметр("Группа", Группа);
	Запрос.УстановитьПараметр("ТехнолГруппа", ТехнолГруппаФун);
	Запрос.УстановитьПараметр("Группировка", ГруппировкаФун);
	РезультатПакет = Запрос.ВыполнитьПакет();
	
	ВыборкаОстаткиИтоги = РезультатПакет[1].Выбрать (ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаИтоги = РезультатПакет[2].Выбрать (ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаИтоги.Следующий();
	ВыборкаПеревод = РезультатПакет[4].Выбрать();
	ВыборкаРазрезыПеревод = РезультатПакет[5].Выбрать();
	
	//Если ПроверкаПриПроведении Тогда
	если НЕ ВыборкаОстаткиИтоги.Следующий() тогда
		ТекстСообщения = "На остатке нет требуемого количества безномерных животных";
		ОбщегоНазначенияСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект);
		Отказ = истина;
	иначе
		если ВыборкаИтоги.Количество > ВыборкаОстаткиИтоги.КоличествоОстаток тогда
			ТекстСообщения = "На остатке нет требуемого количества безномерных животных";
			ОбщегоНазначенияСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект);
			Отказ = истина;
		иначеЕсли ВыборкаИтоги.Количество = ВыборкаОстаткиИтоги.КоличествоОстаток
			И ВыборкаИтоги.Масса < ВыборкаОстаткиИтоги.МассаОстаток тогда
			ТекстСообщения = "Списываемое количество безномерных животных не соответствует списываемой массе";
			ОбщегоНазначенияСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект);
			Отказ = истина;
		КонецЕсли;
	КонецЕсли;
	//КонецЕсли;
	
	если Отказ тогда
		Возврат;
	КонецЕсли;
	
	// Списание безномерных животных
	ОсталосьСписатьМасса = ВыборкаИтоги.Масса;
	ОсталосьСписатьКол = ВыборкаИтоги.Количество;
	
	ВыборкаПартии = ВыборкаОстаткиИтоги.Выбрать();
	если ВыборкаИтоги.Масса > ВыборкаОстаткиИтоги.МассаОстаток тогда
		МассаПривес = ВыборкаИтоги.Масса - ВыборкаОстаткиИтоги.МассаОстаток;
		
		ВыборкаПартии.Следующий();
		
		Движение = Движения.сжсвЖивотныеВНаличии.ДобавитьПриход();
		Движение.Период = Дата;
		Движение.Ферма = Ферма;
		Движение.Сектор = СекторФун;
		Движение.ГруппаЖивотных = Группа;
		Движение.ТехнолГруппа = ТехнолГруппаФун;
		Движение.Группировка = ГруппировкаФун;
		Движение.Причина = Перечисления.сжсвПричиныДвиженияПоголовья.Привес;
		Движение.Партия = ВыборкаПартии.Партия;
		Движение.Количество = 0;
		Движение.Масса = МассаПривес;
		
		Движение = Движения.сжсвДвижениеПоТехнолГруппам.Добавить();
		Движение.Период = Дата;
		Движение.Ферма = Ферма;
		Движение.Сектор = СекторФун;
		Движение.ТехнолГруппа = ТехнолГруппаФун;
		Движение.ГруппаЖивотных = Группа;
		Движение.Группировка = ГруппировкаФун;
		Движение.Причина = Перечисления.сжсвПричиныДвиженияПоголовья.Привес;
		Движение.Количество = 0;
		Движение.Масса = МассаПривес;
		
		Движение = Движения.сжсвЖивотныеВНаличии.ДобавитьРасход();
		Движение.Период = Дата;
		Движение.Ферма = Ферма;
		Движение.Сектор = СекторФун;
		Движение.ГруппаЖивотных = Группа;
		Движение.ТехнолГруппа = ТехнолГруппаФун;
		Движение.Группировка = ГруппировкаФун;
		Движение.Партия = ВыборкаПартии.Партия;
		Движение.Количество = МИН (ОсталосьСписатьКол, ВыборкаПартии.КоличествоОстаток);
		Движение.Масса = МассаПривес + ВыборкаПартии.МассаОстаток;
		
		ОсталосьСписатьКол = ОсталосьСписатьКол - МИН (ОсталосьСписатьКол, ВыборкаПартии.КоличествоОстаток);
		ОсталосьСписатьМасса = ОсталосьСписатьМасса - (МассаПривес + ВыборкаПартии.МассаОстаток);
	КонецЕсли;
	
	пока ОсталосьСписатьМасса > 0 ИЛИ ОсталосьСписатьКол > 0 цикл
		если НЕ ВыборкаПартии.Следующий() тогда
			Прервать;
		КонецЕсли;
		
		Движение = Движения.сжсвЖивотныеВНаличии.ДобавитьРасход();
		Движение.Период = Дата;
		Движение.Ферма = Ферма;
		Движение.Сектор = СекторФун;
		Движение.ГруппаЖивотных = Группа;
		Движение.ТехнолГруппа = ТехнолГруппаФун;
		Движение.Группировка = ГруппировкаФун;
		Движение.Партия = ВыборкаПартии.Партия;
		Движение.Количество = МИН (ОсталосьСписатьКол, ВыборкаПартии.КоличествоОстаток);
		Движение.Масса = МИН (ОсталосьСписатьМасса, ВыборкаПартии.МассаОстаток);
		
		ОсталосьСписатьКол = ОсталосьСписатьКол - МИН(ОсталосьСписатьКол, ВыборкаПартии.КоличествоОстаток);
		ОсталосьСписатьМасса = ОсталосьСписатьМасса - МИН (ОсталосьСписатьМасса, ВыборкаПартии.МассаОстаток);
	КонецЦикла;
	
	ВыборкаПартии.Сбросить();
	ВыборкаПартии.Следующий();
	Партия = ВыборкаПартии.Партия;
	
	Выборка = ВыборкаИтоги.Выбрать();
	пока Выборка.Следующий() цикл
		Движение = Движения.сжсвЖивотныеВНаличии.ДобавитьПриход();
		Движение.Период = Дата;
		Движение.Ферма = Ферма;
		Движение.Сектор = СекторФун;
		Движение.Станок = ? (УчетВРазрезеСтанков, Выборка.Станок, Справочники.сжсвСтанки.ПустаяСсылка());
		Движение.ГруппаЖивотных = Группа;
		Движение.ТехнолГруппа = ТехнолГруппаФун;
		Движение.Группировка = ГруппировкаФун;
		Движение.Свиноматка = Выборка.Свиноматка;
		Движение.Хряк = Выборка.Хряк;
		Движение.Партия = Партия;
		Движение.Количество = 1;
		Движение.Масса = Выборка.Масса;
		
		если ЗначениеЗаполнено(Выборка.Свиноматка) тогда
			// регистр ГруппыСвиноматок 
			Движение = Движения.сжсвГруппыСвиноматок.Добавить();
			Движение.Период = Дата;
			Движение.Свиноматка = Выборка.Свиноматка;
			Движение.Группа = Группа;
			
			// регистр ОценкаСвиноматок
			Движение = Движения.сжсвОценкаСвиноматок.Добавить();
			Движение.Период = Дата+1;
			Движение.Свиноматка = Выборка.Свиноматка;
			Движение.ТипОценки = Перечисления.сжсвТипОценки.ПриОтборе;
			Движение.Масса = Выборка.Масса;
			если ЗначениеЗаполнено (Выборка.ДатаРождения) тогда
				Движение.Возраст = Выборка.Возраст;
			КонецЕсли;
			Движение.Ферма = Ферма;
			
			// регистр ИсторияСвиноматок
			Движение = Движения.сжсвИсторияСвиноматок.Добавить();
			Движение.Период = Дата;
			Движение.Свиноматка = Выборка.Свиноматка;
			Движение.Событие = Перечисления.сжсвСобытия.Отбор;
			Движение.Документ = Ссылка;
			Движение.ДатаСобытия = Дата;
			
			Движение = Движения.сжсвИсторияСвиноматок.Добавить();
			Движение.Период = Дата+1;
			Движение.Свиноматка = Выборка.Свиноматка;
			Движение.Событие = Перечисления.сжсвСобытия.Оценка;
			Движение.Документ = Ссылка;
			Движение.ДатаСобытия = Дата;
			
		иначе
			// регистр ГруппыХряков 
			Движение = Движения.сжсвГруппыХряков.Добавить();
			Движение.Период = Дата;
			Движение.Хряк = Выборка.Хряк;
			Движение.Группа = Группа;
			
			// регистр ОценкаХряков
			Движение = Движения.сжсвОценкаХряков.Добавить();
			Движение.Период = Дата+1;
			Движение.Хряк = Выборка.Хряк;
			Движение.ТипОценки = Перечисления.сжсвТипОценки.ПриОтборе;
			Движение.Масса = Выборка.Масса;
			если ЗначениеЗаполнено (Выборка.ДатаРождения) тогда
				Движение.Возраст = Выборка.Возраст;
			КонецЕсли;
			Движение.Ферма = Ферма;
			
			// регистр ИсторияХряков
			Движение = Движения.сжсвИсторияХряков.Добавить();
			Движение.Период = Дата;
			Движение.Хряк = Выборка.Хряк;
			Движение.Событие = Перечисления.сжсвСобытия.Отбор;
			Движение.Документ = Ссылка;
			Движение.ДатаСобытия = Дата;
			
			Движение = Движения.сжсвИсторияХряков.Добавить();
			Движение.Период = Дата+1;
			Движение.Хряк = Выборка.Хряк;
			Движение.Событие = Перечисления.сжсвСобытия.Оценка;
			Движение.Документ = Ссылка;
			Движение.ДатаСобытия = Дата;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.НомерГнезда) Тогда
			// регистр Потомки
			Движение = Движения.сжсвПотомки.Добавить();
			Движение.Период = Дата;
			Движение.Свиноматка = Выборка.Мать;
			Движение.Хряк = Выборка.Отец;
			Движение.НомерГнезда = Выборка.НомерГнезда;
			Движение.Потомок = ? (ЗначениеЗаполнено (Выборка.Свиноматка), Выборка.Свиноматка, Выборка.Хряк);
		КонецЕсли;
	КонецЦикла;
	
	// Перевод проверяемых хряков в группу хряки
	МассаХряков = Константы.сжсвМассаХряковПриПереводеВОсновные.Получить();

	УсловиеПоиска = Новый Структура ("Ферма, Корпус, Сектор, ГруппаЖивотных, ТехнолГруппа, Группировка");
	пока ВыборкаРазрезыПеревод.Следующий() цикл
		УсловиеПоиска.Ферма = ВыборкаРазрезыПеревод.Ферма;
		УсловиеПоиска.Корпус = ВыборкаРазрезыПеревод.Корпус;
		УсловиеПоиска.Сектор = ВыборкаРазрезыПеревод.Сектор;
		УсловиеПоиска.ГруппаЖивотных = ВыборкаРазрезыПеревод.ГруппаЖивотных;
		УсловиеПоиска.ТехнолГруппа = ВыборкаРазрезыПеревод.ТехнолГруппа;
		УсловиеПоиска.Группировка = ВыборкаРазрезыПеревод.Группировка;
		
		если НЕ ЗначениеЗаполнено (ВыборкаРазрезыПеревод.ДокументСсылка) тогда
			ДокОбъект = Документы.сжсвПереводИзГруппыВГруппу.СоздатьДокумент();
			ВидДействия = "Создан ";
		иначе
			ДокОбъект = ВыборкаРазрезыПеревод.ДокументСсылка.ПолучитьОбъект();
			ДокОбъект.Хряки.Очистить();
			ВидДействия = "Перезаполнен ";
		КонецЕсли;
		
		ДокОбъект.Дата = Дата;
		ДокОбъект.Ферма = ВыборкаРазрезыПеревод.Ферма;;
		ДокОбъект.Корпус = ВыборкаРазрезыПеревод.Корпус;
		ДокОбъект.КорпусКуда = ВыборкаРазрезыПеревод.Корпус;
		ДокОбъект.Сектор = ВыборкаРазрезыПеревод.Сектор;
		ДокОбъект.СекторКуда = ВыборкаРазрезыПеревод.Сектор;
		ДокОбъект.Группа = Перечисления.сжсвГруппыЖивотных.ПроверяемыеХряки;
		ДокОбъект.ГруппаКуда = Перечисления.сжсвГруппыЖивотных.Хряки;
		ДокОбъект.ТехнолГруппа = ВыборкаРазрезыПеревод.ТехнолГруппа;
		ДокОбъект.ТехнолГруппаКуда = ВыборкаРазрезыПеревод.ТехнолГруппа;
		ДокОбъект.Группировка = ВыборкаРазрезыПеревод.Группировка;
		ДокОбъект.ГруппировкаКуда = ВыборкаРазрезыПеревод.Группировка;
		ДокОбъект.ДокументОснование = Ссылка;
		ДокОбъект.СформированАвтоматически = Истина;
		
		ВыборкаПеревод.Сбросить();
		пока ВыборкаПеревод.НайтиСледующий (УсловиеПоиска) цикл
			НоваяСтрока = ДокОбъект.Хряки.Добавить();
			НоваяСтрока.Хряк = ВыборкаПеревод.Хряк;
			НоваяСтрока.Масса = ?(МассаХряков = 0, ВыборкаПеревод.Масса, МассаХряков);
			НОваяСтрока.Станок = ВыборкаПеревод.Станок;
		КонецЦикла;
		
		ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
		ОбщегоНазначенияСервер.СообщитьПользователю(ВидДействия + "документ " + ДокОбъект, ДокОбъект);
		Попытка
			ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			ОбщегоНазначенияСервер.СообщитьПользователю("При попытке проведения возникла ошибка: " + ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
	
	Для Каждого ТекстрокаСвиноматки Из Свиноматки Цикл
		Если ЗначениеЗаполнено(ТекстрокаСвиноматки.Серия) Тогда
			Движение = Движения.сжсвСерииНомеров.Добавить();
			Движение.Период = Дата;
			Движение.Серия = ТекстрокаСвиноматки.Серия;
			Движение.Номер = ТекстрокаСвиноматки.НомерВСерии;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ТекстрокаХряки Из Хряки Цикл
		Если ЗначениеЗаполнено(ТекстрокаХряки.Серия) Тогда
			Движение = Движения.сжсвСерииНомеров.Добавить();
			Движение.Период = Дата;
			Движение.Серия = ТекстрокаХряки.Серия;
			Движение.Номер = ТекстрокаХряки.НомерВСерии;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	если РежимЗаписи = РежимЗаписиДокумента.Проведение тогда
		СоздатьЭлементыСправочников();
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьЭлементыСправочников()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	сжсвОтборРемонтногоМолоднякаСвиноматки.Свиноматка КАК Ссылка,
	|	сжсвОтборРемонтногоМолоднякаСвиноматки.НомерГнезда,
	|	сжсвОтборРемонтногоМолоднякаСвиноматки.НомерСвиноматки КАК Номер,
	|	сжсвОтборРемонтногоМолоднякаСвиноматки.ДополнительныйНомерСвиноматки КАК ДопНомер,
	|	сжсвОтборРемонтногоМолоднякаСвиноматки.СосковПравых,
	|	сжсвОтборРемонтногоМолоднякаСвиноматки.СосковЛевых,
	|	""Свиноматка"" КАК Вид,
	|	сжсвОтборРемонтногоМолоднякаСвиноматки.НомерСтроки
	|ПОМЕСТИТЬ Свиноматки
	|ИЗ
	|	&ТаблицаСвиноматки КАК сжсвОтборРемонтногоМолоднякаСвиноматки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	сжсвОтборРемонтногоМолоднякаХряки.Хряк КАК Ссылка,
	|	сжсвОтборРемонтногоМолоднякаХряки.НомерГнезда,
	|	сжсвОтборРемонтногоМолоднякаХряки.НомерХряка КАК Номер,
	|	сжсвОтборРемонтногоМолоднякаХряки.ДополнительныйНомерХряка КАК ДопНомер,
	|	сжсвОтборРемонтногоМолоднякаХряки.СосковПравых,
	|	сжсвОтборРемонтногоМолоднякаХряки.СосковЛевых,
	|	""Хряк"" КАК Вид,
	|	сжсвОтборРемонтногоМолоднякаХряки.НомерСтроки
	|ПОМЕСТИТЬ Хряки
	|ИЗ
	|	&ТаблицаХряки КАК сжсвОтборРемонтногоМолоднякаХряки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Свиноматки.Ссылка,
	|	Свиноматки.НомерГнезда,
	|	Свиноматки.Номер,
	|	Свиноматки.ДопНомер,
	|	Свиноматки.СосковПравых,
	|	Свиноматки.СосковЛевых,
	|	Свиноматки.Вид,
	|	Свиноматки.НомерСтроки
	|ПОМЕСТИТЬ ДанныеДокумента
	|ИЗ
	|	Свиноматки КАК Свиноматки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Хряки.Ссылка,
	|	Хряки.НомерГнезда,
	|	Хряки.Номер,
	|	Хряки.ДопНомер,
	|	Хряки.СосковПравых,
	|	Хряки.СосковЛевых,
	|	Хряки.Вид,
	|	Хряки.НомерСтроки
	|ИЗ
	|	Хряки КАК Хряки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	сжсвГнездаСрезПоследних.Период,
	|	сжсвГнездаСрезПоследних.НомерГнезда,
	|	сжсвГнездаСрезПоследних.Мать,
	|	сжсвГнездаСрезПоследних.Отец,
	|	сжсвГнездаСрезПоследних.ДатаРождения
	|ПОМЕСТИТЬ Гнезда
	|ИЗ
	|	РегистрСведений.сжсвГнезда.СрезПоследних(
	|			&МоментВремени,
	|			Ферма = &Ферма
	|				И НомерГнезда В
	|					(ВЫБРАТЬ
	|						ДанныеДокумента.НомерГнезда
	|					ИЗ
	|						ДанныеДокумента)) КАК сжсвГнездаСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	сжсвСемейства.Наименование,
	|	МАКСИМУМ(сжсвСемейства.Ссылка) КАК Ссылка
	|ПОМЕСТИТЬ Семейства
	|ИЗ
	|	Справочник.сжсвСемейства КАК сжсвСемейства
	|
	|СГРУППИРОВАТЬ ПО
	|	сжсвСемейства.Наименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(сжсвЛинии.Ссылка) КАК Ссылка,
	|	сжсвЛинии.Наименование
	|ПОМЕСТИТЬ Линии
	|ИЗ
	|	Справочник.сжсвЛинии КАК сжсвЛинии
	|
	|СГРУППИРОВАТЬ ПО
	|	сжсвЛинии.Наименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	сжсвПороды.ПородаМатери,
	|	сжсвПороды.ПородаОтца,
	|	МАКСИМУМ(сжсвПороды.Ссылка) КАК Ссылка
	|ПОМЕСТИТЬ Породы
	|ИЗ
	|	Справочник.сжсвПороды КАК сжсвПороды
	|
	|СГРУППИРОВАТЬ ПО
	|	сжсвПороды.ПородаМатери,
	|	сжсвПороды.ПородаОтца
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.НомерСтроки,
	|	ДанныеДокумента.Ссылка,
	|	ДанныеДокумента.НомерГнезда,
	|	ДанныеДокумента.Номер,
	|	ДанныеДокумента.ДопНомер,
	|	ДанныеДокумента.СосковПравых,
	|	ДанныеДокумента.СосковЛевых,
	|	ДанныеДокумента.Вид,
	|	ЕСТЬNULL(Гнезда.Мать, ЗНАЧЕНИЕ(Перечисление.сжсвВетви.ПустаяСсылка)) КАК Мать,
	|	ЕСТЬNULL(Гнезда.Отец, ЗНАЧЕНИЕ(Справочник.сжсвХряки.ПустаяСсылка)) КАК Отец,
	|	ЕСТЬNULL(Гнезда.ДатаРождения, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаРождения,
	|	ВЫБОР
	|		КОГДА Гнезда.Мать ЕСТЬ НЕ NULL 
	|			ТОГДА Гнезда.Мать.Порода
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.сжсвПороды.ПустаяСсылка)
	|	КОНЕЦ КАК МатьПорода,
	|	ВЫБОР
	|		КОГДА Гнезда.Отец ЕСТЬ НЕ NULL 
	|			ТОГДА Гнезда.Отец.Порода
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.сжсвПороды.ПустаяСсылка)
	|	КОНЕЦ КАК ОтецПорода,
	|	ВЫБОР
	|		КОГДА Гнезда.Мать ЕСТЬ НЕ NULL 
	|			ТОГДА Гнезда.Мать.Кличка
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК МатьКличка,
	|	ВЫБОР
	|		КОГДА Гнезда.Отец ЕСТЬ НЕ NULL 
	|			ТОГДА Гнезда.Отец.Кличка
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ОтецКличка,
	|	ЕСТЬNULL(Семейства.Ссылка, ЗНАЧЕНИЕ(Справочник.сжсвСемейства.ПустаяСсылка)) КАК Семейство,
	|	ЕСТЬNULL(Линии.Ссылка, ЗНАЧЕНИЕ(Справочник.сжсвЛинии.ПустаяСсылка)) КАК Линия,
	|	ЕСТЬNULL(Породы.Ссылка, ЗНАЧЕНИЕ(Справочник.сжсвПороды.ПустаяСсылка)) КАК Порода,
	|	ЕСТЬNULL(Гнезда.Мать.Ветвь, ЗНАЧЕНИЕ(Перечисление.сжсвВетви.ПустаяСсылка)) КАК ВетвьМатери,
	|	ЕСТЬNULL(Гнезда.Отец.Ветвь, ЗНАЧЕНИЕ(Перечисление.сжсвВетви.ПустаяСсылка)) КАК ВетвьОтца,
	|	ЕСТЬNULL(Гнезда.Мать.Поколение, 0) КАК ПоколениеМатери
	|ИЗ
	|	ДанныеДокумента КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Гнезда.НомерГнезда КАК НомерГнезда,
	|			МАКСИМУМ(Гнезда.Период) КАК ПериодМакс
	|		ИЗ
	|			Гнезда КАК Гнезда
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Гнезда.НомерГнезда) КАК ГнездаПоследнее
	|			ЛЕВОЕ СОЕДИНЕНИЕ Гнезда КАК Гнезда
	|				ЛЕВОЕ СОЕДИНЕНИЕ Породы КАК Породы
	|				ПО Гнезда.Мать.Порода = Породы.ПородаМатери
	|					И Гнезда.Отец.Порода = Породы.ПородаОтца
	|				ЛЕВОЕ СОЕДИНЕНИЕ Семейства КАК Семейства
	|				ПО Гнезда.Мать.Кличка = Семейства.Наименование
	|				ЛЕВОЕ СОЕДИНЕНИЕ Линии КАК Линии
	|				ПО Гнезда.Отец.Кличка = Линии.Наименование
	|			ПО ГнездаПоследнее.НомерГнезда = Гнезда.НомерГнезда
	|				И ГнездаПоследнее.ПериодМакс = Гнезда.Период
	|		ПО (ВЫБОР
	|				КОГДА ДанныеДокумента.НомерГнезда = 0
	|					ТОГДА ЛОЖЬ
	|				ИНАЧЕ ДанныеДокумента.НомерГнезда = ГнездаПоследнее.НомерГнезда
	|			КОНЕЦ)";
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("ТаблицаСвиноматки", Свиноматки.Выгрузить());
	Запрос.УстановитьПараметр("ТаблицаХряки", Хряки.Выгрузить());
	Запрос.УстановитьПараметр("Ферма", Ферма);
	Выборка = Запрос.Выполнить().Выбрать();		
	
	СправочникиГибриды = ВернутьСправочникиГибриды();
	НашеХозяйство = Справочники.сжсвХозяйства.НашеХозяйство;
	пока Выборка.Следующий() цикл
		если Выборка.Вид = "Свиноматка" тогда
			если ЗначениеЗаполнено (Выборка.Ссылка) тогда
				СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
			иначе
				СпрОбъект = Справочники.сжсвСвиноматки.СоздатьЭлемент();
			КонецЕсли;
			
			СпрОбъект.Наименование = Выборка.Номер;
			СпрОбъект.ДополнительныйНомер = Выборка.ДопНомер;
			СпрОбъект.ДатаРождения = Выборка.ДатаРождения;
			
			СпрОбъект.Мать = Выборка.Мать;
			СпрОбъект.Отец = Выборка.Отец;
			//если НЕ Выборка.МатьПорода = Выборка.ОтецПорода тогда
			если Выборка.Порода = Справочники.сжсвПороды.ПустаяСсылка()  И НЕ Выборка.НомерГнезда = 0 тогда
				СпрОбъект.Порода = СправочникиГибриды.Порода;
				СпрОбъект.Кличка = "ГИБРИД";
				СпрОбъект.Стадо = Перечисления.сжсвВидыСтада.F1;
				СпрОбъект.Семейство = СправочникиГибриды.Семейство;
			иначе
				СпрОбъект.Порода = Выборка.Порода;
				СпрОбъект.Семейство = Выборка.Семейство;
				Если НЕ Выборка.МатьПорода = Выборка.ОтецПорода И НЕ Выборка.НомерГнезда = 0 тогда
					СпрОбъект.Кличка = "ГИБРИД";
					СпрОбъект.Стадо = Перечисления.сжсвВидыСтада.F1;
				КОнецЕсли;
				
			КонецЕсли;
			
			СпрОбъект.НомерГнезда = Выборка.НомерГнезда;
			СпрОбъект.СосковПравых = Выборка.СосковПравых;
			СпрОбъект.СосковЛевых = Выборка.СосковЛевых;
			СпрОбъект.МестоРождения = НашеХозяйство;
			СпрОбъект.Ветвь = Выборка.ВетвьМатери;
			
			Если Бонитировочные = Истина тогда
				СпрОбъект.БонитировочноеЖивотное = Истина;
				Иначе СпрОбъект.БонитировочноеЖивотное = Ложь;
			КонецЕсли;
			
			СпрОбъект.Поколение = ?(Выборка.ПоколениеМатери = 0, 0, Выборка.ПоколениеМатери + 1);
			СпрОбъект.Записать();
			
			Если ЗначениеЗаполнено(СпрОбъект.Мать) ИЛИ ЗначениеЗаполнено(СпрОбъект.Отец) Тогда
				КИРайт = ОбщегоНазначенияСервер.РасчетКИРайт(СпрОбъект.Ссылка);
				СпрОбъект.КИРайт = КИРайт;
				СпрОбъект.Записать();
				
				КИШапоруж = ОбщегоНазначенияСервер.РасчетКИШапоруж(СпрОбъект.Ссылка);
				СпрОбъект.КИШапоруж = КИШапоруж;
				СпрОбъект.Записать();
			КонецЕсли;
			
			Свиноматки[Выборка.НомерСтроки - 1].Свиноматка = СпрОбъект.Ссылка;
		иначе
			если ЗначениеЗаполнено (Выборка.Ссылка) тогда
				СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
			иначе
				СпрОбъект = Справочники.сжсвХряки.СоздатьЭлемент();
			КонецЕсли;
			
			СпрОбъект.Наименование = Выборка.Номер;
			СпрОбъект.ДополнительныйНомер = Выборка.ДопНомер;
			СпрОбъект.ДатаРождения = Выборка.ДатаРождения;
			
			Если Бонитировочные = Истина тогда
				СпрОбъект.БонитировочноеЖивотное = Истина;
				Иначе СпрОбъект.БонитировочноеЖивотное = Ложь;
			КонецЕсли;
			
			СпрОбъект.Мать = Выборка.Мать;
			СпрОбъект.Отец = Выборка.Отец;
			если Выборка.Порода = Справочники.сжсвПороды.ПустаяСсылка() И НЕ Выборка.НомерГнезда = 0 тогда
				СпрОбъект.Порода = СправочникиГибриды.Порода;
				СпрОбъект.Кличка = "ГИБРИД";
				СпрОбъект.Стадо = Перечисления.сжсвВидыСтада.F1;
				СпрОбъект.Линия = СправочникиГибриды.Линия;
			иначе
				СпрОбъект.Порода = Выборка.Порода;
				СпрОбъект.Линия = Выборка.Линия;
				Если НЕ Выборка.МатьПорода = Выборка.ОтецПорода И НЕ Выборка.НомерГнезда = 0 тогда
					СпрОбъект.Кличка = "ГИБРИД";
					СпрОбъект.Стадо = Перечисления.сжсвВидыСтада.F1;
				КонецЕсли;
				
			КонецЕсли;
			
			СпрОбъект.НомерГнезда = Выборка.НомерГнезда;
			СпрОбъект.СосковПравых = Выборка.СосковПравых;
			СпрОбъект.СосковЛевых = Выборка.СосковЛевых;
			СпрОбъект.МестоРождения = НашеХозяйство;
			СпрОбъект.Ветвь = Выборка.ВетвьОтца;
			СпрОбъект.Поколение = ?(Выборка.ПоколениеМатери = 0, 0, Выборка.ПоколениеМатери + 1);
			
			СпрОбъект.Записать();
			
			Если ЗначениеЗаполнено(СпрОбъект.Мать) ИЛИ ЗначениеЗаполнено(СпрОбъект.Отец) Тогда
				КИРайт = сжсвОценка.РасчетКИРайт(СпрОбъект.Ссылка);
				СпрОбъект.КИРайт = КИРайт;
				СпрОбъект.Записать();
				
				КИШапоруж = ОбщегоНазначенияСервер.РасчетКИШапоруж(СпрОбъект.Ссылка);
				СпрОбъект.КИШапоруж = КИШапоруж;
				СпрОбъект.Записать();
			КонецЕсли;
			
			Хряки[Выборка.НомерСтроки - 1].Хряк = СпрОбъект.Ссылка;
		КонецЕсли;
	КонецЦикла;
	
Конецпроцедуры

Функция ВернутьСправочникиГибриды()
	
	УстановитьПривилегированныйРежим(истина);
	
	Результат = Новый Структура;
	
	Порода = Справочники.сжсвПороды.НайтиПоНаименованию("ГИБРИД");
	если ЗначениеЗаполнено(Порода) тогда
		Результат.Вставить("Порода", Порода);
	иначе
		НовыйЭлемент = Справочники.сжсвПороды.СоздатьЭлемент();
		НовыйЭлемент.Наименование = "ГИБРИД";
		НовыйЭлемент.Записать();
		Результат.Вставить("Порода", НовыйЭлемент.Ссылка);
	КонецЕсли;
	
	Семейство = Справочники.сжсвСемейства.НайтиПоНаименованию("ГИБРИД");
	если ЗначениеЗаполнено(Семейство) тогда
		Результат.Вставить("Семейство", Семейство);
	иначе
		НовыйЭлемент = Справочники.сжсвСемейства.СоздатьЭлемент();
		НовыйЭлемент.Наименование = "ГИБРИД";
		НовыйЭлемент.Записать();
		Результат.Вставить("Семейство", НовыйЭлемент.Ссылка);
	КонецЕсли;
	
	Линия = Справочники.сжсвЛинии.НайтиПоНаименованию("ГИБРИД");
	если ЗначениеЗаполнено(Линия) тогда
		Результат.Вставить("Линия", Линия);
	иначе
		НовыйЭлемент = Справочники.сжсвЛинии.СоздатьЭлемент();
		НовыйЭлемент.Наименование = "ГИБРИД";
		НовыйЭлемент.Записать();
		Результат.Вставить("Линия", НовыйЭлемент.Ссылка);
	КонецЕсли;
	
	Возврат (Результат);
	
КонецФункции

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ОтменитьПроведениеВведенныхНаОснованииДокументов(Отказ);
	
КонецПроцедуры

Процедура ОтменитьПроведениеВведенныхНаОснованииДокументов(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	сжсвПереводИзГруппыВГруппу.Ссылка
	|ИЗ
	|	Документ.сжсвПереводИзГруппыВГруппу КАК сжсвПереводИзГруппыВГруппу
	|ГДЕ
	|	сжсвПереводИзГруппыВГруппу.ДокументОснование = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	пока Выборка.Следующий() цикл
		Попытка
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ДокументОбъект.Записать (РежимЗаписиДокумента.ОтменаПроведения);
		Исключение
			Отказ = истина;
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти


