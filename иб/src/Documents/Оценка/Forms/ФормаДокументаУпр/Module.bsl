#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	
	// Первоначальное заполнение нового объекта
	если НЕ ЗначениеЗаполнено(Объект.Ссылка) тогда
		ДокОбъект = РеквизитФормыВЗначение("Объект");
		ОбщегоНазначенияСервер.ПервоначальноеЗаполнениеДокумента(ДокОбъект);
		ЗначениеВРеквизитФормы(ДокОбъект, "Объект");
	КонецЕсли;	
	ИспользоватьEDI = ПолучитьИспользованиеEDI();
	Если ИспользоватьEDI Тогда
		Элементы.ТипОценки.СписокВыбора.Вставить(Элементы.ТипОценки.СписокВыбора.Количество(), ПредопределенноеЗначение("Перечисление.сжсвТипОценки.TSTART"), "Т-START");
		Элементы.ТипОценки.СписокВыбора.Вставить(Элементы.ТипОценки.СписокВыбора.Количество(), ПредопределенноеЗначение("Перечисление.сжсвТипОценки.TEND"), "Т-END");
	КонецЕсли;	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьИспользованиеEDI()
	Возврат ПолучитьФункциональнуюОпцию("ИспользоватьEDIPigs");
	
КонецФункции

&НаКлиенте
Процедура СвиноматкиСвиноматкаАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
						
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = ОбщегоНазначенияСервер.ПолучитьДанныеВыбораЖивотногоДляКВУ("сжсвСвиноматки", Текст, Объект.Дата, Объект.Ферма);

КонецПроцедуры

&НаКлиенте
Процедура СвиноматкиСвиноматкаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
							
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = ОбщегоНазначенияСервер.ПолучитьДанныеВыбораЖивотногоДляКВУ("сжсвСвиноматки", Текст, Объект.Дата, Объект.Ферма);

КонецПроцедуры

&НаКлиенте
Процедура ХрякиХрякАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
							
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = ОбщегоНазначенияСервер.ПолучитьДанныеВыбораЖивотногоДляКВУ("сжсвХряки", Текст, Объект.Дата, Объект.Ферма);

КонецПроцедуры

&НаКлиенте
Процедура ХрякиХрякОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
								
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = ОбщегоНазначенияСервер.ПолучитьДанныеВыбораЖивотногоДляКВУ("сжсвХряки", Текст, Объект.Дата, Объект.Ферма);

КонецПроцедуры

&НаКлиенте
Процедура СвиноматкиСвиноматкаПриИзменении(Элемент)
	
	ПроверитьНаличиеОценкиСвиноматки(Элементы.Свиноматки.ТекущиеДанные.Свиноматка, Объект.ТипОценки, Объект.Дата);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПроверитьНаличиеОценкиСвиноматки(Свиноматка, ТипОценки, Дата)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	сжсвОценкаСвиноматокСрезПоследних.Свиноматка,
	               |	сжсвОценкаСвиноматокСрезПоследних.ТипОценки,
	               |	сжсвОценкаСвиноматокСрезПоследних.Период
	               |ИЗ
	               |	РегистрСведений.сжсвОценкаСвиноматок.СрезПоследних(
	               |			&Дата,
	               |			Свиноматка = &Свиноматка
	               |				И ТипОценки = &ТипОценки) КАК сжсвОценкаСвиноматокСрезПоследних";
	Запрос.УстановитьПараметр("Свиноматка", Свиноматка);
	Запрос.УстановитьПараметр("ТипОценки", ТипОценки);
	Запрос.УстановитьПараметр("Дата", Дата);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() > 0 Тогда
		Пока Выборка.Следующий() Цикл
			ТекстСообщения = "У свиноматки " + Выборка.Свиноматка + " уже была произведена оценка " + Выборка.ТипОценки + " " + Формат(Выборка.Период, "ДФ=dd.MM.yyyy");
			ОбщегоНазначенияСервер.СообщитьПользователю(ТекстСообщения);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ХрякиХрякПриИзменении(Элемент)
	
	ПроверитьНаличиеОценкиХряка(Элементы.Хряки.ТекущиеДанные.Хряк, Объект.ТипОценки, Объект.Дата);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПроверитьНаличиеОценкиХряка(Хряк, ТипОценки, Дата)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	сжсвОценкаХряковСрезПоследних.Хряк,
	               |	сжсвОценкаХряковСрезПоследних.ТипОценки,
	               |	сжсвОценкаХряковСрезПоследних.Период
	               |ИЗ
	               |	РегистрСведений.сжсвОценкаХряков.СрезПоследних(
	               |			&Дата,
	               |			Хряк = &Хряк
	               |				И ТипОценки = &ТипОценки) КАК сжсвОценкаХряковСрезПоследних";
	Запрос.УстановитьПараметр("Хряк", Хряк);
	Запрос.УстановитьПараметр("ТипОценки", ТипОценки);
	Запрос.УстановитьПараметр("Дата", Дата);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() > 0 Тогда
		Пока Выборка.Следующий() Цикл
			ТекстСообщения = "У хряка " + Выборка.Хряк + " уже была произведена оценка " + Выборка.ТипОценки + " " + Формат(Выборка.Период, "ДФ=dd.MM.yyyy");
			ОбщегоНазначенияСервер.СообщитьПользователю(ТекстСообщения);
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ВыборСектора" тогда
		Если Параметр.свойство("корпус") тогда
			Объект.Корпус = Параметр.корпус;
		КонецЕсли;
		Если Параметр.свойство("сектор") тогда
			Объект.сектор = Параметр.сектор;
		КонецЕсли;
		
		ЗаполнитьПоМестоположениюСвиноматок();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеДокумента

&НаКлиенте
Процедура МассаХряков(Команда)
	
	ОбщаяМасса = 0;
	МассаВведена = ВвестиЧисло(ОбщаяМасса, "Ввод общей массы",8,2);
	если МассаВведена И НЕ ОбщаяМасса=0 И НЕ ЭтотОбъект.Объект.Хряки.Количество()=0 тогда
		ОстатокМассы = ОбщаяМасса;
		МассаОдногоЖивотного = ОбщаяМасса/ЭтотОбъект.Объект.Хряки.Количество();
		для каждого Строка из ЭтотОбъект.Объект.Хряки цикл
			если ОстатокМассы = 0 тогда
				Прервать;
			КонецЕсли;
			
			если Строка.НомерСтроки = ЭтотОбъект.Объект.Хряки.Количество() тогда
				Строка.Масса = ОстатокМассы;
			иначе
				Строка.Масса = МИН (ОстатокМассы, МассаОдногоЖивотного);
				ОстатокМассы = ОстатокМассы - Строка.Масса;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
		

КонецПроцедуры

&НаКлиенте
Процедура ПоБонитировочнымСвиноматкам(Команда)
	
		Если ЭтотОбъект.Объект.Свиноматки.Количество() > 0 Тогда
		Если Вопрос("Перед заполнением строки табличной части будут удалены!
			|Продолжить?", РежимДиалогаВопрос.Данет) = КодВозвратаДиалога.нет Тогда
			Возврат;
		Иначе 
			ЭтотОбъект.Объект.Свиноматки.Очистить();
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьПоБонитировочнымСвиноматкам();

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоБонитировочнымСвиноматкам()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ферма", Объект.Ферма);
	Запрос.УстановитьПараметр("Дата", Объект.Дата);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	сжсвЖивотныеВНаличииОстатки.Свиноматка,
	|	сжсвЖивотныеВНаличииОстатки.Свиноматка.ДополнительныйНомер КАК ДополнительныйНомер,
	|	сжсвЖивотныеВНаличииОстатки.МассаОстаток КАК Масса
	|ИЗ
	|	РегистрНакопления.сжсвЖивотныеВНаличии.Остатки(
	|			&Дата,
	|			Ферма = &Ферма
	|				И НЕ Свиноматка = ЗНАЧЕНИЕ(Справочник.сжсвСвиноматки.ПустаяСсылка)
	|				И (ГруппаЖивотных = ЗНАЧЕНИЕ(перечисление.сжсвГруппыЖивотных.ОсновныеСвиноматки)
	|					ИЛИ ГруппаЖивотных = ЗНАЧЕНИЕ(перечисление.сжсвГруппыЖивотных.ПроверяемыеСвиноматки))
	|				И Свиноматка.БонитировочноеЖивотное = ИСТИНА) КАК сжсвЖивотныеВНаличииОстатки";
	
	ТаблицаСвиноматок = Запрос.Выполнить().Выгрузить();
	Объект.Свиноматки.Загрузить(ТаблицаСвиноматок);	
	
КонецПроцедуры

&НаКлиенте
Процедура ПоБонитировочнымХрякам(Команда)
	
			Если ЭтотОбъект.Объект.Хряки.Количество() > 0 Тогда
		Если Вопрос("Перед заполнением строки табличной части будут удалены!
			|Продолжить?", РежимДиалогаВопрос.Данет) = КодВозвратаДиалога.нет Тогда
			Возврат;
		Иначе 
			ЭтотОбъект.Объект.Хряки.Очистить();
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьПоБонитировочнымХрякам();

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоБонитировочнымХрякам()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ферма", Объект.Ферма);
	Запрос.УстановитьПараметр("Дата", Объект.Дата);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	сжсвЖивотныеВНаличииОстатки.МассаОстаток КАК Масса,
	|	сжсвЖивотныеВНаличииОстатки.Хряк,
	|	сжсвЖивотныеВНаличииОстатки.Хряк.ДополнительныйНомер КАК ДополнительныйНомер
	|ИЗ
	|	РегистрНакопления.сжсвЖивотныеВНаличии.Остатки(
	|			&Дата,
	|			Ферма = &Ферма
	|				И НЕ Хряк = ЗНАЧЕНИЕ(Справочник.сжсвХряки.ПустаяСсылка)
	|				И (ГруппаЖивотных = ЗНАЧЕНИЕ(перечисление.сжсвГруппыЖивотных.Хряки)
	|					ИЛИ ГруппаЖивотных = ЗНАЧЕНИЕ(перечисление.сжсвГруппыЖивотных.ПроверяемыеХряки))
	|				И Хряк.БонитировочноеЖивотное = ИСТИНА) КАК сжсвЖивотныеВНаличииОстатки";
	
	ТаблицаХряков = Запрос.Выполнить().Выгрузить();
	Объект.Хряки.Загрузить(ТаблицаХряков);	
	
КонецПроцедуры

&НаСервере
Процедура ПоГруппеНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ферма", Объект.Ферма);
	Запрос.УстановитьПараметр("ГруппаЖивотных", Объект.Группа);
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	сжсвЖивотныеВНаличииОстатки.Свиноматка
	|ИЗ
	|	РегистрНакопления.сжсвЖивотныеВНаличии.Остатки(
	|			&Дата,
	|			Ферма = &Ферма
	|				И ГруппаЖивотных = &ГруппаЖивотных) КАК сжсвЖивотныеВНаличииОстатки";
	
	ТаблицаСвиноматок = Запрос.Выполнить().Выгрузить();
	Объект.Свиноматки.Загрузить(ТаблицаСвиноматок);

КонецПроцедуры

&НаКлиенте
Процедура ПоГруппе(Команда)
	
	Если ЭтотОбъект.Объект.Свиноматки.Количество() > 0 Тогда
		Если Вопрос("Перед заполнением строки табличной части будут удалены!
			|Продолжить?", РежимДиалогаВопрос.Данет) = КодВозвратаДиалога.нет Тогда
			Возврат;
		Иначе 
			ЭтотОбъект.Объект.Свиноматки.Очистить();
		КонецЕсли;
	КонецЕсли;
	

	ПоГруппеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПоГруппеХряковНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ферма", Объект.Ферма);
	Запрос.УстановитьПараметр("ГруппаЖивотных", Объект.Группа);
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	сжсвЖивотныеВНаличииОстатки.Хряк
	|ИЗ
	|	РегистрНакопления.сжсвЖивотныеВНаличии.Остатки(
	|			&Дата,
	|			Ферма = &Ферма
	|				И ГруппаЖивотных = &ГруппаЖивотных) КАК сжсвЖивотныеВНаличииОстатки";
	
	ТаблицаХряков = Запрос.Выполнить().Выгрузить();
	Объект.Хряки.Загрузить(ТаблицаХряков);

КонецПроцедуры

&НаКлиенте
Процедура ПоГруппеХряков(Команда)
	
	Если ЭтотОбъект.Объект.Хряки.Количество() > 0 Тогда
		Если Вопрос("Перед заполнением строки табличной части будут удалены!
			|Продолжить?", РежимДиалогаВопрос.Данет) = КодВозвратаДиалога.нет Тогда
			Возврат;
		Иначе 
			ЭтотОбъект.Объект.Хряки.Очистить();
		КонецЕсли;
	КонецЕсли;
	

	ПоГруппеХряковНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Масса(Команда)
	
	ОбщаяМасса = 0;
	МассаВведена = ВвестиЧисло(ОбщаяМасса, "Ввод общей массы",8,2);
	если МассаВведена И НЕ ОбщаяМасса=0 И НЕ ЭтотОбъект.Объект.Свиноматки.Количество()=0 тогда
		ОстатокМассы = ОбщаяМасса;
		МассаОдногоЖивотного = ОбщаяМасса/ЭтотОбъект.Объект.Свиноматки.Количество();
		для каждого Строка из ЭтотОбъект.Объект.Свиноматки цикл
			если ОстатокМассы = 0 тогда
				Прервать;
			КонецЕсли;
			
			если Строка.НомерСтроки = ЭтотОбъект.Объект.Свиноматки.Количество() тогда
				Строка.Масса = ОстатокМассы;
			иначе
				Строка.Масса = МИН (ОстатокМассы, МассаОдногоЖивотного);
				ОстатокМассы = ОстатокМассы - Строка.Масса;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
		

КонецПроцедуры

&НаКлиенте
Процедура ПоОпоросуЧистопородными(Команда)
	
	Если ЭтотОбъект.Объект.Свиноматки.Количество() > 0 Тогда
		Если Вопрос("Перед заполнением строки табличной части будут удалены!
			|Продолжить?", РежимДиалогаВопрос.Данет) = КодВозвратаДиалога.нет Тогда
			Возврат;
		Иначе 
			ЭтотОбъект.Объект.Свиноматки.Очистить();
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьДаннымиПоОпоросуЧистопородными();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДаннымиПоОпоросуЧистопородными()
	
	ОценкаПослеОпороса = Константы.сжсвОценкаПослеОпороса.Получить();
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	сжсвПроизводственныйЦиклСрезПоследних.Свиноматка,
	|	сжсвОценкаСвиноматок.Период,
	|	РАЗНОСТЬДАТ(сжсвПроизводственныйЦиклСрезПоследних.Свиноматка.ДатаРождения, &ДатаДокумента, ДЕНЬ) КАК Возраст,
	|	сжсвПроизводственныйЦиклСрезПоследних.Свиноматка.Порода.ГруппаПород КАК ГруппаПород
	|ИЗ
	|	РегистрНакопления.сжсвЖивотныеВНаличии.Остатки(&ДатаСреза, Ферма = &Ферма) КАК сжсвЖивотныеВНаличииОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сжсвПроизводственныйЦикл.СрезПоследних(&ДатаСреза, Событие = ЗНАЧЕНИЕ(Перечисление.сжсвСобытия.Опорос)) КАК сжсвПроизводственныйЦиклСрезПоследних
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сжсвОценкаСвиноматок КАК сжсвОценкаСвиноматок
	|			ПО сжсвПроизводственныйЦиклСрезПоследних.Свиноматка = сжсвОценкаСвиноматок.Свиноматка
	|				И (сжсвОценкаСвиноматок.Период > сжсвПроизводственныйЦиклСрезПоследних.ДатаСобытия)
	|		ПО сжсвЖивотныеВНаличииОстатки.Свиноматка = сжсвПроизводственныйЦиклСрезПоследних.Свиноматка
	|ГДЕ
	|	сжсвПроизводственныйЦиклСрезПоследних.ДатаСобытия <= ДОБАВИТЬКДАТЕ(&ДатаДокумента, ДЕНЬ, -1 * &ОценкаПослеОпороса)
	|	И сжсвПроизводственныйЦиклСрезПоследних.Свиноматка.ДатаРождения > ДОБАВИТЬКДАТЕ(&ДатаДокумента, ГОД, -3)
	|	И сжсвПроизводственныйЦиклСрезПоследних.Свиноматка.Порода.ПородаМатери = сжсвПроизводственныйЦиклСрезПоследних.Свиноматка.Порода.ПородаОтца
	|	И сжсвОценкаСвиноматок.Период ЕСТЬ NULL 
	|	И (НЕ сжсвЖивотныеВНаличииОстатки.Свиноматка = ЗНАЧЕНИЕ(Справочник.сжсвСвиноматки.ПустаяСсылка))";
	
	Запрос.УстановитьПараметр("ДатаДокумента",Объект.Дата);
	Запрос.УстановитьПараметр("ДатаСреза", Новый Граница(Объект.Дата, ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Ферма",Объект.Ферма);
	Запрос.УстановитьПараметр("ОценкаПослеОпороса",ОценкаПослеОпороса);	
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	пока Выборка.Следующий() цикл
		НоваяСтрока = Объект.Свиноматки.Добавить();
		НоваяСтрока.Свиноматка = Выборка.Свиноматка;
		Показатели = сжсвОценка.ОпределениеСреднихПоказателей(Выборка.Возраст, Выборка.ГруппаПород, Перечисления.сжсвПол.св, "Элита");
		Если Показатели <> 0 Тогда
			НоваяСтрока.Масса = Показатели.Масса;
			НоваяСтрока.ДлинаТуловища = Показатели.ДлинаТуловища;
			НоваяСтрока.Экстерьер = Показатели.Экстерьер;
		КонецЕсли;
		
	конеццикла;
	
КонецПРоцедуры

&НаКлиенте
Процедура ПоОпоросу(Команда)
	
	Если ЭтотОбъект.Объект.Свиноматки.Количество() > 0 Тогда
		Если Вопрос("Перед заполнением строки табличной части будут удалены!
			|Продолжить?", РежимДиалогаВопрос.Данет) = КодВозвратаДиалога.нет Тогда
			Возврат;
		Иначе 
			ЭтотОбъект.Объект.Свиноматки.Очистить();
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьДаннымиПоОпоросу();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДаннымиПоОпоросу()
	
	ОценкаПослеОпороса = Константы.сжсвОценкаПослеОпороса.Получить();
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	сжсвПроизводственныйЦиклСрезПоследних.Свиноматка,
	|	сжсвОценкаСвиноматок.Период,
	|	РАЗНОСТЬДАТ(сжсвПроизводственныйЦиклСрезПоследних.Свиноматка.ДатаРождения, &ДатаДокумента, ДЕНЬ) КАК Возраст,
	|	сжсвПроизводственныйЦиклСрезПоследних.Свиноматка.Порода.ГруппаПород КАК ГруппаПород
	|ИЗ
	|	РегистрНакопления.сжсвЖивотныеВНаличии.Остатки(&ДатаСреза, Ферма = &Ферма) КАК сжсвЖивотныеВНаличииОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сжсвПроизводственныйЦикл.СрезПоследних(&ДатаСреза, Событие = ЗНАЧЕНИЕ(Перечисление.сжсвСобытия.Опорос)) КАК сжсвПроизводственныйЦиклСрезПоследних
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сжсвОценкаСвиноматок КАК сжсвОценкаСвиноматок
	|			ПО сжсвПроизводственныйЦиклСрезПоследних.Свиноматка = сжсвОценкаСвиноматок.Свиноматка
	|				И (сжсвОценкаСвиноматок.Период > сжсвПроизводственныйЦиклСрезПоследних.ДатаСобытия)
	|		ПО сжсвЖивотныеВНаличииОстатки.Свиноматка = сжсвПроизводственныйЦиклСрезПоследних.Свиноматка
	|ГДЕ
	|	сжсвПроизводственныйЦиклСрезПоследних.ДатаСобытия <= ДОБАВИТЬКДАТЕ(&ДатаДокумента, ДЕНЬ, -1 * &ОценкаПослеОпороса)
	|	И сжсвПроизводственныйЦиклСрезПоследних.Свиноматка.ДатаРождения > ДОБАВИТЬКДАТЕ(&ДатаДокумента, ГОД, -3)
	|	И сжсвОценкаСвиноматок.Период ЕСТЬ NULL 
	|	И (НЕ сжсвЖивотныеВНаличииОстатки.Свиноматка = ЗНАЧЕНИЕ(Справочник.сжсвСвиноматки.ПустаяСсылка))";
	
	Запрос.УстановитьПараметр("ДатаДокумента",Объект.Дата);	
	Запрос.УстановитьПараметр("ДатаСреза", Новый Граница(Объект.Дата, ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Ферма",Объект.Ферма);
	Запрос.УстановитьПараметр("ОценкаПослеОпороса",ОценкаПослеОпороса);	
	
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	пока Выборка.Следующий() цикл
		НоваяСтрока = Объект.Свиноматки.Добавить();
		НоваяСтрока.Свиноматка = Выборка.Свиноматка;
		Показатели = сжсвОценка.ОпределениеСреднихПоказателей(Выборка.Возраст, Выборка.ГруппаПород, Перечисления.сжсвПол.св, "Элита");
		Если Показатели <> 0 Тогда
			НоваяСтрока.Масса = Показатели.Масса;
			НоваяСтрока.ДлинаТуловища = Показатели.ДлинаТуловища;
			НоваяСтрока.Экстерьер = Показатели.Экстерьер;
		КонецЕсли;
		
	конеццикла;
	
	
КонецПРоцедуры

&НаКлиенте
Процедура ПоМестоположению(Команда)
	
	Если ЭтотОбъект.Объект.Свиноматки.Количество() > 0 Тогда
		Если Вопрос("Перед заполнением строки табличной части будут удалены!
			|Продолжить?", РежимДиалогаВопрос.Данет) = КодВозвратаДиалога.нет Тогда
			Возврат;
		Иначе 
			ЭтотОбъект.Объект.Свиноматки.Очистить();
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура("Ферма", Объект.Ферма);
	ОткрытьФорму("ОбщаяФорма.ФормаВыбораСектора",ПараметрыОткрытия,ЭтотОбъект);	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоМестоположениюСвиноматок()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ферма", Объект.Ферма);
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("Корпус", Объект.Корпус);
	Запрос.УстановитьПараметр("Сектор", Объект.Сектор);
	Запрос.УстановитьПараметр("ГруппаЖивотных", Объект.Группа);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	сжсвЖивотныеВНаличииОстатки.Свиноматка,
	|	сжсвЖивотныеВНаличииОстатки.Свиноматка.ДополнительныйНомер КАК ДополнительныйНомер
	|ИЗ
	|	РегистрНакопления.сжсвЖивотныеВНаличии.Остатки(
	|			&Дата,
	|			Ферма = &Ферма
	|				И Сектор.Владелец = &Корпус
	|				И Сектор = &Сектор
	|				И НЕ Свиноматка = ЗНАЧЕНИЕ(Справочник.сжсвСвиноматки.ПустаяСсылка)";
	Если ЗначениеЗаполнено(Объект.Группа) Тогда
		Запрос.Текст = Запрос.Текст + "
	|				И ГруппаЖивотных = &ГруппаЖивотных";
	КонецЕсли;
	Запрос.Текст = Запрос.Текст + ") КАК сжсвЖивотныеВНаличииОстатки";
	
	ТаблицаСвиноматок = Запрос.Выполнить().Выгрузить();
	Объект.Свиноматки.Загрузить(ТаблицаСвиноматок);
	
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	Если ЭтотОбъект.Объект.Хряки.Количество() > 0 Тогда
		Если Вопрос("Перед заполнением строки табличной части будут удалены!
			|Продолжить?", РежимДиалогаВопрос.Данет) = КодВозвратаДиалога.нет Тогда
			Возврат;
		Иначе 
			ЭтотОбъект.Объект.Хряки.Очистить();
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьДаннымиПоХрякам();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДаннымиПоХрякам()
	
	Ферма = Объект.Ферма;
	ДатаДокумента = Объект.Дата;
	
	Если Объект.ТипОценки = Перечисления.сжсвТипОценки.ПриОтборе тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	сжсвЖивотныеВНаличииОстатки.Хряк
		|ИЗ
		|	РегистрНакопления.сжсвЖивотныеВНаличии.Остатки(
		|			&ДатаДокумента,
		|			Ферма = &Ферма
		|				И (НЕ Хряк = ЗНАЧЕНИЕ(Справочник.сжсвХряки.ПустаяСсылка))
		|				И ГруппаЖивотных = ЗНАЧЕНИЕ(Перечисление.сжсвГруппыЖивотных.Группа_1_3)) КАК сжсвЖивотныеВНаличииОстатки";
		
		
		Запрос.УстановитьПараметр("Ферма",Ферма);
		Запрос.УстановитьПараметр("ДатаДокумента", Новый Граница(Объект.Дата, ВидГраницы.Исключая));
		
		ВыборкаПриОтборе = Запрос.Выполнить().Выбрать();
		пока ВыборкаПриОтборе.Следующий() цикл
			НоваяСтрока = Объект.Хряки.Добавить(); 
			НоваяСтрока.Хряк = ВыборкаПриОтборе.Хряк;		
		конеццикла;
		
	ИначеЕсли Объект.ТипОценки = Перечисления.сжсвТипОценки.В100кг тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	сжсвЖивотныеВНаличииОстатки.Хряк
		|ИЗ
		|	РегистрНакопления.сжсвЖивотныеВНаличии.Остатки(
		|			&ДатаДокумента,
		|			Ферма = &Ферма
		|				И (НЕ Хряк = ЗНАЧЕНИЕ(Справочник.сжсвХряки.ПустаяСсылка))
		|				И ГруппаЖивотных = ЗНАЧЕНИЕ(Перечисление.сжсвГруппыЖивотных.РемонтныеХрячки)) КАК сжсвЖивотныеВНаличииОстатки";
		
		Запрос.УстановитьПараметр("Ферма",Ферма);
		Запрос.УстановитьПараметр("ДатаДокумента", Новый Граница(Объект.Дата, ВидГраницы.Исключая));
		
		ВыборкаВ100кг = Запрос.Выполнить().Выбрать();
		пока ВыборкаВ100кг.Следующий() цикл
			НоваяСтрока = Объект.Хряки.Добавить(); 
			НоваяСтрока.Хряк = ВыборкаВ100кг.Хряк;		
		конеццикла;
		
	ИначеЕсли Объект.ТипОценки = Перечисления.сжсвТипОценки.ОценкаРазвития тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	сжсвЖивотныеВНаличииОстатки.Хряк
		|ИЗ
		|	РегистрНакопления.сжсвЖивотныеВНаличии.Остатки(
		|			&ДатаДокумента,
		|			Ферма = &Ферма
		|				И (ГруппаЖивотных = ЗНАЧЕНИЕ(Перечисление.сжсвГруппыЖивотных.ПроверяемыеХряки)
		|					ИЛИ ГруппаЖивотных = ЗНАЧЕНИЕ(Перечисление.сжсвГруппыЖивотных.Хряки))
		|				И (НЕ Хряк = ЗНАЧЕНИЕ(Справочник.сжсвХряки.ПустаяСсылка))) КАК сжсвЖивотныеВНаличииОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сжсвОценкаХряков.СрезПоследних(&ДатаДокумента, ТипОценки = ЗНАЧЕНИЕ(Перечисление.сжсвТипОценки.В100кг)) КАК сжсвОценкаХряковСрезПоследних
		|		ПО сжсвЖивотныеВНаличииОстатки.Хряк = сжсвОценкаХряковСрезПоследних.Хряк
		|ГДЕ
		|	сжсвОценкаХряковСрезПоследних.Период ЕСТЬ НЕ NULL ";
		
		Запрос.УстановитьПараметр("Ферма",Ферма);
		Запрос.УстановитьПараметр("ДатаДокумента",  Новый Граница(Объект.Дата, ВидГраницы.Исключая));
		
		ВыборкаПриОценкаРазвития = Запрос.Выполнить().Выбрать();
		пока ВыборкаПриОценкаРазвития.Следующий() цикл
			НоваяСтрока = Объект.Хряки.Добавить(); 
			НоваяСтрока.Хряк = ВыборкаПриОценкаРазвития.Хряк;		
		конеццикла;
		
	КонецЕсли;
	
	
КонецПроцедуры

#КонецОбласти
