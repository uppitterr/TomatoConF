#Область ПечатьДокумента

// Выполняет вывод печатной формы
//
// Параметры
//	ИмяМакета - имя макета печатной формы
//	МассивОбъектов - массив содержащий ссылки на объекты для которых необходимо выполнить вывод печатной формы.
Функция Печать (ИмяМакета, МассивОбъектов) экспорт
	
	Если ИмяМакета = "ПечатнаяФорма" Тогда
		Результат = СформироватьПечатнуюФормуДокумента (МассивОбъектов);
	КонецЕсли;	
	
	Возврат (Новый ХранилищеЗначения (Результат));
	
КонецФункции

Функция СформироватьПечатнуюФормуДокумента (МассивОбъектов)
	
	ТабДок = Новый ТабличныйДокумент;
	Табдок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	Макет = Документы.НазначениеОтветственных.ПолучитьМакет("ПечатнаяФорма");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	НазначениеОтветственных.Ферма,
	               |	НазначениеОтветственных.Корпус,
	               |	НазначениеОтветственных.Номер,
	               |	НазначениеОтветственных.Дата,
	               |	НазначениеОтветственных.Ссылка
	               |ИЗ
	               |	Документ.НазначениеОтветственных КАК НазначениеОтветственных
	               |ГДЕ
	               |	НазначениеОтветственных.Ссылка В(&МассивСсылок)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НазначениеОтветственных.МоментВремени
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	НазначениеОтветственных.НомерСтроки КАК НомерСтроки,
	               |	НазначениеОтветственных.Сектор,
	               |	НазначениеОтветственных.Ответственный КАК ОтветственныйСектор,
	               |	НазначениеОтветственных.Ссылка
	               |ИЗ
	               |	Документ.сжсвНазначениеОтветственных.Ответственные КАК сжсвНазначениеОтветственных
	               |ГДЕ
	               |	сжсвНазначениеОтветственных.Ссылка В(&МассивСсылок)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	сжсвНазначениеОтветственных.НомерСтроки,
	               |	НазначениеОтветственных.Ссылка.МоментВремени
	               |ИТОГИ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ОтветственныйСектор)
	               |ПО
	               |	НазначениеОтветственных.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	НазначениеОтветственных.НомерСтроки КАК НомерСтроки,
	               |	НазначениеОтветственных.Склад,
	               |	НазначениеОтветственных.Ответственный КАК ОтветственныйСклад,
	               |	НазначениеОтветственных.Ссылка КАК Ссылка
	               |ИЗ
	               |	Документ.НазначениеОтветственных.ОтветственныеПоСкладам КАК НазначениеОтветственных
	               |ГДЕ
	               |	НазначениеОтветственных.Ссылка В(&МассивСсылок)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НазначениеОтветственных.НомерСтроки,
	               |	НазначениеОтветственных.Ссылка.МоментВремени
	               |ИТОГИ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ОтветственныйСклад)
	               |ПО
	               |	Ссылка";	
	Запрос.УстановитьПараметр("МассивСсылок", МассивОбъектов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ДанныеШапки = МассивРезультатов[0].Выбрать();
	ВыборкаСектора = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаСклады = МассивРезультатов[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ПервыйДокумент = Истина;
	СтруктураПоиска = Новый Структура ("Ссылка");
	
	Пока ДанныеШапки.Следующий() Цикл
		Если Не ПервыйДокумент Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		ПараметрФО = Новый Структура("Ферма", ДанныеШапки.Ферма);
		ИспользуетсяРазрезСекторов = ПолучитьФункциональнуюОпцию("УчетПоСекторам", ПараметрФО);
		
      
		// Вывод заголовка
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ТекстЗаголовка = ОбщегоНазначенияСервер.СформироватьЗаголовокДокумента(ДанныеШапки, НСтр("ru = 'Назначение ответственных'; en = 'Assigning responsibility'"));
		ОбластьМакета.Параметры.ТекстЗаголовка = ТекстЗаголовка;
		ТабДок.Вывести(ОбластьМакета);
	
		// Вывод данных ферма
		Областьмакета = Макет.ПолучитьОбласть("ДанныеШапки");
		ОбластьМакета.Параметры.Заполнить(ДанныеШапки);
		ТабДок.Вывести(ОбластьМакета);
		
		// вывод данных по ответственным секторов.
		// вывод данных по ответственным складов.
		СтруктураПоиска = ДанныеШапки.Ссылка;
		
		ЗаписиНайдены = ВыборкаСектора.НайтиСледующий(СтруктураПоиска);
		Если ЗаписиНайдены Тогда
			ВыборкаДетали = ВыборкаСектора.Выбрать();
			// вывод заголовка
			ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокОтветственныеПоСекторам");
			ТабДок.Вывести(ОбластьМакета);
			Если ИспользуетсяРазрезСекторов Тогда
				Областьмакета = Макет.ПолучитьОбласть("Корпус");
				ОбластьМакета.Параметры.Заполнить(ДанныеШапки);
				ТабДок.Вывести(ОбластьМакета); 	
			КонецЕсли;

			ОбластьШапки = Макет.ПолучитьОбласть("ШапкаОтвСектора");
			ОбластьДетали = Макет.ПолучитьОбласть("ДанныеОтвСектора");
			
			// вывод шапки
			ТабДок.Вывести(ОбластьШапки);
			
			Если НЕ ИспользуетсяРазрезСекторов Тогда
				Смещать = ТипСмещенияТабличногоДокумента.ПоГоризонтали;
				Область = ТабДок.Область("ШапкаСектор");
				ТабДок.УдалитьОбласть(Область, Смещать); 	
			КонецЕсли;
			
			НомерСтроки = 1;
			Пока ВыборкаДетали.Следующий() Цикл
				 // вывод данных
				ОбластьДетали.Параметры.НомерСтрокиСектор = НомерСтроки;
				ОбластьДетали.Параметры.Заполнить(ВыборкаДетали);
				ТабДок.Вывести(ОбластьДетали);
				Если НЕ ИспользуетсяРазрезСекторов Тогда
				Смещать = ТипСмещенияТабличногоДокумента.ПоГоризонтали;
				Область = ТабДок.Область("ДанныеСектор");
				ТабДок.УдалитьОбласть(Область, Смещать); 	
			КонецЕсли;

				НомерСтроки = НомерСтроки +1;
			КонецЦикла;
			
		// Вывод итогов
				ОбластьМакета = Макет.ПолучитьОбласть("ИтогиСектор");
               ТабДок.Вывести(ОбластьМакета);
			   	Если НЕ ИспользуетсяРазрезСекторов Тогда
				Смещать = ТипСмещенияТабличногоДокумента.ПоГоризонтали;
				Область = ТабДок.Область("ИтогиСектора");
				ТабДок.УдалитьОбласть(Область, Смещать); 	
			КонецЕсли;

			   КонецЕсли;
			   
		// вывод данных по ответственным складов
		СтруктураПоиска = ДанныеШапки.Ссылка;
		
		ЗаписиНайдены = ВыборкаСклады.НайтиСледующий(СтруктураПоиска);
		Если ЗаписиНайдены Тогда
			ВыборкаДетали = ВыборкаСклады.Выбрать();
			// вывод заголовка
			ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокОтветственныеПоСкладам");
			ТабДок.Вывести(ОбластьМакета);
			ОбластьШапки = Макет.ПолучитьОбласть("ШапкаОтвСклады");
			ОбластьДетали = Макет.ПолучитьОбласть("ДанныеОтвСклады");
			
			// вывод шапки
			ТабДок.Вывести(ОбластьШапки);
			
			НомерСтроки = 1;
			Пока ВыборкаДетали.Следующий() Цикл
				 // вывод данных
				ОбластьДетали.Параметры.НомерСтрокиСклад = НомерСтроки;
				ОбластьДетали.Параметры.Заполнить(ВыборкаДетали);
				ТабДок.Вывести(ОбластьДетали);
				НомерСтроки = НомерСтроки +1;
			КонецЦикла;
			
		// Вывод итогов
				ОбластьМакета = Макет.ПолучитьОбласть("ИтогиСклад");
               ТабДок.Вывести(ОбластьМакета);
         КонецЕсли;
	КонецЦикла;
	

		ТабДок.АвтоМасштаб = Истина;
		
		Возврат (ТабДок);
	КонецФункции
	
#КонецОбласти
