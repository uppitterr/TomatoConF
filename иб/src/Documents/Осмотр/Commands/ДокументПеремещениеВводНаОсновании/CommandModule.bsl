#Область ОбработчикКоманды

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	СвязанныеОбъектыСуществуют = ПроверитьСуществованиеСвязанныхОбъектов(ПараметрКоманды);
		
	Если СвязанныеОбъектыСуществуют тогда
		ТекстВопроса = "Для данного документа уже выполнен ввод на основании! Продолжить?";
		Ответ = Вопрос (ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
		если Ответ = КодВозвратаДиалога.Нет тогда
			Возврат;			
		КонецЕсли;
	Конецесли;
	
	Данные = ПрочитатьДанныеДляВводаНаОсновании(ПараметрКоманды);
	СозданиеИЗаполнениеДокументов(Данные);
	
КонецПроцедуры

&НаСервере
Функция ПроверитьСуществованиеСвязанныхОбъектов(ДокументСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	сжсвСвязанныеДокументы.Ссылка
	               |ИЗ
	               |	КритерийОтбора.сжсвСвязанныеДокументы(&Документ) КАК сжсвСвязанныеДокументы";				   
	Запрос.УстановитьПараметр("Документ",ДокументСсылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	если РезультатЗапроса.Пустой() тогда
		СвязанныеОбъектыСуществуют = ложь;
	иначе
		СвязанныеОбъектыСуществуют = истина;
	КонецЕсли;
	
	Возврат (СвязанныеОбъектыСуществуют);
	
КонецФункции

// Открывает форму документа, созданного на основании
//
// Параметры
//	Данные - массив, элементами которого являются структуры с данными для заполнения
&НаКлиенте
Процедура СозданиеИЗаполнениеДокументов(Данные)
	
	для каждого Элемент из Данные цикл
		ПараметрыОткрытия = Новый Структура ("ЗначенияЗаполнения", Элемент);
	   	ОткрытьФорму("Документ.сжсвПеремещение.ФормаОбъекта",ПараметрыОткрытия,,новый УникальныйИдентификатор);
	КонецЦикла;

КонецПроцедуры

&НаСервере
Функция ПрочитатьДанныеДляВводаНаОсновании(ДокументСсылка)

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	сжсвОсмотрСвиноматки.Свиноматка,
	               |	сжсвОсмотрСвиноматки.Ссылка.Дата
	               |ПОМЕСТИТЬ ДанныеДокумента
	               |ИЗ
	               |	Документ.Осмотр.Свиноматки КАК сжсвОсмотрСвиноматки
	               |ГДЕ
	               |	сжсвОсмотрСвиноматки.Ссылка = &Ссылка
	               |	И сжсвОсмотрСвиноматки.Состояние = ЗНАЧЕНИЕ(Перечисление.сжсвСостоянияСвиноматки.Супоросная)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	сжсвЖивотныеВНаличииОстатки.Ферма,
	               |	сжсвЖивотныеВНаличииОстатки.Сектор.Владелец КАК Корпус,
	               |	сжсвЖивотныеВНаличииОстатки.Сектор КАК Сектор,
	               |	сжсвЖивотныеВНаличииОстатки.Станок,
	               |	сжсвЖивотныеВНаличииОстатки.Группировка,
	               |	ДанныеДокумента.Свиноматка,
	               |	сжсвЖивотныеВНаличииОстатки.МассаОстаток КАК Масса,
	               |	ДанныеДокумента.Дата
	               |ПОМЕСТИТЬ Местоположение
	               |ИЗ
	               |	ДанныеДокумента КАК ДанныеДокумента
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.сжсвЖивотныеВНаличии.Остатки(
	               |				&ДатаСреза,
	               |				Свиноматка В
	               |					(ВЫБРАТЬ
	               |						ДанныеДокумента.Свиноматка
	               |					ИЗ
	               |						ДанныеДокумента)) КАК сжсвЖивотныеВНаличииОстатки
	               |		ПО ДанныеДокумента.Свиноматка = сжсвЖивотныеВНаличииОстатки.Свиноматка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	Местоположение.Дата,
	               |	Местоположение.Ферма,
	               |	Местоположение.Корпус,
	               |	Местоположение.Сектор,
	               |	Местоположение.Группировка
	               |ИЗ
	               |	Местоположение КАК Местоположение
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Местоположение.Ферма,
	               |	Местоположение.Корпус,
	               |	Местоположение.Сектор,
	               |	Местоположение.Станок,
	               |	Местоположение.Группировка,
	               |	Местоположение.Свиноматка КАК Свиноматка,
	               |	Местоположение.Масса
	               |ИЗ
	               |	Местоположение КАК Местоположение
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Свиноматка";			   
	Запрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	Запрос.УстановитьПараметр("ДатаСреза", ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(ДокументСсылка, "Дата")+1);
    РезультатПакет = Запрос.ВыполнитьПакет();
	
	ТабРазрезыУчета = РезультатПакет[2].Выгрузить();
	ТабМестоположение = РезультатПакет[3].Выгрузить();
	
	ТабСвиноматки = Новый ТаблицаЗначений;
	ТабСвиноматки.Колонки.Добавить("Свиноматка", Новый ОписаниеТипов("СправочникСсылка.сжсвСвиноматки"));
	ТабСвиноматки.Колонки.Добавить("Станок", Новый ОписаниеТипов("СправочникСсылка.сжсвСтанки"));
	ТабСвиноматки.Колонки.Добавить("Масса", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(20,2)));
	
	Результат = Новый Массив;
	для каждого Строка из ТабРазрезыУчета цикл
		РезультатСтр = Новый Структура;
		РезультатСтр.Вставить("Ферма", Строка.Ферма);
		РезультатСтр.Вставить("Корпус", Строка.Корпус);
		РезультатСтр.Вставить("Сектор", Строка.Сектор);
		РезультатСтр.Вставить("Группировка", Строка.Группировка);
				
		ТабСвиноматки.Очистить();
		СтрПоиска = ТабМестоположение.НайтиСтроки(РезультатСтр);
		для каждого СтрокаМестоположение из СтрПоиска цикл
			НовСтр = ТабСвиноматки.Добавить();
			НовСтр.Свиноматка = СтрокаМестоположение.Свиноматка;
			НовСтр.Станок = СтрокаМестоположение.Станок;
			НовСтр.Масса = СтрокаМестоположение.Масса;
		КонецЦикла;
		РезультатСтр.Вставить("Свиноматки", Новый ХранилищеЗначения (ТабСвиноматки));
		
		РезультатСтр.Вставить("Дата", Строка.Дата+1);
		РезультатСтр.Вставить("Основание", ДокументСсылка);
		
		Результат.Добавить(РезультатСтр);
	КонецЦикла;
	
	Возврат (Результат);
	
КонецФункции

#КонецОбласти