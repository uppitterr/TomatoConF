#Область ПечатьДокумента

// Выполняет вывод печатной формы.
// Параметры:
//	ИмяМакета - имя макета печатной формы.
//	МассивОбъектов - массив содержащий ссылки на объекты для которых необходимо выполнить вывод печатной формы.
Функция Печать (ИмяМакета, МассивОбъектов) экспорт
	
	Если ИмяМакета = "ПечатнаяФорма" Тогда
		Результат = СформироватьПечатнуюФормуДокумента (МассивОбъектов);
	КонецЕсли;	
	
	Возврат (Новый ХранилищеЗначения (Результат));
	
КонецФункции

Функция СформироватьПечатнуюФормуДокумента (МассивОбъектов)
	
	ТабДок = Новый ТабличныйДокумент;
	Табдок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	Макет = Документы.Осмотр.ПолучитьМакет("ПечатнаяФорма");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Осмотр.Ссылка,
	|	Осмотр.Номер,
	|	Осмотр.Дата
	|ИЗ
	|	Документ.Осмотр КАК Осмотр
	|
	|ГДЕ
	|	Осмотр.Ссылка В(&МассивСсылок)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Осмотр.МоментВремени
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Осмотр.Ссылка КАК Ссылка,
	|	Осмотр.НомерСтроки КАК НомерСтроки,
	|	Осмотр.Свиноматка КАК Свиноматка,
	|	Осмотр.Состояние,
	|	Осмотр.Событие
	|ИЗ
	|	Документ.Осмотр.Свиноматки КАК Осмотр	               
	|ГДЕ
	|	Осмотр.Ссылка В(&МассивСсылок)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	Осмотр.Ссылка.МоментВремени
	|ИТОГИ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Свиноматка)
	|ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивОбъектов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ДанныеШапки = МассивРезультатов[0].Выбрать();
	ВыборкаСвиноматки = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ПервыйДокумент = Истина;
	СтруктураПоиска = Новый Структура ("Ссылка");
	
	Пока ДанныеШапки.Следующий() Цикл
		Если Не ПервыйДокумент Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		// Вывод заголовка
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ТекстЗаголовка = ОбщегоНазначенияСервер.СформироватьЗаголовокДокумента(ДанныеШапки, НСтр("ru = 'Осмотр'; en = 'Inspection'"));
		ОбластьМакета.Параметры.ТекстЗаголовка = ТекстЗаголовка;
		ТабДок.Вывести(ОбластьМакета);
		
		// Вывод данных ферма
		Областьмакета = Макет.ПолучитьОбласть("ДанныеШапки");
		ОбластьМакета.Параметры.Заполнить(ДанныеШапки);
		ТабДок.Вывести(ОбластьМакета);
		
		// вывод данных по свиноматкам
		СтруктураПоиска = ДанныеШапки.Ссылка;
		
		
		ЗаписиНайдены = ВыборкаСвиноматки.НайтиСледующий(СтруктураПоиска);
		ВыборкаДетали = ВыборкаСвиноматки.Выбрать();
		// вывод заголовка
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокСвиноматки");
		ТабДок.Вывести(ОбластьМакета);
		ОбластьШапки = Макет.ПолучитьОбласть("ШапкаСвиноматки");
		ОбластьДетали = Макет.ПолучитьОбласть("ДанныеСвиноматки");
		
		// вывод шапки
		ТабДок.Вывести(ОбластьШапки);
		
		НомерСтроки = 1;
		Пока ВыборкаДетали.Следующий() Цикл
			// вывод данных
			ОбластьДетали.Параметры.НомерСтроки = НомерСтроки;
			ОбластьДетали.Параметры.Заполнить(ВыборкаДетали);
			ТабДок.Вывести(ОбластьДетали);
			НомерСтроки = НомерСтроки +1;
		КонецЦикла;
		
		// Вывод итогов
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогиСвиноматки");
		ОбластьМакета.Параметры.ИтогоСвиноматок=ВыборкаСвиноматки.Свиноматка;
		Таб = Новый ТабличныйДокумент;
		Таб.Вывести(ОбластьДетали);
		Таб.Вывести(ОбластьМакета);
		Если Не ТабДок.ПроверитьВывод(Таб) Тогда
			Смещать = ТипСмещенияТабличногоДокумента.БезСмещения;
			Область = ТабДок.Область("ДанныеСвиноматки");
			ТабДок.УдалитьОбласть(Область, Смещать);
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			ОбластьДетали.Параметры.Заполнить(ВыборкаДетали);
			ТабДок.Вывести(ОбластьДетали);
		КонецЕсли;
		ТабДок.Вывести(ОбластьМакета);
	КонецЦикла;
	
	
	ТабДок.АвтоМасштаб = Истина;
	
	Возврат (ТабДок);
КонецФункции

// Возвращает событие произошедшее со свиноматкой исходя из ее состояния
//
// Параметры
//	Дата - дата на которую выполняется выборка данных
//	Свиноматка - ссылка на свиноматку
//	Состояние - текущее состояние
//
// Возврат
//	Событие произошедшее со свиноматкой
Функция ВернутьСобытиеПоСостояниюСвиноматки (Дата, Свиноматка, Состояние) Экспорт 
	
	если НЕ Состояние = Перечисления.сжсвСостоянияСвиноматки.Холостая тогда
		Возврат (Перечисления.сжсвСобытия.Осмотр);
	иначе
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	РАЗНОСТЬДАТ(ЕСТЬNULL(сжсвПроизводственныйЦиклСрезПоследних.Период, ДАТАВРЕМЯ(1, 1, 1)), &Дата, ДЕНЬ) КАК ДнейОтОсеменения,
		|	ЕСТЬNULL(сжсвСостоянияСвиноматокСрезПоследних.Состояние, ЗНАЧЕНИЕ(Перечисление.сжсвСостоянияСвиноматки.ПустаяСсылка)) КАК Состояние
		|ИЗ
		|	РегистрСведений.сжсвПроизводственныйЦикл.СрезПоследних(
		|			&Дата,
		|			Свиноматка = &Свиноматка
		|				И Событие = ЗНАЧЕНИЕ(Перечисление.сжсвСобытия.Осеменение)) КАК сжсвПроизводственныйЦиклСрезПоследних
		|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.сжсвСостоянияСвиноматок.СрезПоследних(&Дата, Свиноматка = &Свиноматка) КАК сжсвСостоянияСвиноматокСрезПоследних
		|		ПО сжсвПроизводственныйЦиклСрезПоследних.Свиноматка = сжсвСостоянияСвиноматокСрезПоследних.Свиноматка";
		Запрос.УстановитьПараметр("Дата", Дата);
		Запрос.УстановитьПараметр("Свиноматка", Свиноматка);
		Результат = Запрос.Выполнить();
		если Результат.Пустой() тогда
			Возврат (Перечисления.сжсвСобытия.ПустаяСсылка());
		иначе
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			СобытиеСвин = (ОбщегоНазначенияСервер.СобытиеХолостойСвиноматки(Выборка.ДнейОтОсеменения, Выборка.Состояние)); 
			Если НЕ СобытиеСвин = Перечисления.сжсвСобытия.РаннийОтъем Тогда
				Возврат СобытиеСвин;
			Иначе 
				Возврат (Перечисления.сжсвСобытия.ПустаяСсылка());
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции	

// Возвращает состояние по текущему событию со свиноматкой
//
// Параметры
//	Состояние - текущее состояние свиноматки
//	Событие - текущее событие
//
// Возврат
//	Состояние свиноматки
Функция ВернутьСостояниеПоСобытиюСвиноматки(Состояние, Событие)  экспорт
	
	если Событие = Перечисления.сжсвСобытия.Осмотр тогда
		Возврат (Состояние);
	иначе
		Возврат (Перечисления.сжсвСостоянияСвиноматки.Холостая);
	КонецЕсли;
	
КонецФункции

#КонецОбласти


	
