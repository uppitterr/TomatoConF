#Область ОбработчикиСобытийФормы
&НаКлиенте
Перем АдресВХранилище;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	
	// Первоначальное заполнение нового объекта
	если НЕ ЗначениеЗаполнено(Объект.Ссылка) тогда
		ДокОбъект = РеквизитФормыВЗначение("Объект");
		ОбщегоНазначенияСервер.ПервоначальноеЗаполнениеДокумента(ДокОбъект);
		ЗначениеВРеквизитФормы(ДокОбъект, "Объект");
	КонецЕсли;
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура ("Ферма", Объект.Ферма));
	
КонецПроцедуры

&НаКлиенте
Процедура СвиноматкиСостояниеПриИзменении(Элемент)
	
	ТекДан = Элементы.Свиноматки.ТекущиеДанные;
	если ЗначениеЗаполнено (ТекДан.Состояние) тогда
		ДатаСреза = ?(ЗначениеЗаполнено(Объект.Ссылка), Объект.Дата, КонецДня (Объект.Дата));
		ТекДан.Событие = ВернутьСобытиеПоСостояниюСвиноматки (ДатаСреза, ТекДан.Свиноматка, ТекДан.Состояние);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВернутьСобытиеПоСостояниюСвиноматки (Дата, Свиноматка, Состояние)
	
	Возврат Документы.Осмотр.ВернутьСобытиеПоСостояниюСвиноматки(Дата, Свиноматка, Состояние);

КонецФункции

&НаКлиенте
Процедура СвиноматкиСобытиеПриИзменении(Элемент)
	
	ТекДан = Элементы.Свиноматки.ТекущиеДанные;
	если ЗначениеЗаполнено(ТекДан.Событие) тогда
		ТекДан.Состояние = ВернутьСостояниеПоСобытиюСвиноматки(ТекДан.Состояние, ТекДан.Событие);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВернутьСостояниеПоСобытиюСвиноматки(Состояние, Событие)
	
	Возврат Документы.Осмотр.ВернутьСостояниеПоСобытиюСвиноматки(Состояние, Событие);
	
КонецФункции

&НаКлиенте
Процедура ФермаПриИзменении(Элемент)
	
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура ("Ферма", Объект.Ферма));
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	Если ЭтотОбъект.Объект.Свиноматки.Количество() > 0 Тогда
		Если Вопрос("Перед заполнением строки табличной части будут удалены!
			|Продолжить?", РежимДиалогаВопрос.Данет) = КодВозвратаДиалога.нет Тогда
			Возврат;
		Иначе 
			ЭтотОбъект.Объект.Свиноматки.Очистить();
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьДаннымиТаблЧасть();
	               	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДаннымиТаблЧасть()
	
	ПериодУсловноСупоросных = Константы.сжсвДлительностьФазыУсловноСупоросные.Получить();
	
	Если ПериодУсловноСупоросных <> 0 Тогда 
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	сжсвЖивотныеВНаличииОстатки.Свиноматка
		               |ИЗ
		               |	РегистрНакопления.сжсвЖивотныеВНаличии.Остатки(&ДатаСреза, Ферма = &Ферма) КАК сжсвЖивотныеВНаличииОстатки
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сжсвСостоянияСвиноматок.СрезПоследних(&ДатаСреза, ) КАК сжсвСостоянияСвиноматокСрезПоследних
		               |		ПО сжсвЖивотныеВНаличииОстатки.Свиноматка = сжсвСостоянияСвиноматокСрезПоследних.Свиноматка
		               |ГДЕ
		               |	сжсвСостоянияСвиноматокСрезПоследних.Состояние = ЗНАЧЕНИЕ(Перечисление.сжсвСостоянияСвиноматки.УсловноСупоросная)
		               |	И сжсвСостоянияСвиноматокСрезПоследних.Период <= ДОБАВИТЬКДАТЕ(&ДатаДокумента, ДЕНЬ, -1 * &ПериодУсловноСупоросных)";
		
		Запрос.УстановитьПараметр("Ферма", Объект.Ферма);
		Запрос.УстановитьПараметр("ДатаСреза", Новый Граница(Объект.Дата, ВидГраницы.Исключая));
		Запрос.УстановитьПараметр("ДатаДокумента", Объект.Дата);
		Запрос.УстановитьПараметр("ПериодУсловноСупоросных",ПериодУсловноСупоросных);
		Выборка = Запрос.Выполнить().Выбрать();
		
		пока Выборка.Следующий() цикл
			
			НоваяСтрока = Объект.Свиноматки.Добавить();
			НоваяСтрока.Свиноматка = Выборка.Свиноматка;
			НоваяСтрока.Состояние = Перечисления.сжсвСостоянияСвиноматки.Супоросная;
			НоваяСтрока.Событие = Перечисления.сжсвСобытия.Осмотр;
		
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СвиноматкиСвиноматкаАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
						
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = ОбщегоНазначенияСервер.ПолучитьДанныеВыбораЖивотного("сжсвСвиноматки", Текст, Объект.Дата, Объект.Ферма);

КонецПроцедуры

&НаКлиенте
Процедура СвиноматкиСвиноматкаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
						
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = ОбщегоНазначенияСервер.ПолучитьДанныеВыбораЖивотного("сжсвСвиноматки", Текст, Объект.Дата, Объект.Ферма);

КонецПроцедуры

#КонецОбласти

#Область Подбор
&НаКлиенте
Процедура Подбор(Команда)
		
	АдресВХранилище = ПоместитьВХранилище_ГруппыСостояние();
	ПараметрыПодбора = Новый Структура;
	ПараметрыПодбора.Вставить("Ферма", Объект.Ферма);
	ПараметрыПодбора.Вставить("Ссылка", Объект.Ссылка);
	ПараметрыПодбора.Вставить("СвиноматокСостояниеГруппа",АдресВХранилище);

	ФормаПодбора = ОткрытьФорму("Обработка.сжсвПодборВДокументы.Форма.Форма_УРЦ", ПараметрыПодбора, ЭтотОбъект);
		
КонецПроцедуры

&НаСервере
Функция ПоместитьВХранилище_ГруппыСостояние()
	МассивГруппы = Новый Массив;
	МассивГруппы.Добавить(Перечисления.сжсвГруппыЖивотных.РемонтныеСвинки);
	МассивГруппы.Добавить(Перечисления.сжсвГруппыЖивотных.ПроверяемыеСвиноматки);
	МассивГруппы.Добавить(Перечисления.сжсвГруппыЖивотных.ОсновныеСвиноматки);
	
	МассивСостояние = Новый Массив;
	МассивСостояние.Добавить(Перечисления.сжсвСостоянияСвиноматки.Холостая);
	МассивСостояние.Добавить(Перечисления.сжсвСостоянияСвиноматки.УсловноСупоросная);
	МассивСостояние.Добавить(Перечисления.сжсвСостоянияСвиноматки.Супоросная);
	МассивСостояние.Добавить(Перечисления.сжсвСостоянияСвиноматки.ТяжелоСупоросная);
    МассивСостояние.Добавить(Перечисления.сжсвСостоянияСвиноматки.Подсосная);
	
	ГруппыСостояние = Новый Структура;
	ГруппыСостояние.Вставить("СвиноматокГруппа",МассивГруппы);
	ГруппыСостояние.Вставить("СвиноматокСостояние",МассивСостояние);
	
	Возврат ПоместитьВоВременноеХранилище(ГруппыСостояние, УникальныйИдентификатор);
КонецФункции

// Заносит в документ информацию, введенную в форме подбора
//
// Параметры
//	Адрес - адрес временного хранилища, в котором хранятся введенные данные
&НаКлиенте
Процедура ОбработатьПодбор(Адрес) Экспорт
	
	ДобавитьЗначенияВТаблЧастьФормы(Адрес);
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьЗначенияВТаблЧастьФормы(АдресВХранилище)
	
	Данные = ПолучитьИзВременногоХранилища(АдресВХранилище);
	
	для каждого ЭлементДанные из Данные цикл
		ТекущаяСтрока = Объект.Свиноматки.Добавить();
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока,ЭлементДанные); 		
	конеццикла;
	
КонецПроцедуры

#КонецОбласти




