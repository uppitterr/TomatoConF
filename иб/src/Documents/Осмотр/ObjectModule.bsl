#Область ПроведениеДокумента

Процедура ОбработкаПроведения(Отказ, Режим)
	
	// Проверка на задвоение строк
	МассивКолонок = Новый Массив;
	МассивКолонок.Добавить("Свиноматка");
	ДанныеЗадвоены = ОбщегоНазначенияСервер.ПроверитьДокументНаЗадвоениеСтрок(ЭтотОбъект, "Свиноматки", МассивКолонок);
	если ДанныеЗадвоены тогда
		Отказ = истина;
		Возврат;
	КонецЕсли;
	
	ОтменитьПроведениеВведенныхНаОснованииДокументов(Отказ);
	
	Движения.сжсвСостоянияСвиноматок.Записывать = истина;
	Движения.сжсвПроизводственныйЦикл.Записывать = истина;
	Движения.сжсвРезультатыОсеменений.Записывать = истина;
	Движения.сжсвИсторияСвиноматок.Записывать = истина;
	ВестиУчетПоПроверяемым = Константы.сжсвВестиУчетПоПроверяемым.Получить();
	ПереводитьПриОсмотре = Константы.сжсвПереводПриОсмотре.Получить();
	
	ВыполнятьПроверку = Константы.сжсвПроверкаПриПроведении.Получить();
	ИнтервалПЦ = Константы.сжсвИнтервалПроизводственногоЦикла.Получить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	сжсвОсмотрСвиноматки.Свиноматка,
	               |	сжсвОсмотрСвиноматки.Состояние,
	               |	сжсвОсмотрСвиноматки.Событие,
	               |	сжсвОсмотрСвиноматки.Ссылка.Дата,
	               |	сжсвОсмотрСвиноматки.НомерСтроки
	               |ПОМЕСТИТЬ ДанныеДокумента
	               |ИЗ
	               |	Документ.Осмотр.Свиноматки КАК сжсвОсмотрСвиноматки
	               |ГДЕ
	               |	сжсвОсмотрСвиноматки.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	сжсвОсмотрСвиноматки.Свиноматка,
	               |	сжсвОсмотрСвиноматки.Состояние,
	               |	сжсвОсмотрСвиноматки.Событие,
	               |	сжсвОсмотрСвиноматки.Ссылка.Дата,
	               |	сжсвОсмотрСвиноматки.НомерСтроки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	сжсвПроизводственныйЦиклСрезПоследних.Период,
	               |	сжсвПроизводственныйЦиклСрезПоследних.Свиноматка,
	               |	сжсвПроизводственныйЦиклСрезПоследних.Событие,
	               |	сжсвПроизводственныйЦиклСрезПоследних.НомерЦикла,
	               |	сжсвПроизводственныйЦиклСрезПоследних.НомерОхоты,
	               |	сжсвПроизводственныйЦиклСрезПоследних.Хряк,
	               |	сжсвПроизводственныйЦиклСрезПоследних.Осеменатор
	               |ПОМЕСТИТЬ ПроизводственныеЦиклы
	               |ИЗ
	               |	РегистрСведений.сжсвПроизводственныйЦикл.СрезПоследних(
	               |			&МоментВремени,
	               |			Свиноматка В
	               |				(ВЫБРАТЬ
	               |					ДанныеДокумента.Свиноматка
	               |				ИЗ
	               |					ДанныеДокумента)) КАК сжсвПроизводственныйЦиклСрезПоследних
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	сжсвПереводИзГруппыВГруппуСвиноматки.Свиноматка КАК Животное,
	               |	сжсвПереводИзГруппыВГруппуСвиноматки.Ссылка
	               |ПОМЕСТИТЬ Переводы
	               |ИЗ
	               |	Документ.сжсвПереводИзГруппыВГруппу.Свиноматки КАК сжсвПереводИзГруппыВГруппуСвиноматки
	               |ГДЕ
	               |	сжсвПереводИзГруппыВГруппуСвиноматки.Ссылка.ДокументОснование = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДанныеДокумента.Свиноматка,
	               |	ДанныеДокумента.Состояние,
	               |	ДанныеДокумента.Событие,
	               |	ЕСТЬNULL(ПоследняяОхота.НомерЦикла, 0) КАК НомерЦиклаПоследнейОхоты,
	               |	ЕСТЬNULL(ПоследняяОхота.НомерОхоты, 0) КАК НомерПоследнейОхоты,
	               |	ЕСТЬNULL(ПоследнееОсеменение.НомерЦикла, 0) КАК НомерЦиклаОсеменение,
	               |	ЕСТЬNULL(ПоследнееОсеменение.Хряк, ЗНАЧЕНИЕ(Справочник.сжсвХряки.ПустаяСсылка)) КАК ХрякОсеменение,
	               |	ЕСТЬNULL(ПоследнееОсеменение.Осеменатор, ЗНАЧЕНИЕ(Справочник.сжсвСотрудники.ПустаяСсылка)) КАК Осеменатор,
	               |	ЕСТЬNULL(ПоследнееОсеменение.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОсеменения,
	               |	РАЗНОСТЬДАТ(ЕСТЬNULL(ПоследнееОсеменение.Период, ДАТАВРЕМЯ(1, 1, 1)), ДанныеДокумента.Дата, ДЕНЬ) КАК ДнейОтОсеменения,
	               |	ЕСТЬNULL(ПроизводственныеЦиклы.НомерЦикла, 0) КАК НомерТекущегоЦикла,
	               |	ЕСТЬNULL(ПроизводственныеЦиклы.Событие, ЗНАЧЕНИЕ(Перечисление.сжсвСобытия.ПустаяСсылка)) КАК ПоследнееСобытие,
	               |	ЕСТЬNULL(ПроизводственныеЦиклы.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПоследнегоСобытия,
	               |	РАЗНОСТЬДАТ(ЕСТЬNULL(ПроизводственныеЦиклы.Период, ДАТАВРЕМЯ(1, 1, 1)), ДанныеДокумента.Дата, ДЕНЬ) КАК ДнейОтПоследнегоСобытия,
	               |	ЕСТЬNULL(сжсвЖивотныеВНаличииОстатки.ГруппаЖивотных, ЗНАЧЕНИЕ(Перечисление.сжсвГруппыЖивотных.ПустаяСсылка)) КАК Группа,
	               |	ЕСТЬNULL(сжсвЖивотныеВНаличииОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	               |	ЕСТЬNULL(сжсвСостоянияСвиноматокСрезПоследних.Состояние, ЗНАЧЕНИЕ(Перечисление.сжсвСостоянияСвиноматки.ПустаяСсылка)) КАК СостояниеТек,
	               |	ДанныеДокумента.НомерСтроки,
	               |	ЕСТЬNULL(Переводы.Ссылка, ЗНАЧЕНИЕ(Документ.сжсвПереводИзГруппыВГруппу.ПустаяСсылка)) КАК ДокументПеревода,
	               |	сжсвЖивотныеВНаличииОстатки.Ферма,
	               |	сжсвЖивотныеВНаличииОстатки.Сектор,
	               |	сжсвЖивотныеВНаличииОстатки.Сектор.Владелец КАК Корпус,
	               |	сжсвЖивотныеВНаличииОстатки.Станок,
	               |	сжсвЖивотныеВНаличииОстатки.ТехнолГруппа,
	               |	сжсвЖивотныеВНаличииОстатки.Группировка,
	               |	сжсвЖивотныеВНаличииОстатки.МассаОстаток
	               |ПОМЕСТИТЬ Данные
	               |ИЗ
	               |	ДанныеДокумента КАК ДанныеДокумента
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ПроизводственныеЦиклы КАК ПоследняяОхота
	               |		ПО ДанныеДокумента.Свиноматка = ПоследняяОхота.Свиноматка
	               |			И (ПоследняяОхота.Событие = ЗНАЧЕНИЕ(Перечисление.сжсвСобытия.Охота))
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ПроизводственныеЦиклы КАК ПоследнееОсеменение
	               |		ПО ДанныеДокумента.Свиноматка = ПоследнееОсеменение.Свиноматка
	               |			И (ПоследнееОсеменение.Событие = ЗНАЧЕНИЕ(Перечисление.сжсвСобытия.Осеменение))
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ПроизводственныеЦиклы.Свиноматка КАК Свиноматка,
	               |			МАКСИМУМ(ПроизводственныеЦиклы.Период) КАК ПериодМакс
	               |		ИЗ
	               |			ПроизводственныеЦиклы КАК ПроизводственныеЦиклы
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ПроизводственныеЦиклы.Свиноматка) КАК ПоследнееСобытие
	               |			ЛЕВОЕ СОЕДИНЕНИЕ ПроизводственныеЦиклы КАК ПроизводственныеЦиклы
	               |			ПО ПоследнееСобытие.Свиноматка = ПроизводственныеЦиклы.Свиноматка
	               |				И ПоследнееСобытие.ПериодМакс = ПроизводственныеЦиклы.Период
	               |		ПО ДанныеДокумента.Свиноматка = ПоследнееСобытие.Свиноматка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.сжсвЖивотныеВНаличии.Остатки(
	               |				&МоментВремени,
	               |				Свиноматка В
	               |						(ВЫБРАТЬ
	               |							ДанныеДокумента.Свиноматка
	               |						ИЗ
	               |							ДанныеДокумента)
	               |					И Ферма = &Ферма) КАК сжсвЖивотныеВНаличииОстатки
	               |		ПО ДанныеДокумента.Свиноматка = сжсвЖивотныеВНаличииОстатки.Свиноматка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сжсвСостоянияСвиноматок.СрезПоследних(
	               |				&МоментВремени,
	               |				Свиноматка В
	               |					(ВЫБРАТЬ
	               |						ДанныеДокумента.Свиноматка
	               |					ИЗ
	               |						ДанныеДокумента)) КАК сжсвСостоянияСвиноматокСрезПоследних
	               |		ПО ДанныеДокумента.Свиноматка = сжсвСостоянияСвиноматокСрезПоследних.Свиноматка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Переводы КАК Переводы
	               |		ПО ДанныеДокумента.Свиноматка = Переводы.Животное
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Данные.Свиноматка,
	               |	Данные.Состояние,
	               |	Данные.Событие,
	               |	Данные.НомерЦиклаПоследнейОхоты,
	               |	Данные.НомерПоследнейОхоты,
	               |	Данные.НомерЦиклаОсеменение,
	               |	Данные.ХрякОсеменение,
	               |	Данные.Осеменатор,
	               |	Данные.ДатаОсеменения,
	               |	Данные.ДнейОтОсеменения,
	               |	Данные.НомерТекущегоЦикла,
	               |	Данные.ПоследнееСобытие,
	               |	Данные.ДатаПоследнегоСобытия,
	               |	Данные.ДнейОтПоследнегоСобытия,
	               |	Данные.Группа,
	               |	Данные.КоличествоОстаток,
	               |	Данные.СостояниеТек,
	               |	Данные.Свиноматка.Представление,
	               |	Данные.НомерСтроки КАК НомерСтроки,
	               |	ЕСТЬNULL(сжсвГнездаВНаличииОстатки.КоличествоОстаток, 0) КАК ГнездаОстаток
	               |ИЗ
	               |	Данные КАК Данные
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.сжсвГнездаВНаличии.Остатки(
	               |				&МоментВремени,
	               |				Свиноматка В
	               |					(ВЫБРАТЬ
	               |						ДанныеДокумента.Свиноматка
	               |					ИЗ
	               |						ДанныеДокумента)) КАК сжсвГнездаВНаличииОстатки
	               |		ПО Данные.Свиноматка = сжсвГнездаВНаличииОстатки.Свиноматка
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерСтроки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Данные.Свиноматка,
	               |	Данные.НомерЦиклаОсеменение,
	               |	Данные.Группа,
	               |	сжсвРезультатыОсемененийСрезПоследних.ДатаОсеменения,
	               |	сжсвРезультатыОсемененийСрезПоследних.Хряк,
	               |	сжсвРезультатыОсемененийСрезПоследних.Осеменатор,
	               |	сжсвРезультатыОсемененийСрезПоследних.Хряк2,
	               |	сжсвРезультатыОсемененийСрезПоследних.Хряк3
	               |ИЗ
	               |	Данные КАК Данные
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сжсвПроизводственныйЦикл КАК сжсвПроизводственныйЦикл
	               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.сжсвРезультатыОсеменений.СрезПоследних(
	               |					&МоментВремени,
	               |					Свиноматка В
	               |						(ВЫБРАТЬ
	               |							ДанныеДокумента.Свиноматка
	               |						ИЗ
	               |							ДанныеДокумента)) КАК сжсвРезультатыОсемененийСрезПоследних
	               |			ПО сжсвПроизводственныйЦикл.Свиноматка = сжсвРезультатыОсемененийСрезПоследних.Свиноматка
	               |				И сжсвПроизводственныйЦикл.Хряк = сжсвРезультатыОсемененийСрезПоследних.Хряк
	               |				И сжсвПроизводственныйЦикл.Осеменатор = сжсвРезультатыОсемененийСрезПоследних.Осеменатор
	               |				И сжсвПроизводственныйЦикл.Период = сжсвРезультатыОсемененийСрезПоследних.ДатаОсеменения
	               |		ПО Данные.Свиноматка = сжсвПроизводственныйЦикл.Свиноматка
	               |			И Данные.НомерЦиклаОсеменение = сжсвПроизводственныйЦикл.НомерЦикла
	               |			И (сжсвПроизводственныйЦикл.Событие = ЗНАЧЕНИЕ(Перечисление.сжсвСобытия.Осеменение))
	               |ГДЕ
	               |	ЕСТЬNULL(сжсвРезультатыОсемененийСрезПоследних.Осеменение, 0) = 1
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	Переводы.Ссылка КАК Документ
	               |ИЗ
	               |	Переводы КАК Переводы
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Данные.Свиноматка,
	               |	Данные.Ферма,
	               |	Данные.Сектор,
	               |	Данные.Станок,
	               |	Данные.Корпус,
	               |	Данные.Группа,
	               |	Данные.ТехнолГруппа,
	               |	Данные.Группировка,
	               |	Данные.МассаОстаток,
	               |	Данные.КоличествоОстаток,
	               |	Данные.ДокументПеревода
	               |ПОМЕСТИТЬ ПеревестиИзГруппыВГруппу
	               |ИЗ
	               |	Данные КАК Данные
	               |ГДЕ
	               |	Данные.Группа = ЗНАЧЕНИЕ(Перечисление.сжсвГруппыЖивотных.РемонтныеСвинки)
	               |	И НЕ Данные.КоличествоОстаток = 0
	               |	И (Данные.Состояние = ЗНАЧЕНИЕ(Перечисление.сжсвСостоянияСвиноматки.Супоросная)
	               |			ИЛИ Данные.Состояние = ЗНАЧЕНИЕ(Перечисление.сжсвСостоянияСвиноматки.ТяжелоСупоросная))
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПеревестиИзГруппыВГруппу.Ферма,
	               |	ПеревестиИзГруппыВГруппу.ТехнолГруппа,
	               |	ПеревестиИзГруппыВГруппу.Группировка,
	               |	ПеревестиИзГруппыВГруппу.Сектор,
	               |	ПеревестиИзГруппыВГруппу.Группа
	               |ИЗ
	               |	ПеревестиИзГруппыВГруппу КАК ПеревестиИзГруппыВГруппу
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПеревестиИзГруппыВГруппу.Группировка,
	               |	ПеревестиИзГруппыВГруппу.Сектор,
	               |	ПеревестиИзГруппыВГруппу.Ферма,
	               |	ПеревестиИзГруппыВГруппу.ТехнолГруппа,
	               |	ПеревестиИзГруппыВГруппу.Группа
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПеревестиИзГруппыВГруппу.Свиноматка КАК Животное,
	               |	ПеревестиИзГруппыВГруппу.Ферма,
	               |	ПеревестиИзГруппыВГруппу.Сектор,
	               |	ПеревестиИзГруппыВГруппу.Станок,
	               |	ПеревестиИзГруппыВГруппу.Корпус,
	               |	ПеревестиИзГруппыВГруппу.Группа,
	               |	ПеревестиИзГруппыВГруппу.ТехнолГруппа,
	               |	ПеревестиИзГруппыВГруппу.Группировка,
	               |	ПеревестиИзГруппыВГруппу.МассаОстаток,
	               |	ПеревестиИзГруппыВГруппу.КоличествоОстаток,
	               |	ПеревестиИзГруппыВГруппу.ДокументПеревода КАК Документ
	               |ИЗ
	               |	ПеревестиИзГруппыВГруппу КАК ПеревестиИзГруппыВГруппу";
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());			   
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Ферма", Ферма);
	РезультатПакет = Запрос.ВыполнитьПакет();
	Выборка = РезультатПакет[4].Выбрать();
	ВыборкаОсеменения = РезультатПакет[5].Выбрать();
	ВыборкаДокументыПеревода = РезультатПакет[6].Выбрать();
	ВыборкаРазрезыПеревода = РезультатПакет[8].Выбрать();			// Выборка содержит уникальные наборы разраезов учета животных. 
	// 		для формирования документов "Перевод из группы в группу"
	ВыборкаПереводИзГруппыВГруппу = РезультатПакет[9].Выбрать();	// Выборка содержит данные для формирования документов "Перевод из группы в группу".


	УсловиеПоиска = Новый Структура ("Свиноматка, НомерЦиклаОсеменение");
	// Отмена проведения документов "Перевод из группы в группу", созданных на основании текущего документа.
	
	пока ВыборкаДокументыПеревода.Следующий() цикл
		ДокументОбъект = ВыборкаДокументыПеревода.Документ.ПолучитьОбъект();
		Попытка
			ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		Исключение
			Отказ = истина;
		КонецПопытки;
	КонецЦикла;
	
	пока Выборка.Следующий() цикл
		если ВыполнятьПроверку тогда
			// Проверка наличия животного на указанной ферме
			если НЕ Выборка.КоличествоОстаток = 1 тогда
				ТекстСообщения = "Свиноматка номер " + Выборка.СвиноматкаПредставление + " не находится на указанной ферме";
				Поле = "Свиноматки[" + (Выборка.НомерСтроки - 1) + "].Свиноматка";
				ОбщегоНазначенияСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле);
				Отказ = истина;
			иначе
				если НЕ Выборка.Группа = Перечисления.сжсвГруппыЖивотных.РемонтныеСвинки
					И НЕ Выборка.Группа = Перечисления.сжсвГруппыЖивотных.ПроверяемыеСвиноматки
					И НЕ Выборка.Группа = Перечисления.сжсвГруппыЖивотных.ОсновныеСвиноматки тогда
					ТекстСообщения = "Свиноматка  номер " + Выборка.СвиноматкаПредставление + " относится к неподходящей группе";
					Поле = "Свиноматки[" + (Выборка.НомерСтроки - 1) + "].Свиноматка";
					ОбщегоНазначенияСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле);
					Отказ = истина;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если Выборка.Событие = Перечисления.сжсвСобытия.Осмотр И НЕ (Выборка.Состояние = Перечисления.сжсвСостоянияСвиноматки.Супоросная ИЛИ Выборка.Состояние = Перечисления.сжсвСостоянияСвиноматки.УсловноСупоросная ИЛИ Выборка.Состояние = Перечисления.сжсвСостоянияСвиноматки.ТяжелоСупоросная) Тогда
			ТекстСообщения = "Свиноматка  номер " + Выборка.СвиноматкаПредставление + " находится в неподходящем состоянии";
			Поле = "Свиноматки[" + (Выборка.НомерСтроки - 1) + "].Свиноматка";
			ОбщегоНазначенияСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле);
			Отказ = истина;
		КонецЕсли;
		
		Если Выборка.СостояниеТек = Перечисления.сжсвСостоянияСвиноматки.УсловноСупоросная И (Выборка.Состояние = Перечисления.сжсвСостоянияСвиноматки.Супоросная ИЛИ Выборка.Состояние = Перечисления.сжсвСостоянияСвиноматки.УсловноСупоросная)Тогда
			ДнейСОсеменения = Цел((Дата - Выборка.ДатаОсеменения)/86400);
			ДопустимоДнейСОсеменения = Цел(Константы.сжсвДлительностьФазыУсловноСупоросные.Получить()*0.4);
			Если ДнейСОсеменения<ДопустимоДнейСОсеменения Тогда
				
			ТекстСообщения = "У свиноматки  номер " + Выборка.СвиноматкаПредставление + " прошло недостаточное количество времени с осеменения";
			Поле = "Свиноматки[" + (Выборка.НомерСтроки - 1) + "].Свиноматка";
			ОбщегоНазначенияСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле);
			Отказ = истина;
			КонецЕсли;

		КонецЕсли;
		
		Движение = Движения.сжсвСостоянияСвиноматок.Добавить();
		Движение.Период = Дата;
		Движение.Свиноматка = Выборка.Свиноматка;
		Движение.Состояние = Выборка.Состояние;
		
		Движение = Движения.сжсвИсторияСвиноматок.Добавить();
		Движение.Период = Дата;
		Движение.Свиноматка = Выборка.Свиноматка;
		Движение.Событие = Выборка.Событие;
		Движение.Документ = Ссылка;
		Движение.ДатаСобытия = Дата;
		
		Если Выборка.Событие = Перечисления.сжсвСобытия.Осмотр Тогда
			если Выборка.СостояниеТек = Перечисления.сжсвСостоянияСвиноматки.Подсосная И НЕ Выборка.ГнездаОстаток = 0 И НЕ Выборка.Состояние=Перечисления.сжсвСостоянияСвиноматки.Подсосная тогда
				ТекстСообщения = "У свиноматки  номер " + Выборка.СвиноматкаПредставление + " имеются подсосные поросята на остатке";
				Поле = "Свиноматки[" + (Выборка.НомерСтроки - 1) + "].Свиноматка";
				ОбщегоНазначенияСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле);
				Отказ = истина;
				Продолжить;
			КонецЕсли;
			Движение = Движения.сжсвПроизводственныйЦикл.Добавить();
			Движение.Период = Дата;
			Движение.Свиноматка = Выборка.Свиноматка;
			Движение.Событие = Выборка.Событие;
			Движение.ДатаСобытия = Дата;
			Движение.НомерЦикла = Выборка.НомерТекущегоЦикла;
			Движение.Ферма = Ферма;
		ИначеЕсли Выборка.Событие = Перечисления.сжсвСобытия.Охота Тогда
			ДанныеНумерации = ВернутьНомерПроизводственногоЦикла (Выборка.Событие, Выборка, ИнтервалПЦ);
			
			Движение = Движения.сжсвПроизводственныйЦикл.Добавить();
			Движение.Период = Дата;
			Движение.Свиноматка = Выборка.Свиноматка;
			Движение.Событие = Выборка.Событие;
			Движение.ДатаСобытия = Дата;
			Движение.НомерОхоты = ДанныеНумерации.НомерСобытия;
			Движение.НомерЦикла = ДанныеНумерации.НомерЦикла;
			Движение.Ферма = Ферма;
			
			если ЗначениеЗаполнено(Выборка.СостояниеТек) И НЕ Выборка.СостояниеТек = Перечисления.сжсвСостоянияСвиноматки.Холостая
				И ЗначениеЗаполнено(Выборка.ДатаОсеменения) И Выборка.НомерЦиклаОсеменение = Выборка.НомерТекущегоЦикла тогда
				//И Выборка.ДнейОтОсеменения > 1 тогда
				Событие = ОбщегоНазначенияСервер.СобытиеХолостойСвиноматки(Выборка.ДнейОтОсеменения, Выборка.СостояниеТек);
				
				если Событие = Перечисления.сжсвСобытия.РаннийОтъем И НЕ Выборка.ГнездаОстаток = 0 тогда
					ТекстСообщения = "У свиноматки  номер " + Выборка.СвиноматкаПредставление + " имеются подсосные поросята на остатке";
					Поле = "Свиноматки[" + (Выборка.НомерСтроки - 1) + "].Свиноматка";
					ОбщегоНазначенияСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле);
					Отказ = истина;
					Продолжить;
				КонецЕсли;
				
				// регистр ПроизводственныйЦикл 
				Движение = Движения.сжсвПроизводственныйЦикл.Добавить();
				Движение.Период = Дата-1;
				Движение.Свиноматка = Выборка.Свиноматка;
				Движение.Событие = Событие;
				Движение.ДатаСобытия = Дата-1;
				Движение.НомерЦикла = Выборка.НомерТекущегоЦикла;
				Движение.Ферма = Ферма;
				
				// регистр ИсторияСвиноматок
				Движение = Движения.сжсвИсторияСвиноматок.Добавить();
				Движение.Период = Дата-1;
				Движение.Свиноматка = Выборка.Свиноматка;
				Движение.Событие = Событие;
				Движение.Документ = ЭтотОбъект.Ссылка;
				Движение.ДатаСобытия = Дата-1;
				
				// регистр РезультатыОсеменений
				УсловиеПоиска.Свиноматка = Выборка.Свиноматка;
				УсловиеПоиска.НомерЦиклаОсеменение = Выборка.НомерЦиклаОсеменение;
				ВыборкаОсеменения.Сбросить();
				пока ВыборкаОсеменения.НайтиСледующий (УсловиеПоиска) цикл
					Движение = Движения.сжсвРезультатыОсеменений.Добавить();
					Движение.Период = Дата-1;
					Движение.Ферма = Ферма;
					Движение.Свиноматка = ВыборкаОсеменения.Свиноматка;
					Движение.Хряк = ВыборкаОсеменения.Хряк;
					Движение.Хряк2 = ВыборкаОсеменения.Хряк2;
					Движение.Хряк3 = ВыборкаОсеменения.Хряк3;
					Движение.Осеменатор = ВыборкаОсеменения.Осеменатор;
					Движение.ДатаОсеменения = ВыборкаОсеменения.ДатаОсеменения;
					Движение.Основная = ?(ВыборкаОсеменения.Группа = Перечисления.сжсвГруппыЖивотных.ОсновныеСвиноматки, истина, ложь);
					Если Событие = Перечисления.сжсвСобытия.Перегул Тогда
						Движение.Перегул = 1;
					ИначеЕсли Событие = Перечисления.сжсвСобытия.Прохолост Тогда
						Движение.Прохолост = 1;
					ИначеЕсли Событие = Перечисления.сжсвСобытия.Аборт Тогда
						Движение.Аборт = 1;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;				
		Иначе
			если Выборка.СостояниеТек = Перечисления.сжсвСостоянияСвиноматки.Подсосная И НЕ Выборка.ГнездаОстаток = 0 тогда
				ТекстСообщения = "У свиноматки  номер " + Выборка.СвиноматкаПредставление + " имеются подсосные поросята на остатке";
				Поле = "Свиноматки[" + (Выборка.НомерСтроки - 1) + "].Свиноматка";
				ОбщегоНазначенияСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле);
				Отказ = истина;
				Продолжить;
			КонецЕсли;
			
			ДанныеНумерации = ВернутьНомерПроизводственногоЦикла (Выборка.Событие, Выборка, ИнтервалПЦ);
			
			Движение = Движения.сжсвПроизводственныйЦикл.Добавить();
			Движение.Период = Дата;
			Движение.Свиноматка = Выборка.Свиноматка;
			Движение.Событие = Выборка.Событие;
			Движение.ДатаСобытия = Дата;
			Движение.НомерЦикла = ДанныеНумерации.НомерЦикла;
			Движение.Ферма = Ферма;
			
			если ЗначениеЗаполнено(Выборка.ДатаОсеменения) И Выборка.НомерЦиклаОсеменение = Выборка.НомерТекущегоЦикла тогда
				УсловиеПоиска.Свиноматка = Выборка.Свиноматка;
				УсловиеПоиска.НомерЦиклаОсеменение = Выборка.НомерЦиклаОсеменение;
				ВыборкаОсеменения.Сбросить();
				пока ВыборкаОсеменения.НайтиСледующий (УсловиеПоиска) цикл
					Движение = Движения.сжсвРезультатыОсеменений.Добавить();
					Движение.Период = Дата;
					Движение.Ферма = Ферма;
					Движение.Свиноматка = ВыборкаОсеменения.Свиноматка;
					Движение.Хряк = ВыборкаОсеменения.Хряк;
					Движение.Хряк2 = ВыборкаОсеменения.Хряк2;
					Движение.Хряк3 = ВыборкаОсеменения.Хряк3;
					Движение.Осеменатор = ВыборкаОсеменения.Осеменатор;
					Движение.ДатаОсеменения = ВыборкаОсеменения.ДатаОсеменения;
					Движение.Основная = ?(ВыборкаОсеменения.Группа = Перечисления.сжсвГруппыЖивотных.ОсновныеСвиноматки, истина, ложь);
					Если Выборка.Событие = Перечисления.сжсвСобытия.Перегул Тогда
						Движение.Перегул = 1;
					ИначеЕсли Выборка.Событие = Перечисления.сжсвСобытия.Прохолост Тогда
						Движение.Прохолост = 1;
					ИначеЕсли Выборка.Событие = Перечисления.сжсвСобытия.Аборт Тогда
						Движение.Аборт = 1;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ПереводитьПриОсмотре Тогда
		ДатаПеревода = Дата+1;
		// Перевод ремонтных свинок в основные
		МассаСвиноматокПроверяемые = Константы.сжсвМассаСвиноматокПриПереводеВПроверяемые.Получить();
		МассаСвиноматокОсновные = Константы.сжсвМассаСвиноматокПриПереводеВОсновные.Получить();
		МассаСвиноматок = ?(ВестиУчетПоПроверяемым,МассаСвиноматокПроверяемые,МассаСвиноматокОсновные);
		пока ВыборкаРазрезыПеревода.Следующий() цикл
			УсловиеПоиска = Новый Структура;
			УсловиеПоиска.Вставить("Ферма", ВыборкаРазрезыПеревода.Ферма);
			УсловиеПоиска.Вставить("Сектор", ВыборкаРазрезыПеревода.Сектор);
			УсловиеПоиска.Вставить("Группа", ВыборкаРазрезыПеревода.Группа);
			УсловиеПоиска.Вставить("ТехнолГруппа", ВыборкаРазрезыПеревода.ТехнолГруппа);
			УсловиеПоиска.Вставить("Группировка", ВыборкаРазрезыПеревода.Группировка);
			//УсловиеПоиска.Вставить("Тип", ВыборкаРазрезыПеревода.Тип);
			
			ПереводОбъект = Неопределено;
			ВыборкаПереводИзГруппыВГруппу.Сбросить();
			пока ВыборкаПереводИзГруппыВГруппу.НайтиСледующий(УсловиеПоиска) цикл
				если ПереводОбъект = Неопределено тогда
					если ЗначениеЗаполнено (ВыборкаПереводИзГруппыВГруппу.Документ) тогда
						ВидДействия = "Перезаполнен ";
						ПереводОбъект = ВыборкаПереводИзГруппыВГруппу.Документ.ПолучитьОбъект();
						ПереводОбъект.Дата = ДатаПеревода;
						ПереводОбъект.Ферма = Ферма;
						ПереводОбъект.СформированАвтоматически = Истина;
						ПереводОбъект.Корпус = ВыборкаПереводИзГруппыВГруппу.Корпус;
						ПереводОбъект.КорпусКуда = ВыборкаПереводИзГруппыВГруппу.Корпус;
						ПереводОбъект.Сектор = ВыборкаПереводИзГруппыВГруппу.Сектор;
						ПереводОбъект.СекторКуда = ВыборкаПереводИзГруппыВГруппу.Сектор;
						ПереводОбъект.Группировка = ВыборкаПереводИзГруппыВГруппу.Группировка;
						ПереводОбъект.ГруппировкаКуда = ВыборкаПереводИзГруппыВГруппу.Группировка;
						ПереводОбъект.ТехнолГруппа = ВыборкаПереводИзГруппыВГруппу.ТехнолГруппа;
						ПереводОбъект.ТехнолГруппаКуда = ВыборкаПереводИзГруппыВГруппу.ТехнолГруппа;
						ПереводОбъект.Группа = ВыборкаПереводИзГруппыВГруппу.Группа;
						ПереводОбъект.ГруппаКуда = 	?(ВестиУчетПоПроверяемым, Перечисления.сжсвГруппыЖивотных.ПроверяемыеСвиноматки, Перечисления.сжсвГруппыЖивотных.ОсновныеСвиноматки);
						ПереводОбъект.ДокументОснование = Ссылка;
						ПереводОбъект.Свиноматки.Очистить();
					иначе
						ВидДействия = "Создан ";
						ПереводОбъект = Документы.сжсвПереводИзГруппыВГруппу.СоздатьДокумент();
						ПереводОбъект.Дата = ДатаПеревода;
						ПереводОбъект.Ферма = Ферма;
						ПереводОбъект.СформированАвтоматически = Истина;
						ПереводОбъект.Корпус = ВыборкаПереводИзГруппыВГруппу.Корпус;
						ПереводОбъект.КорпусКуда = ВыборкаПереводИзГруппыВГруппу.Корпус;
						ПереводОбъект.Сектор = ВыборкаПереводИзГруппыВГруппу.Сектор;
						ПереводОбъект.СекторКуда = ВыборкаПереводИзГруппыВГруппу.Сектор;
						ПереводОбъект.Группировка = ВыборкаПереводИзГруппыВГруппу.Группировка;
						ПереводОбъект.ГруппировкаКуда = ВыборкаПереводИзГруппыВГруппу.Группировка;
						ПереводОбъект.ТехнолГруппа = ВыборкаПереводИзГруппыВГруппу.ТехнолГруппа;
						ПереводОбъект.ТехнолГруппаКуда = ВыборкаПереводИзГруппыВГруппу.ТехнолГруппа;
						ПереводОбъект.Группа = ВыборкаПереводИзГруппыВГруппу.Группа;
						ПереводОбъект.ГруппаКуда = 	?(ВестиУчетПоПроверяемым, Перечисления.сжсвГруппыЖивотных.ПроверяемыеСвиноматки, Перечисления.сжсвГруппыЖивотных.ОсновныеСвиноматки);
						ПереводОбъект.ДокументОснование = Ссылка;
					КонецЕсли;
					ДатаПеревода = ДатаПеревода + 1;
				КонецЕсли;
				
				если ТипЗнч (ВыборкаПереводИзГруппыВГруппу.Животное) = Тип ("СправочникСсылка.сжсвСвиноматки") тогда
					НоваяСтрока = ПереводОбъект.Свиноматки.Добавить();
					НоваяСтрока.Свиноматка = ВыборкаПереводИзГруппыВГруппу.Животное;
					НоваяСтрока.Масса = ?(МассаСвиноматок = 0, ВыборкаПереводИзГруппыВГруппу.МассаОстаток, МассаСвиноматок);
					НоваяСтрока.Станок = ВыборкаПереводИзГруппыВГруппу.Станок;
				КонецЕсли;
			КонецЦикла;
			
			если НЕ ПереводОбъект = Неопределено тогда
				ПереводОбъект.Записать(РежимЗаписиДокумента.Запись);
				ОбщегоНазначенияСервер.СообщитьПользователю(ВидДействия + "документ " + ПереводОбъект, ПереводОбъект);
				Попытка
					ПереводОбъект.Записать(РежимЗаписиДокумента.Проведение);
				Исключение
					ОбщегоНазначенияСервер.СообщитьПользователю("При попытке проведения возникла ошибка: " + ОписаниеОшибки());
				КонецПопытки;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	
КонецПроцедуры

Функция ВернутьНомерПроизводственногоЦикла (Событие, Выборка, ИнтервалПЦ)
	
	НомерСобытия = 0;
	НомерЦикла = 0;
	ПостановкаВСледующемЦикле = истина;
	
	если Событие = Перечисления.сжсвСобытия.Охота тогда
		если Выборка.ПоследнееСобытие = Перечисления.сжсвСобытия.Охота
			ИЛИ Выборка.ПоследнееСобытие = Перечисления.сжсвСобытия.Постановка тогда
			НомерЦикла = Выборка.НомерТекущегоЦикла;
		иначеЕсли Выборка.ПоследнееСобытие = Перечисления.сжсвСобытия.Осеменение тогда
			НомерЦикла = Выборка.НомерТекущегоЦикла + 1;
		иначе
			НомерЦикла = Выборка.НомерТекущегоЦикла + 1;
		КонецЕсли;
		
		если НомерЦикла = Выборка.НомерЦиклаПоследнейОхоты тогда
			НомерСобытия = Выборка.НомерПоследнейОхоты + 1;
		иначе
			НомерСобытия = 1;
		КонецЕсли;
	иначе
		// Обработка событий: аборт, перегул, прохолост
		НомерЦикла = Выборка.НомерТекущегоЦикла;
		если Выборка.ПоследнееСобытие = Перечисления.сжсвСобытия.Осеменение тогда
			если Выборка.ДнейОтПоследнегоСобытия <= ИнтервалПЦ тогда
				ПостановкаВСледующемЦикле = ложь;
			иначе
				ПостановкаВСледующемЦикле = истина;
			КонецЕсли;
		иначе
			ПостановкаВСледующемЦикле = истина;
		КонецЕсли;
	КонецЕсли;
	
	Возврат (Новый Структура("НомерСобытия, НомерЦикла, ПостановкаВСледующемЦикле", НомерСобытия, НомерЦикла, ПостановкаВСледующемЦикле));
	
КонецФункции

Процедура ОтменитьПроведениеВведенныхНаОснованииДокументов(Отказ)	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	сжсвПереводИзГруппыВГруппу.Ссылка
	|ИЗ
	|	Документ.сжсвПереводИзГруппыВГруппу КАК сжсвПереводИзГруппыВГруппу
	|ГДЕ
	|	сжсвПереводИзГруппыВГруппу.ДокументОснование = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	пока Выборка.Следующий() цикл
		Попытка
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ДокументОбъект.Записать (РежимЗаписиДокумента.ОтменаПроведения);
		Исключение
			Отказ = истина;
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ОтменитьПроведениеВведенныхНаОснованииДокументов(Отказ)
	
КонецПроцедуры

#КонецОбласти