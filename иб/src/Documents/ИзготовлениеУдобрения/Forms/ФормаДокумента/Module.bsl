#Область ОбработчикиСобытийФормы

&НаКлиенте
Перем мКормосмесь;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Обработчик подсистемы "Дополнительные отчеты и обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	
	// Первоначальное заполнение нового объекта
	если НЕ ЗначениеЗаполнено(Объект.Ссылка) тогда
		ДокОбъект = РеквизитФормыВЗначение("Объект");
		ОбщегоНазначенияСервер.ПервоначальноеЗаполнениеДокумента(ДокОбъект);
		ЗначениеВРеквизитФормы(ДокОбъект, "Объект");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КормосмесиПриАктивизацииСтроки(Элемент)      
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		УстановитьОтборПоКормосмеси();
	Иначе 
		УстановитьОтборПоКормосмеси(Элемент.ТекущиеДанные.Кормосмесь);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КормосмесиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	//Если НоваяСтрока Тогда 
	//	Элемент.ТекущиеДанные.Кормосмесь = ПредопределенноеЗначение("Справочник.сжсвКорма.ПустаяСсылка");
	//	Элемент.ТекущиеДанные.Количество = 0;
	//КонецЕсли;
	мКормосмесь = Элемент.ТекущиеДанные.Кормосмесь;
	
КонецПроцедуры

&НаКлиенте
Процедура КормосмесиПередУдалением(Элемент, Отказ)
	мКормосмесь = Элемент.ТекущиеДанные.Кормосмесь;
КонецПроцедуры

&НаКлиенте
Процедура КормосмесиПослеУдаления(Элемент)
	Если мКормосмесь <> Неопределено Тогда
		УдалитьСоставляющие(мКормосмесь);
	КонецЕсли;
	//ПолучитьСписокВыбораКормосмесь();
КонецПроцедуры

&НаКлиенте
Процедура СоставляющиеКоличествоПриИзменении(Элемент)
	ПересчитатьКоличествоКормосмеси();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСклады(Команда)
	
	ОчиститьСообщения();
	
	Если не ЗначениеЗаполнено(Объект.Ферма) Тогда 
		ОбщегоНазначенияСервер.СообщитьПользователю("Укажите ферму", , "Объект.Ферма");
		Возврат;
	КонецЕсли;
	
	// Проверка на заполненность складов
	лОчищать = Ложь;
	лПустойСклад = ПредопределенноеЗначение("Справочник.сжсвСклады.ПустаяСсылка");
	Для каждого лСтрокаТЧ Из Объект.Состав Цикл
		Если ЗначениеЗаполнено(лСтрокаТЧ.Склад) Тогда 
			лОчищать = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если лОчищать 
		И Вопрос("Очистить размещение перед заполнением?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда 
		
		Для каждого лСтрокаТЧ Из Объект.Состав Цикл
			лСтрокаТЧ.Склад = лПустойСклад;
		КонецЦикла;
		
	КонецЕсли;
	
	ЗаполнитьСкладыСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура КормосмесиКоличествоПриИзменении(Элемент)
	ПересчитатьКоличествоКормосмеси();
КонецПроцедуры

&НаКлиенте
Процедура КормосмесиКормосмесьПриИзменении(Элемент)
	
	лКормосмесь = Элементы.Кормосмеси.ТекущиеДанные.Кормосмесь;
	
	// Если лКормосмесь <> мКормосмесь Тогда	//значение поменялось
		УдалитьСоставляющие(мКормосмесь);
		ДобавитьСоставляющие(лКормосмесь);
		Элементы.Кормосмеси.ТекущиеДанные.ВесКормосмеси = ПолучитьВесКормосмеси(лКормосмесь);

		//Если Элементы.Кормосмеси.ТекущиеДанные.Голов > 0 Тогда
			ПересчитатьКоличествоКормосмеси();
		//КонецЕсли;
		УстановитьОтборПоКормосмеси(лКормосмесь);
	//КонецЕсли;
	
	мКормосмесь = лКормосмесь;
	//ПолучитьСписокВыбораКормосмесь();
КонецПроцедуры

#КонецОбласти

#Область ВспомогательныеФункции

&НаКлиенте
Процедура УстановитьОтборПоКормосмеси(пКормосмесь=Неопределено)
	
	лФильтр = Новый ФиксированнаяСтруктура(Новый Структура("Кормосмесь", пКормосмесь));
	Элементы.Состав.ОтборСтрок = лФильтр;
	
КонецПроцедуры

&НаКлиенте                                       
Процедура УдалитьСоставляющие(пКормосмесь)
	
	лМассив = Объект.Состав.НайтиСтроки(Новый Структура("Кормосмесь", пКормосмесь));
	Для каждого лСтрокаТЧ Из лМассив Цикл
		Объект.Состав.Удалить(лСтрокаТЧ);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСоставляющие(пКормосмесь)
	
	ДобавитьСоставляющиеНаСервере(пКормосмесь)
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСоставляющиеНаСервере(пКормосмесь)

	Запрос = Новый Запрос;
	 Запрос.Текст ="ВЫБРАТЬ
	 |	сжсвКормосмесиСрезПоследних.Корм КАК Номенклатура,
	 |	сжсвКормосмесиСрезПоследних.Количество
	 |ИЗ
	 |	РегистрСведений.сжсвКормосмеси.СрезПоследних КАК сжсвКормосмесиСрезПоследних
	 |ГДЕ
	 |	сжсвКормосмесиСрезПоследних.Кормосмесь = &Кормосмесь";

	Запрос.УстановитьПараметр("Кормосмесь", пКормосмесь);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		лЗаписьТЧ = Объект.Состав.Добавить();
		лЗаписьТЧ.Кормосмесь = пКормосмесь;
		лЗаписьТЧ.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
		лЗаписьТЧ.Норма = ВыборкаДетальныеЗаписи.Количество;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьКоличествоКормосмеси()
	
	лТекДанные = Элементы.Кормосмеси.ТекущиеДанные;
	Если лТекДанные <> Неопределено Тогда
		//лМасса = 0;
		//
		//лМассивСтрок = Объект.Состав.НайтиСтроки(Новый Структура("Кормосмесь", лТекДанные.Кормосмесь));
		//Для каждого лСтрокаТЧ Из лМассивСтрок Цикл
		//	лМасса = лМасса + ОпределитьМассу(лСтрокаТЧ.Количество, лСтрокаТЧ.Номенклатура);
		//КонецЦикла;
		
		//лТекДанные.Количество = ОпределитьКоличество(лМасса, лТекДанные.Кормосмесь);
		лМассивСтрок = Объект.Состав.НайтиСтроки(Новый Структура("Кормосмесь", лТекДанные.Кормосмесь));
		Для каждого лСтрокаТЧ Из лМассивСтрок Цикл
			лСтрокаТЧ.Количество = ?(лТекДанные.ВесКормосмеси=0,0,(лТекДанные.Количество/лТекДанные.ВесКормосмеси)*лСтрокаТЧ.Норма);
		КонецЦикла;

	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСкладыСервер()
	
	лТЗТовары = Объект.Состав.Выгрузить(,"Номенклатура,Склад,Количество,НомерСтроки");
	лТЗТовары.Сортировать("Номенклатура, Склад Убыв, Количество Убыв, НомерСтроки");
	
	// Проверка и заполнение складов в ТЗ
	лНоменклатура = Неопределено;
	Для каждого лСтрокаТЗ Из лТЗТовары Цикл
		// Получим остатки по номенклатуре
		Если лНоменклатура <> лСтрокаТЗ.Номенклатура Тогда 
			лНоменклатура = лСтрокаТЗ.Номенклатура;
			лТЗОстатки = ПолучитьОстаткиНаСкладах(лНоменклатура);
		КонецЕсли;
		
		// Проверим по заполненным складам
		Если ЗначениеЗаполнено(лСтрокаТЗ.Склад) Тогда
			лНехватает = лСтрокаТЗ.Количество;
			лСтрокаОстатка = лТЗОстатки.Найти(лСтрокаТЗ.Склад, "Склад");
			Если лСтрокаОстатка <> Неопределено Тогда 
				лНехватает = лНехватает - лСтрокаОстатка.Остаток;
				лСтрокаОстатка.Остаток = лСтрокаОстатка.Остаток - лСтрокаТЗ.Количество;
			КонецЕсли;
			Если лНехватает > 0 Тогда 
				ОбщегоНазначенияСервер.СообщитьПользователю("На складе " + Строка(лСтрокаТЗ.Склад) + " не хватает " + Строка(лНехватает),,
					"Объект.Состав[" + Строка(лСтрокаТЗ.НомерСтроки - 1) + "].Склад");
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		
		// Найдем склад с необходимым количеством
		лСклад = Неопределено;
		Для каждого лСтрокаОстатка Из лТЗОстатки Цикл
			Если лСтрокаОстатка.Остаток >= лСтрокаТЗ.Количество Тогда 
				лСклад = лСтрокаОстатка.Склад;
				лСтрокаОстатка.Остаток = лСтрокаОстатка.Остаток - лСтрокаТЗ.Количество;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если лСклад = Неопределено Тогда 
			ОбщегоНазначенияСервер.СообщитьПользователю("Отсутствует необходимое количество корма на складах",,
				"Объект.Состав[" + Строка(лСтрокаТЗ.НомерСтроки - 1) + "].Количество");
		Иначе 
			лСтрокаТЗ.Склад = лСклад;
		КонецЕсли;
	КонецЦикла;
	
	// Перенос из ТЗ в ТЧ
	Для каждого лСтрокаТЗ Из лТЗТовары Цикл
		Объект.Состав[лСтрокаТЗ.НомерСтроки - 1].Склад = лСтрокаТЗ.Склад;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьОстаткиНаСкладах(пНоменклатура)

	лДата = ?(ЗначениеЗаполнено(Объект.Ссылка), Объект.Дата, ТекущаяДата());
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НоменклатураНаСкладахОстатки.Склад,
		|	НоменклатураНаСкладахОстатки.КоличествоОстаток КАК Остаток
		|ИЗ
		|	РегистрНакопления.сжсвПартииТоваровНаСкладах.Остатки(
		|			&Период,
		|			Ферма = &Ферма
		|				И Товар = &Номенклатура) КАК НоменклатураНаСкладахОстатки";

	Запрос.УстановитьПараметр("Номенклатура", пНоменклатура);
	Запрос.УстановитьПараметр("Период", Новый Граница(лДата, ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Ферма", Объект.Ферма);

	Результат = Запрос.Выполнить().Выгрузить();
	Результат.Сортировать("Остаток");
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПолучитьВесКормосмеси(Кормосмесь)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	сжсвНормыРасходаНоменклатурыСрезПоследних.Количество КАК Вес,
		|	сжсвНормыРасходаНоменклатурыСрезПоследних.Кормосмесь
		|ИЗ
		|	РегистрСведений.сжсвНормыРасходаНоменклатуры.СрезПоследних(&Период, ) КАК сжсвНормыРасходаНоменклатурыСрезПоследних
		|ГДЕ
		|	сжсвНормыРасходаНоменклатурыСрезПоследних.Кормосмесь = &Кормосмесь";
	
	Запрос.УстановитьПараметр("Кормосмесь", Кормосмесь);
	Запрос.УстановитьПараметр("Период", Объект.Дата);

	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.Вес;
	КонецЕсли;
	
КонецФункции

#КонецОбласти