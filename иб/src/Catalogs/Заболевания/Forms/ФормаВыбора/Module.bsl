#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Признаки.ЗагрузитьЗначения(Параметры.ПризнакиБолезни);
	
	//Список.Отбор.Элементы.Очистить();
	//Если ЗначениеЗаполнено(Признаки)  Тогда
	//	ОтборВ = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//	ОтборВ.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Признак");
	//	ОтборВ.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	//	ОтборВ.ПравоеЗначение = Параметры.ПризнакиБолезни;
	//	ОтборВ.Использование = Истина;
	//КонецЕсли;
	//УстановленОтбор = Истина;
	//Список.Группировка.Элементы.Очистить();
	//ЭлементГруппировки = Список.Группировка.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
	//ЭлементГруппировки.Использование = Истина;
	//ЭлементГруппировки.Поле = Новый ПолеКомпоновкиДанных("Наименование");		
	//УстановитьВидимостьОтбора();

	Если Параметры.ПризнакиБолезни.Количество()>0 тогда
		Элементы.ТаблицаБолезней.Видимость = Истина;
		Элементы.Список.Видимость = Ложь;
		
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Заболевания.Ссылка КАК Ссылка,
	|	Заболевания.Наименование,
	|	сжсвЗаболеванияПризнакиБолезни.Признак,
	|	ВложенныйЗапрос.Признак КАК КоличествоПодх
	|ПОМЕСТИТЬ Основной
	|ИЗ
	|	Справочник.Заболевания КАК Заболевания
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Заболевания.ПризнакиБолезни КАК сжсвЗаболеванияПризнакиБолезни
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				Заболевания.Ссылка КАК Ссылка,
	|				КОЛИЧЕСТВО(РАЗЛИЧНЫЕ сжсвЗаболеванияПризнакиБолезни.Признак) КАК Признак
	|			ИЗ
	|				Справочник.Заболевания КАК Заболевания
	|					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Заболевания.ПризнакиБолезни КАК сжсвЗаболеванияПризнакиБолезни
	|					ПО (ВЫБОР
	|							КОГДА сжсвЗаболеванияПризнакиБолезни.Ссылка ЕСТЬ NULL 
	|								ТОГДА 1 = 1
	|							ИНАЧЕ сжсвЗаболеванияПризнакиБолезни.Ссылка = Заболевания.Ссылка
	|						КОНЕЦ)
	|			ГДЕ
	|				сжсвЗаболеванияПризнакиБолезни.Признак В(&ПризнакиБолезни)
	|			
	|			СГРУППИРОВАТЬ ПО
	|				Заболевания.Ссылка) КАК ВложенныйЗапрос
	|			ПО сжсвЗаболеванияПризнакиБолезни.Ссылка = ВложенныйЗапрос.Ссылка
	|		ПО (ВЫБОР
	|				КОГДА сжсвЗаболеванияПризнакиБолезни.Ссылка ЕСТЬ NULL 
	|					ТОГДА 1 = 1
	|				ИНАЧЕ сжсвЗаболеванияПризнакиБолезни.Ссылка = Заболевания.Ссылка
	|			КОНЕЦ)
	|ГДЕ
	|	сжсвЗаболеванияПризнакиБолезни.Признак В(&ПризнакиБолезни)
	|
	|СГРУППИРОВАТЬ ПО
	|	Заболевания.Ссылка,
	|	Заболевания.Наименование,
	|	сжсвЗаболеванияПризнакиБолезни.Признак,
	|	ВложенныйЗапрос.Признак
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	сжсвЗаболеванияПризнакиБолезни.Ссылка КАК Болезнь,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ сжсвЗаболеванияПризнакиБолезни.Признак) КАК КоличествоПризнаков
	|ПОМЕСТИТЬ Колпризн
	|ИЗ
	|	Основной КАК Основной
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Заболевания.ПризнакиБолезни КАК сжсвЗаболеванияПризнакиБолезни
	|		ПО Основной.Ссылка = сжсвЗаболеванияПризнакиБолезни.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	сжсвЗаболеванияПризнакиБолезни.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Основной.Ссылка,
	|	Основной.Наименование,
	|	ВЫБОР
	|		КОГДА Колпризн.КоличествоПризнаков = 0
	|				ИЛИ Колпризн.КоличествоПризнаков ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ (Основной.КоличествоПодх / Колпризн.КоличествоПризнаков * 100)*(Колпризн.КоличествоПризнаков/&КоличествоПризнаков)
	|	КОНЕЦ КАК Процент
	|ИЗ
	|	Основной КАК Основной
	|		ЛЕВОЕ СОЕДИНЕНИЕ Колпризн КАК Колпризн
	|		ПО Основной.Ссылка = Колпризн.Болезнь
	|
	|СГРУППИРОВАТЬ ПО
	|	Основной.Ссылка,
	|	Основной.Наименование,
	|	ВЫБОР
	|		КОГДА Колпризн.КоличествоПризнаков = 0
	|				ИЛИ Колпризн.КоличествоПризнаков ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ (Основной.КоличествоПодх / Колпризн.КоличествоПризнаков * 100)*(Колпризн.КоличествоПризнаков/&КоличествоПризнаков)
	|	КОНЕЦ";	
	Запрос.УстановитьПараметр("ПризнакиБолезни",Параметры.ПризнакиБолезни);
	ЗАпрос.УстановитьПараметр("КоличествоПризнаков",Параметры.ПризнакиБолезни.Количество());
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	ТаблицаБолезней.Загрузить(РезультатЗапроса);

	
	//ДеревоИзЗапроса = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);

	//ЗначениеВРеквизитФормы(ДеревоИзЗапроса, "ДеревоБолезней");  
	КонецЕсли;



//    Для Каждого СтрокаДерева Из СтрокиДЗ Цикл

//        // Если мы в строке, у неё нет итогов, пропустим
//        Если СтрокаДерева.Строки.Количество() = 0 Тогда
//            Продолжить;
//        КонецЕсли;

//        СчитатьСуммыДЗ(СтрокаДерева.Строки);

//        // Для текущей записи вычислим сумму строк колонки
//        СтрокаДерева.ФактОстаток = СтрокаДерева.Строки.Итог("ФактОстаток");

//    КонецЦикла;

//// СчитатьСуммыДЗ()


//               // Добавляем новую колонку описанного типа
//    КолонкиВыборки.Добавить("ФактОстаток", ОписаниеЧисло, "Факт. остаток");

//    // Для того, чтобы были видны колонки, их надо создать
//    ЭлементыФормы.ТЗВыборка.СоздатьКолонки();

КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	//Если НЕ Элемент.ТекущиеДанные.РодительскаяГруппировкаСтроки = Неопределено тогда
	ВыбранноеНазначение = ВыбранныеЭлементы.Добавить();
	ВыбранноеНазначение.Ссылка = Элемент.ТекущиеДанные.Ссылка;
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаБолезнейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	//Если НЕ Элемент.ТекущиеДанные.РодительскаяГруппировкаСтроки = Неопределено тогда
	ВыбранноеНазначение = ВыбранныеЭлементы.Добавить();
	ВыбранноеНазначение.Ссылка = Элемент.ТекущиеДанные.Ссылка;
	//КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ВспомогательныеПроцедурыИФункции

&НаСервере
Процедура УстановитьВидимостьОтбора()
	
	Если УстановленОтбор Тогда
		Элементы.ФормаСнятьОтбор.Доступность = Истина;
	Иначе
		Элементы.ФормаСнятьОтбор.Доступность = Ложь;
		Элементы.ТаблицаБолезней.Видимость = Ложь;
		Элементы.Список.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтбор(Команда)
	
	Список.Отбор.Элементы.Очистить();
	УстановленОтбор = Ложь;
	УстановитьВидимостьОтбора();
	
КонецПроцедуры

&НаКлиенте
Процедура Перенести(Команда)
	ОповеститьОВыборе(ВыбранныеЭлементы);
	 //Закрыть();
КонецПроцедуры

#КонецОбласти