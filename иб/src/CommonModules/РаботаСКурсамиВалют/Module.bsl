// Функция, загружающая информацию о курсе валюты из файла в регистр
// сведений курсов валют. При этом файл с курсами разбирается и записываются
// только те данные, которые удовлетворяют периоду.
//
Функция ЗагрузитьКурсВалютыИзФайла(знач Валюта,
									знач ПутьКФайлу,
									знач НачалоПериодаЗагрузки,
									знач ОкончаниеПериодаЗагрузки) Экспорт
	
	СтатусЗагрузки = 1;
	
	ЧислоЗагружаемыхДнейВсего = 1 + (ОкончаниеПериодаЗагрузки - НачалоПериодаЗагрузки) / ( 24 * 60 * 60);
	
	ЧислоЗагруженныхДней = 0;
	
	Если ЭтоАдресВременногоХранилища(ПутьКФайлу) Тогда
		ИмяФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(ПутьКФайлу);
		ДвоичныеДанные.Записать(ИмяФайла);
	Иначе
		ИмяФайла = ПутьКФайлу;
	КонецЕсли;
	
	Текст = Новый ТекстовыйДокумент();
	
	РегистрКурсыВалют = РегистрыСведений.КурсыВалют;
	
	Текст.Прочитать(ИмяФайла, КодировкаТекста.ANSI);
	КолСтрок = Текст.КоличествоСтрок();
	
	Для Инд = 1 По КолСтрок Цикл
		
		Стр = Текст.ПолучитьСтроку(Инд);
		Если (Стр = "") ИЛИ (Найти(Стр,Символы.Таб) = 0) Тогда
			Продолжить;
		КонецЕсли;
		
		Если НачалоПериодаЗагрузки = ОкончаниеПериодаЗагрузки Тогда
			ДатаКурса = ОкончаниеПериодаЗагрузки;
		Иначе
			ДатаКурсаСтр = ВыделитьПодСтроку(Стр);
			ДатаКурса    = Дата(Лев(ДатаКурсаСтр,4), Сред(ДатаКурсаСтр,5,2), Сред(ДатаКурсаСтр,7,2));
		КонецЕсли;
		
		Кратность = Число(ВыделитьПодСтроку(Стр)); //ноу
		Курс      = Число(ВыделитьПодСтроку(Стр));
		
		Если ДатаКурса > ОкончаниеПериодаЗагрузки Тогда
			Прервать;
		КонецЕсли;
		
		Если ДатаКурса < НачалоПериодаЗагрузки Тогда 
			Продолжить;
		КонецЕсли;
		
		ЗаписьКурсовВалют = РегистрКурсыВалют.СоздатьМенеджерЗаписи();
		
		ЗаписьКурсовВалют.Валюта    = Валюта;
		ЗаписьКурсовВалют.Период    = ДатаКурса;
		ЗаписьКурсовВалют.Курс      = Курс;
		ЗаписьКурсовВалют.Записать();
		
		ЧислоЗагруженныхДней = ЧислоЗагруженныхДней + 1;
	КонецЦикла;
	
	Если ЭтоАдресВременногоХранилища(ПутьКФайлу) Тогда
		УдалитьФайлы(ИмяФайла);
		УдалитьИзВременногоХранилища(ПутьКФайлу);
	КонецЕсли;
	
	Если ЧислоЗагружаемыхДнейВсего = ЧислоЗагруженныхДней Тогда
		ПояснениеОЗагрузке = "";
	ИначеЕсли ЧислоЗагруженныхДней = 0 Тогда
		ПояснениеОЗагрузке = НСтр("ru = 'Курсы валюты %1 - %2 не загружены. Нет данных.'");
	Иначе
		ПояснениеОЗагрузке = НСтр("ru = 'Загружены не все курсы по валюте %1 - %2.'");
	КонецЕсли;
	
	ПояснениеОЗагрузке = ФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									ПояснениеОЗагрузке,
									Валюта.Код,
									Валюта.Наименование);
	
	Возврат ПояснениеОЗагрузке;
	
КонецФункции

// Выделяет из переданной строки первое значение
 //  до символа "TAB"
 //
 // Параметры: 
 //  ИсходнаяСтрока - Строка - строка для разбора
 //
 // Возвращаемое значение:
 //  подстроку до символа "TAB"
 //
Функция ВыделитьПодСтроку(ИсходнаяСтрока)
	
	Перем ПодСтрока;
	
	Поз = Найти(ИсходнаяСтрока,Символы.Таб);
	Если Поз > 0 Тогда
		ПодСтрока = Лев(ИсходнаяСтрока,Поз-1);
		ИсходнаяСтрока = Сред(ИсходнаяСтрока,Поз + 1);
	Иначе
		ПодСтрока = ИсходнаяСтрока;
		ИсходнаяСтрока = "";
	КонецЕсли;
	
	Возврат ПодСтрока;
	
КонецФункции

// Функция возвращает информацию о курсе валюты на основе ссылки на валюту.
// Данные возвращаются в виде структуры.
//
// Параметры:
// ВыбраннаяВалюта - Справочник.Валюты / Ссылка - ссылка на валюту, информацию
//                  о курсе которой необходимо получить
//
// Возвращаемое значение:
// ДанныеКурса   - стуктура, содержащая информацию о последней доступной 
//                 записи курса
//
Функция ЗаполнитьДанныеКурсаДляВалюты(ВыбраннаяВалюта) Экспорт
	
	ДанныеКурса = Новый Структура("ДатаКурса, Курс");
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ РегКурсы.Период, РегКурсы.Курс
	              | ИЗ РегистрСведений.КурсыВалют.СрезПоследних(&ОкончаниеПериодаЗагрузки, Валюта = &ВыбраннаяВалюта) КАК РегКурсы";
	Запрос.УстановитьПараметр("ВыбраннаяВалюта", ВыбраннаяВалюта);
	Запрос.УстановитьПараметр("ОкончаниеПериодаЗагрузки", ТекущаяДата());
	
	ВыборкаКурс = Запрос.Выполнить().Выбрать();
	ВыборкаКурс.Следующий();
	
	ДанныеКурса.ДатаКурса = ВыборкаКурс.Период;
	ДанныеКурса.Курс      = ВыборкаКурс.Курс;
	
	Возврат ДанныеКурса;
	
КонецФункции
