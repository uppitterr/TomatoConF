#Область ЭкспортныеПроцедурыИФункции

// Переопределяет стандартное поведение при загрузке данных.
// Реквизит РегламентноеЗаданиеGUID табличной части Команды не переносится,
// т.к. связан с регламентным заданием текущей базы.
Процедура ПриПолученииДанных(ЭлементДанных) Экспорт
	
	// фильтр по типу объекта
	Если ТипЗнч(ЭлементДанных) <> Тип("СправочникОбъект.ДополнительныеОтчетыИОбработки") Тогда
		Возврат;
	КонецЕсли;
	
	// фильтр по виду дополнительного отчета / обработки
	Если ЭлементДанных.Вид <> Перечисления.ВидыДополнительныхОтчетовИОбработок.ДополнительнаяОбработка Тогда
		Возврат;
	КонецЕсли;
	
	Таблица = ПолучитьУникальныеИдентификаторыРегламентныхЗаданий(ЭлементДанных.Ссылка);
	
	Для Каждого СтрокаКоманда Из ЭлементДанных.Команды Цикл
		МассивНайденных = Таблица.НайтиСтроки(Новый Структура("Идентификатор", СтрокаКоманда.Идентификатор));
		Если МассивНайденных.Количество() = 0 Тогда
			СтрокаКоманда.РегламентноеЗаданиеGUID = Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000");
		Иначе
			СтрокаКоманда.РегламентноеЗаданиеGUID = МассивНайденных[0].РегламентноеЗаданиеGUID;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ВспомогательныеПроцедурыИФункции

// Возвращает данные идентификации команд дополнительных отчетов и обработок.
Функция ПолучитьУникальныеИдентификаторыРегламентныхЗаданий(ДополнительнаяОбработкаСсылка)
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Команды.Ссылка					КАК Ссылка,
		|	Команды.Идентификатор			КАК Идентификатор,
		|	Команды.РегламентноеЗаданиеGUID КАК РегламентноеЗаданиеGUID
		|ИЗ
		|	Справочник.ДополнительныеОтчетыИОбработки.Команды КАК Команды
		|ГДЕ
		|	Команды.Ссылка = &Ссылка";
		
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.Параметры.Вставить("Ссылка", ДополнительнаяОбработкаСсылка);
	
	Таблица = Запрос.Выполнить().Выгрузить();
	
	Возврат Таблица;
	
КонецФункции

#КонецОбласти