///////////////////////////////
Функция СкачатьФайлНаСервере(знач URL,
	знач ПараметрыПолучения = Неопределено) Экспорт
	
	// Объявление переменных перед первым использованием в качестве
	// параметра метода Свойство, при анализе параметров получения файлов
	// из ПараметрыПолучения. Содержат значения переданных параметров получения файла
	Перем ПутьДляСохранения, Пользователь, Пароль, Порт,
	ЗащищенноеСоединение, ПассивноеСоединение;
	
	// Получаем параметры получения файла
	
	Если ПараметрыПолучения = Неопределено Тогда
		ПараметрыПолучения = Новый Структура;
	КонецЕсли;
	
	Если Не ПараметрыПолучения.Свойство("ПутьДляСохранения", ПутьДляСохранения) Тогда
		ПутьДляСохранения = Неопределено;
	КонецЕсли;
	
	Если Не ПараметрыПолучения.Свойство("Пользователь", Пользователь) Тогда
		Пользователь = Неопределено;
	КонецЕсли;
	
	Если Не ПараметрыПолучения.Свойство("Пароль", Пароль) Тогда
		Пароль = Неопределено;
	КонецЕсли;
	
	Если Не ПараметрыПолучения.Свойство("Порт", Порт) Тогда
		Порт = Неопределено;
	КонецЕсли;
	
	Если Не ПараметрыПолучения.Свойство("ЗащищенноеСоединение", ЗащищенноеСоединение) Тогда
		ЗащищенноеПассивноеСоединение = Неопределено;
	КонецЕсли;
	
	Если Не ПараметрыПолучения.Свойство("ПассивноеСоединение", ПассивноеСоединение) Тогда
		ЗащищенноеПассивноеСоединение = Неопределено;
	КонецЕсли;
	
	НастройкаСохранения = Новый Соответствие;
	НастройкаСохранения.Вставить("МестоХранения", "Сервер");
	НастройкаСохранения.Вставить("Путь", ПутьДляСохранения);
	
	Результат = ФункцииКлиентСервер.ПодготовитьПолучениеФайла(
	URL,
	Пользователь,
	Пароль,
	Порт,
	ЗащищенноеСоединение,
	ПассивноеСоединение,
	НастройкаСохранения);
	
	Возврат Результат;
	
КонецФункции
///////////////////////////////
Процедура ЗаписатьФайлВРегистр(ВладелецФайла, ДвоичныеДанные) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	МенеджерЗаписи = РегистрыСведений.ФайлыИКартинки.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ВладелецФайла = ВладелецФайла;
	МенеджерЗаписи.ХранимыйФайл = Новый ХранилищеЗначения(ДвоичныеДанные, Новый СжатиеДанных(9));
	МенеджерЗаписи.Записать(Истина);
КонецПроцедуры

Процедура УдалитьФайлИзИнформационнойБазы(ВладелецФайла) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	МенеджерЗаписи = РегистрыСведений.ФайлыИКартинки.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ВладелецФайла = ВладелецФайла;
	МенеджерЗаписи.Удалить();
КонецПроцедуры

Функция ПолучитьДанныеФайла(ВладелецФайла,УникальныйИдентификатор = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	ФайлОбъект = ВладелецФайла.ПолучитьОбъект();
	
	МенеджерЗаписи = РегистрыСведений.ФайлыИКартинки.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ВладелецФайла = ВладелецФайла;
	МенеджерЗаписи.Прочитать();
	ДвоичныеДанные = МенеджерЗаписи.ХранимыйФайл.Получить();
	СсылкаНаДвоичныеДанныеФайла = ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификатор);
	
	ДополнительнаяИнформация = Новый Структура("СсылкаНаДвоичныеДанныеФайла, ИмяФайла, Наименование, Расширение, Размер");
	ДополнительнаяИнформация.СсылкаНаДвоичныеДанныеФайла  = СсылкаНаДвоичныеДанныеФайла;
	ДополнительнаяИнформация.ИмяФайла                     = ФайлОбъект.Наименование + "." + ФайлОбъект.Расширение;
	ДополнительнаяИнформация.Наименование                 = ФайлОбъект.Наименование;
	ДополнительнаяИнформация.Расширение                   = ФайлОбъект.Расширение;
	ДополнительнаяИнформация.Размер                       = ФайлОбъект.Размер;
	
	Возврат ДополнительнаяИнформация;
	
КонецФункции

Функция ПолучитьДанныеКартинки(ВладелецФайла,УникальныйИдентификатор = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	ФайлОбъект = ВладелецФайла.ПолучитьОбъект();
	
	МенеджерЗаписи = РегистрыСведений.ФайлыИКартинки.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ВладелецФайла = ВладелецФайла;
	МенеджерЗаписи.Прочитать();
	ДвоичныеДанные = МенеджерЗаписи.ХранимыйФайл.Получить();
	СсылкаНаДвоичныеДанныеФайла = ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификатор);
	
	ДополнительнаяИнформация = Новый Структура("СсылкаНаДвоичныеДанныеФайла, ИмяФайла, Наименование, Расширение, Размер");
	ДополнительнаяИнформация.СсылкаНаДвоичныеДанныеФайла  = СсылкаНаДвоичныеДанныеФайла;
	
	Возврат ДополнительнаяИнформация;
	
КонецФункции

Функция ПолучитьКурсВалюты(Входная,Исходящая,ДатаКурса) Экспорт
	Если Входная=Исходящая Тогда
		Возврат 1;
	КонецЕсли;
	КурсВх=1;
	КурсВых=1;
	Если Входная=Справочники.Валюты.Рубль Тогда
		КурсВых=ЗапросКурса(Исходящая,ДатаКурса);
	ИначеЕсли Исходящая=Справочники.Валюты.Рубль Тогда
		КурсВх=ЗапросКурса(Входная,ДатаКурса);
	Иначе
		КурсВх=ЗапросКурса(Входная,ДатаКурса);
		КурсВых=ЗапросКурса(Исходящая,ДатаКурса);
	КонецЕсли;
	Если КурсВых=0 Тогда 
		Курс=1;
	Иначе
		Курс=КурсВх/КурсВых;
	КонецЕсли;
	Возврат Курс;
	
КонецФункции

Функция ЗапросКурса(ВалютаКурса,ДатаКурса)
	Курс=1;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Курс КАК Курс
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта.Ссылка = &ВалютаКурса) КАК КурсыВалютСрезПоследних";
	Запрос.УстановитьПараметр("Период",ДатаКурса);
	Запрос.УстановитьПараметр("ВалютаКурса",ВалютаКурса);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Курс= Выборка.Курс;
	КонецЦикла;
	Возврат Курс;	
КонецФункции

Функция ОпределитьЦену(Дата,Товар,Валюта) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.Цена,
	|	ЦеныНоменклатурыСрезПоследних.Валюта
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаДок, Номенклатура.Ссылка = &Товар) КАК ЦеныНоменклатурыСрезПоследних";
	
	Запрос.УстановитьПараметр("ДатаДок",Дата);
	Запрос.УстановитьПараметр("Товар",Товар);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Курс=ПолучитьКурсВалюты(Выборка.Валюта,Валюта,Дата);
		Возврат Окр(Выборка.Цена*Курс,2);	
	КонецЦикла; 
	
	Возврат 0;
	
КонецФункции

Процедура ПолучитьСписокСкладов(МестоХранения,Товар)Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ДвижениеТоваровОбороты.МестоХранения.Ссылка КАК МестоХранения
	               |ИЗ
	               |	РегистрНакопления.ДвижениеТоваров.Обороты(, , Регистратор, Номенклатура = &Номенклатура) КАК ДвижениеТоваровОбороты";
	Запрос.УстановитьПараметр("Номенклатура", Товар);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если не Выборка.МестоХранения=Null Тогда
			МестоХранения=Выборка.МестоХранения;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция ПроверкаДатыРедактирования(Объект)Экспорт
	Если Константы.ДатаЗапретаРедактированияДокументов.Получить()> Объект.Дата Тогда
		ОбщегоНазначения.СообщитьПользователю(
		НСтр("ru = 'Дата докумена меньше разрешенной даты редактирования.'"),Объект, "");
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции
	