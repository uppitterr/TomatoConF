
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	 ТекущийПользователь = ПользователиИнформационнойБазы.ТекущийПользователь().Имя; //ПараметрыСеанса.ТекущийПользователь; 
	 ВсеПользователи = ПользователиИнформационнойБазы.ПолучитьПользователей();
	 Для каждого ТекПользователь Из ВсеПользователи Цикл
	    Элементы.Пользователь.СписокВыбора.Добавить(ТекПользователь.Имя, ТекПользователь.Имя);
	 КонецЦикла;	 
	 Пользователь = ТекущийПользователь;                       
	 НастройкиКлиентскогоПриложения_Прочитать();
	 НастройкиНачальнойСтраницы_Прочитать();
	 Если Не ПравоДоступа("АдминистрированиеДанных", Метаданные) Тогда
	     Элементы.Пользователь.Доступность = Ложь;
	 КонецЕсли;
	 ТекстСправки = "* Внимание!  Если указан пользователь, не являющийся текущим, то требуется наличие права 'АдминистрированиеДанных'. 
	 |  Кроме того, проверка форм, добавляемых на начальную страницу, актуальна лишь для текущего, 
	 |  т.к. видимость форм может зависить от прав, индивидуальных настроек и т.д.";
КонецПроцедуры

&НаКлиенте
Процедура ПоУмолчанию(Команда)
   НастройкиНачальнойСтраницы_Записать(Истина);	
   ОбновитьИнтерфейс();
   НастройкиНачальнойСтраницы_Прочитать();
   ОбновитьОтображениеКнопок();
   ОбновитьДокументHTML();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВПравуюКолонку(Команда)
	Если ПроверитьЗаполнение() Тогда
		Если ПраваяКолонка.НайтиПоЗначению(ИмяФормыМетаданных) = Неопределено И ФормаОткрывается(ИмяФормыМетаданных) Тогда
			ПраваяКолонка.Добавить(ИмяФормыМетаданных, ИмяФормыМетаданных, Истина);
		КонецЕсли; 
	КонецЕсли;
	ОбновитьОтображениеКнопок();
	ОбновитьДокументHTML();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВЛевуюКолонку(Команда)
	Если ПроверитьЗаполнение() Тогда
		Если ЛеваяКолонка.НайтиПоЗначению(ИмяФормыМетаданных) = Неопределено И ФормаОткрывается(ИмяФормыМетаданных) Тогда
			ЛеваяКолонка.Добавить(ИмяФормыМетаданных, ИмяФормыМетаданных, Истина);
		КонецЕсли;
	КонецЕсли;
	ОбновитьОтображениеКнопок();
	ОбновитьДокументHTML();
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьНачальнуюСтраницу(Команда)
	НастройкиНачальнойСтраницы_Записать();
	ОбновитьИнтерфейс();
	НастройкиНачальнойСтраницы_Прочитать(Истина);
	ОбновитьОтображениеКнопок();
	ОбновитьДокументHTML();
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьНастройкиКлиентскогоПриложения(Команда)
    НастройкиКлиентскогоПриложения_Записать();
	ОбновитьДокументHTML();
КонецПроцедуры

&НаКлиенте
Процедура ПеречитатьНачальнуюСтраницу(Команда)
	НастройкиНачальнойСтраницы_Прочитать();
	ОбновитьОтображениеКнопок();
	ОбновитьДокументHTML();
КонецПроцедуры

&НаКлиенте
Процедура ПеречитатьНастройкиКлиентскогоПриложения(Команда)
	НастройкиКлиентскогоПриложения_Прочитать();
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВправо(Команда)
	ПолноеИмяФормы = Элементы.ЛеваяКолонка.ТекущиеДанные.Значение;
	ЛеваяКолонка.Удалить(ЛеваяКолонка.НайтиПоЗначению(ПолноеИмяФормы));
	Если ПраваяКолонка.НайтиПоЗначению(ПолноеИмяФормы) = Неопределено Тогда
		ПраваяКолонка.Добавить(ПолноеИмяФормы, ПолноеИмяФормы, Истина);
	КонецЕсли; 
	ОбновитьОтображениеКнопок();
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВлево(Команда)
	ПолноеИмяФормы = Элементы.ПраваяКолонка.ТекущиеДанные.Значение;
	ПраваяКолонка.Удалить(ПраваяКолонка.НайтиПоЗначению(ПолноеИмяФормы));
	Если ЛеваяКолонка.НайтиПоЗначению(ПолноеИмяФормы) = Неопределено Тогда
		ЛеваяКолонка.Добавить(ПолноеИмяФормы, ПолноеИмяФормы, Истина);
	КонецЕсли; 
	ОбновитьОтображениеКнопок();
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКНастройкам(Команда)
	Элементы.ГруппаСтраниц.ТекущаяСтраница = Элементы.Настройки_Страница;
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКПараметрамНС(Команда)
	Элементы.ГруппаСтраниц.ТекущаяСтраница = Элементы.ПараметрыНС_Страница;
КонецПроцедуры

&НаКлиенте
Процедура ТипОбъектаПриИзменении(Элемент)
	ИменаОбъектовМетаданных(ТипОбъектаМетаданных);
КонецПроцедуры

&НаСервере
Процедура ИменаОбъектовМетаданных(ТипОбъекта)
   ИменаОбъектовМетаданных = Элементы.ИмяОбъекта.СписокВыбора;
   ИменаОбъектовМетаданных.Очистить();
   КоллекцияОбъектов = Метаданные[ТипОбъекта];
   Для каждого ТекОбъект Из КоллекцияОбъектов Цикл
       ИменаОбъектовМетаданных.Добавить(ТекОбъект.Имя, ТекОбъект.Синоним);
   КонецЦикла;
   Если ИменаОбъектовМетаданных.Количество() = 1 Тогда
      ИмяОбъектаМетаданных = ИменаОбъектовМетаданных[0].Значение;
	  ИмяОбъектаПриИзмененииНаСервере();
   Иначе
	  //Элементы.ИмяОбъекта.СписокВыбора.Очистить();
      ИмяОбъектаМетаданных = "";
	  Элементы.ФормаИмя.СписокВыбора.Очистить();
	  ИмяФормыМетаданных   = "";
   КонецЕсли;
КонецПроцедуры // ()

&НаКлиенте
Процедура ИмяОбъектаПриИзменении(Элемент)
	ИмяОбъектаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ИмяОбъектаПриИзмененииНаСервере()
	ИмяФормыМетаданных = ""; ДобавлятьВсеФормы = Ложь;
	СписокИменФорм = Элементы.ФормаИмя.СписокВыбора;
	СписокИменФорм.Очистить();
	Если ТипОбъектаМетаданных = "ЖурналыДокументов" Тогда 
		ОсновнаяФорма = Метаданные[ТипОбъектаМетаданных][ИмяОбъектаМетаданных].ОсновнаяФорма;
	ИначеЕсли ТипОбъектаМетаданных = "Обработки" Тогда
		ОсновнаяФорма = Метаданные[ТипОбъектаМетаданных][ИмяОбъектаМетаданных].ОсновнаяФорма;
		ДобавлятьВсеФормы = Истина;
	ИначеЕсли ТипОбъектаМетаданных = "Отчеты" Тогда	
		ОсновнаяФорма = Метаданные[ТипОбъектаМетаданных][ИмяОбъектаМетаданных].ОсновнаяФорма;
		Если ОсновнаяФорма = Неопределено Тогда
			ОсновнаяФорма = ПодобратьФорму();
		ИначеЕсли ОсновнаяФорма.ПолноеИмя() = "ОбщаяФорма.ФормаОтчета" Тогда
			ОсновнаяФорма = ПодобратьАвтоформуФорму();
		КонецЕсли;
	ИначеЕсли ТипОбъектаМетаданных = "Документы" Тогда 
		ОсновнаяФорма = Метаданные[ТипОбъектаМетаданных][ИмяОбъектаМетаданных].ОсновнаяФормаСписка;
		Если ОсновнаяФорма = Неопределено Тогда
			ОсновнаяФорма = ПодобратьАвтоформуФорму();
		КонецЕсли;
	ИначеЕсли ТипОбъектаМетаданных = "РегистрыСведений" Или ТипОбъектаМетаданных = "Задачи" Или ТипОбъектаМетаданных = "БизнесПроцессы" Тогда 
		ОсновнаяФорма = Метаданные[ТипОбъектаМетаданных][ИмяОбъектаМетаданных].ОсновнаяФормаСписка;
		Если ОсновнаяФорма = Неопределено Тогда
			ОсновнаяФорма = ПодобратьАвтоформуФорму();
		КонецЕсли;
	Иначе
		ОсновнаяФорма = Метаданные[ТипОбъектаМетаданных][ИмяОбъектаМетаданных].ОсновнаяФормаСписка;
	КонецЕсли;
	Если ОсновнаяФорма = Неопределено Тогда
		ОсновнаяФорма = ПодобратьФорму();
	КонецЕсли;
	Если ТипЗнч(ОсновнаяФорма) = Тип("Структура") Тогда
		ОсновнаяФормаПолноеИмя = ОсновнаяФорма.Имя;
	Иначе
		ОсновнаяФормаПолноеИмя = ОсновнаяФорма.ПолноеИмя();
	КонецЕсли;	
	СписокИменФорм.Добавить(ОсновнаяФормаПолноеИмя, ОсновнаяФорма.Синоним);
	Если ДобавлятьВсеФормы Тогда
	    ДобавитьВсеФормы(ОсновнаяФорма);
	КонецЕсли;
	ИмяФормыМетаданных = ОсновнаяФормаПолноеИмя;
КонецПроцедуры

&НаСервере
Процедура ДобавитьВсеФормы(ОсновнаяФорма = Неопределено)
	СписокИменФорм = Элементы.ФормаИмя.СписокВыбора;
	ВсеФормы = ВсеФормы();
	Для каждого ТекФорма Из ВсеФормы Цикл
		Если ТекФорма <> ОсновнаяФорма Тогда
			СписокИменФорм.Добавить(ТекФорма.ПолноеИмя(), ТекФорма.Синоним);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ВсеФормы()
	Возврат Метаданные[ТипОбъектаМетаданных][ИмяОбъектаМетаданных].Формы;
КонецФункции

&НаКлиенте
Функция ФормаОткрывается(ПолноеИмяФормы)
	ФормаОткрывается = Ложь;
	Попытка
		УникальныйИдентификаторФормы = Новый УникальныйИдентификатор;
		ОткрытьФорму(ПолноеИмяФормы,,,УникальныйИдентификаторФормы);
		//НоваяФорма = ПолучитьФорму(ПолноеИмяФормы,,,УникальныйИдентификаторФормы);    
		//Если НоваяФорма.Открыта() Тогда 
		//	НоваяФорма.Закрыть();
		//КонецЕсли;
		АктивноеОкно = АктивноеОкно(); 
		Если АктивноеОкно <> Неопределено Тогда
			ОткрытаяФорма = АктивноеОкно.ПолучитьСодержимое();
			Если ОткрытаяФорма = Неопределено Тогда
				ТекстСообщения  = "Проверка на открытие. Отказ! Не удалось открыть '" + ПолноеИмяФормы + "'";
			Иначе
				Если ОткрытаяФорма.КлючУникальности = УникальныйИдентификаторФормы  Тогда
					Если ОткрытаяФорма.Открыта() Тогда 
						ОткрытаяФорма.Закрыть();
						Если ОткрытаяФорма.ИмяФормы = ПолноеИмяФормы Тогда
						    ТекстСообщения  = "Проверка на открытие. Успех! '" + ПолноеИмяФормы + " открывается.";
						Иначе
						    ТекстСообщения  = "Проверка на открытие. Успех! '" + ПолноеИмяФормы + " открывается как '" + ОткрытаяФорма.ИмяФормы + "'";
						КонецЕсли;
						ФормаОткрывается = Истина;
					Иначе
						ТекстСообщения  = "Проверка на открытие. Отказ! Не удалось открыть '" + ПолноеИмяФормы + "'";
					КонецЕсли;
				Иначе
					ТекстСообщения  = "Проверка на открытие. Отказ! Не удалось открыть '" + ПолноеИмяФормы + "'";
				КонецЕсли;	
			КонецЕсли;          
		КонецЕсли;                                                   
	Исключение
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		Если ИнформацияОбОшибке.Причина = Неопределено Тогда
			ПричинаОписание = "";
		Иначе
			ПричинаОписание = ", по причине:" + Символы.ПС + ИнформацияОбОшибке.Причина.Описание;		
		КонецЕсли;
		ТекстСообщения  = "Проверка на открытие. Отказ! Не удалось открыть '" + ПолноеИмяФормы + "'" + ПричинаОписание;
	КонецПопытки;
	История.ДобавитьСтроку("" + ТекущаяДата() + " - " + ТекстСообщения);
	Возврат ФормаОткрывается;
КонецФункции

&НаСервере
Процедура НастройкиНачальнойСтраницы_Записать(ПоУмолчанию = Ложь)
	НастройкиНачальнойСтраницы = Новый НастройкиНачальнойСтраницы; 
	Если ПоУмолчанию Тогда
		НастройкиНачальнойСтраницы = Новый НастройкиНачальнойСтраницы;
	Иначе
		СоставФормНачальнойСтраницы = Новый СоставФормНачальнойСтраницы;
		Для каждого ЭлСписка Из ЛеваяКолонка Цикл
			СоставФормНачальнойСтраницы.ЛеваяКолонка.Добавить(ЭлСписка.Значение);
		КонецЦикла;
		Для каждого ЭлСписка Из ПраваяКолонка Цикл
			СоставФормНачальнойСтраницы.ПраваяКолонка.Добавить(ЭлСписка.Значение);
		КонецЦикла;
		НастройкиНачальнойСтраницы.УстановитьСоставФорм(СоставФормНачальнойСтраницы);
	КонецЕсли;
	ХранилищеСистемныхНастроек.Сохранить("Общее/НастройкиНачальнойСтраницы",, НастройкиНачальнойСтраницы,, Пользователь);
КонецПроцедуры

&НаСервере
Процедура НастройкиКлиентскогоПриложения_Записать()	
	Попытка
		ТекНастройкиКлиентскогоПриложения = ХранилищеСистемныхНастроек.Загрузить("Общее/НастройкиКлиентскогоПриложения",,, Пользователь);
		НовВариантИнтерфейсаКлиентскогоПриложения   = ?(парРежимОткрытияФормПриложения = "Такси", ВариантИнтерфейсаКлиентскогоПриложения.Такси, ВариантИнтерфейсаКлиентскогоПриложения.Версия8_2);
		НовВариантМасштабаФормКлиентскогоПриложения = ВариантМасштабаФормКлиентскогоПриложения[парВариантМасштабаФормКлиентскогоПриложения];
		НовНастройкиКлиентскогоПриложения = Новый НастройкиКлиентскогоПриложения;
		НовНастройкиКлиентскогоПриложения.ВариантИнтерфейсаКлиентскогоПриложения = НовВариантИнтерфейсаКлиентскогоПриложения;
		НовНастройкиКлиентскогоПриложения.ВариантМасштабаФормКлиентскогоПриложения = ВариантМасштабаФормКлиентскогоПриложения[парВариантМасштабаФормКлиентскогоПриложения];
		Если НовВариантИнтерфейсаКлиентскогоПриложения = ВариантИнтерфейсаКлиентскогоПриложения.Версия8_2 Тогда
			НовНастройкиКлиентскогоПриложения.РежимОткрытияФормПриложения = РежимОткрытияФормПриложения[парРежимОткрытияФормПриложения];		
		КонецЕсли;
		ХранилищеСистемныхНастроек.Сохранить("Общее/НастройкиКлиентскогоПриложения",, НовНастройкиКлиентскогоПриложения,, Пользователь);
		ТекстСообщения  = "Успех! Для изменения внешнего вида нужно выполнить перезапуск.";
		Элементы.ПерезапуститьПриложение.Видимость = Истина;
	Исключение
		ТекстСообщения  = "Отказ! При изменении интерфейса произошла ошибка:" + Символы.ПС + ОписаниеОшибки();
	КонецПопытки;
	История.ДобавитьСтроку("" + ТекущаяДата() + " - " + ТекстСообщения);
КонецПроцедуры

&НаСервере
Процедура НастройкиКлиентскогоПриложения_Прочитать()
	ТекущийРежимСовместимостиИнтерфейса = Метаданные.РежимСовместимостиИнтерфейса;
	ТаксиДоступен =	?(ТекущийРежимСовместимостиИнтерфейса = Метаданные.СвойстваОбъектов.РежимСовместимостиИнтерфейса.Версия8_2, Ложь, Истина);
	
	НастройкиКлиентскогоПриложения = ХранилищеСистемныхНастроек.Загрузить("Общее/НастройкиКлиентскогоПриложения",,, Пользователь);
	Если НастройкиКлиентскогоПриложения = Неопределено Тогда
		Элементы.НастройкиИнтерфейса.Доступность = Ложь;
	Иначе
		Если ТаксиДоступен Тогда
			Если НастройкиКлиентскогоПриложения.ВариантИнтерфейсаКлиентскогоПриложения = ВариантИнтерфейсаКлиентскогоПриложения.Такси Тогда
				парРежимОткрытияФормПриложения = "Такси";
			ИначеЕсли НастройкиКлиентскогоПриложения.РежимОткрытияФормПриложения = РежимОткрытияФормПриложения.ОтдельныеОкна Тогда
				парРежимОткрытияФормПриложения = "ОтдельныеОкна";
			Иначе
				парРежимОткрытияФормПриложения = "Закладки";
			КонецЕсли;
		Иначе
			Если НастройкиКлиентскогоПриложения.РежимОткрытияФормПриложения = РежимОткрытияФормПриложения.ОтдельныеОкна Тогда
				парРежимОткрытияФормПриложения = "ОтдельныеОкна";
			Иначе
				парРежимОткрытияФормПриложения = "Закладки";
			КонецЕсли;
		КонецЕсли;
		парВариантМасштабаФормКлиентскогоПриложения = НастройкиКлиентскогоПриложения.ВариантМасштабаФормКлиентскогоПриложения;
		Элементы.НастройкиИнтерфейса.Доступность = Истина;
		Элементы.парРежимОткрытияФормПриложения.Видимость = ТаксиДоступен;
		Элементы.парРежимОткрытияФормПриложенияБезТакси.Видимость = Не ТаксиДоступен;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура НастройкиНачальнойСтраницы_Прочитать(Контроль = Ложь)
	 НастройкиНачальнойСтраницы = ХранилищеСистемныхНастроек.Загрузить("Общее/НастройкиНачальнойСтраницы",,, Пользователь);
	 Если НастройкиНачальнойСтраницы <> Неопределено Тогда
	     СоставФормНачальнойСтраницы = НастройкиНачальнойСтраницы.ПолучитьСоставФорм();
		 Если Контроль Тогда
			 История.ДобавитьСтроку("" + ТекущаяДата() + " - " + "Изменение Начальной страницы: Начало");
			 Для каждого ЭлементСписка Из ЛеваяКолонка Цикл
				 Если СоставФормНачальнойСтраницы.ЛеваяКолонка.Найти(ЭлементСписка.Значение) = Неопределено Тогда
					 ТекстСообщения = " - Отказ! '" + ЭлементСписка + "' не будет отображен(а)!";  
				 Иначе
					 ТекстСообщения = " - Успех! '" + ЭлементСписка + "' добавлен(а) в рабочую область.";
				 КонецЕсли;
				 История.ДобавитьСтроку(ТекстСообщения);  
			 КонецЦикла;
			 Для каждого ЭлементСписка Из ПраваяКолонка Цикл
				 Если СоставФормНачальнойСтраницы.ПраваяКолонка.Найти(ЭлементСписка.Значение) = Неопределено Тогда
					 ТекстСообщения = " - Отказ! '" + ЭлементСписка + "' не будет отображен(а)! Попробуйте переместить в левую колонку.";  
				 Иначе
					 ТекстСообщения = " - Успех! '" + ЭлементСписка + "' добавлен(а) в рабочую область.";
				 КонецЕсли;
				 История.ДобавитьСтроку(ТекстСообщения);  
			 КонецЦикла;
			 ОбщееКоличествоФорм = СоставФормНачальнойСтраницы.ЛеваяКолонка.Количество() + СоставФормНачальнойСтраницы.ПраваяКолонка.Количество();
             История.ДобавитьСтроку(" - Итого форм добавлено: " + ОбщееКоличествоФорм + ?(ОбщееКоличествоФорм = 0, " шт. Начальная страница скрыта.", " шт."));
			 История.ДобавитьСтроку("" + ТекущаяДата() + " - " + "Изменение Начальной страницы: Окончание");
		 Иначе
			 ЛеваяКолонка.Очистить();
			 Для каждого ТекИмяФормы Из СоставФормНачальнойСтраницы.ЛеваяКолонка Цикл
				 ЛеваяКолонка.Добавить(ТекИмяФормы, ТекИмяФормы, Истина);
			 КонецЦикла;
			 ПраваяКолонка.Очистить();
			 Для каждого ТекИмяФормы Из СоставФормНачальнойСтраницы.ПраваяКолонка Цикл
				 ПраваяКолонка.Добавить(ТекИмяФормы, ТекИмяФормы, Истина);
			 КонецЦикла;
		 КонецЕсли;
	 КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтображениеКнопок()
	Элементы.ПереместитьВправо.Доступность = ЛеваяКолонка.Количество();
	Элементы.ПереместитьВлево.Доступность = ПраваяКолонка.Количество();
КонецПроцедуры

&НаСервере
Функция ПодобратьФорму()
	ВсеФормы = ВсеФормы();
	Если ВсеФормы.Количество() = 0 Тогда
		ОсновнаяФорма = ПодобратьАвтоформуФорму();
	Иначе
		ОсновнаяФорма = ВсеФормы[0];
	КонецЕсли;
	Возврат ОсновнаяФорма;
КонецФункции

&НаСервере
Функция ПодобратьАвтоформуФорму()	
	Перем АвтоФорма;
	Если ТипОбъектаМетаданных = "Документы" Тогда	
		АвтоФорма = Новый Структура("Имя,Синоним", "Документ." + ИмяОбъектаМетаданных + ".ФормаСписка", "Форма списка (А)");
	ИначеЕсли ТипОбъектаМетаданных = "Справочники" Тогда	
		АвтоФорма = Новый Структура("Имя,Синоним", "Справочник." + ИмяОбъектаМетаданных + ".ФормаСписка", "Форма списка (А)");
	ИначеЕсли ТипОбъектаМетаданных = "РегистрыСведений" Тогда	
		АвтоФорма = Новый Структура("Имя,Синоним", "РегистрСведений." + ИмяОбъектаМетаданных + ".ФормаСписка", "Форма списка (А)");
	ИначеЕсли ТипОбъектаМетаданных = "РегистрыБухгалтерии" Тогда	
		АвтоФорма = Новый Структура("Имя,Синоним", "РегистрБухгалтерии." + ИмяОбъектаМетаданных + ".ФормаСписка", "Форма списка (А)");
	ИначеЕсли ТипОбъектаМетаданных = "РегистрыНакопления" Тогда	
		АвтоФорма = Новый Структура("Имя,Синоним", "РегистрНакопления." + ИмяОбъектаМетаданных + ".ФормаСписка", "Форма списка (А)");
	ИначеЕсли ТипОбъектаМетаданных = "ЖурналыДокументов" Тогда	
		АвтоФорма = Новый Структура("Имя,Синоним", "ЖурналДокументов." + ИмяОбъектаМетаданных + ".ФормаСписка", "Форма списка (А)");
	ИначеЕсли ТипОбъектаМетаданных = "Отчеты" Тогда	
		АвтоФорма = Новый Структура("Имя,Синоним", "Отчет." + ИмяОбъектаМетаданных + ".Форма", "Форма (А)");
	ИначеЕсли ТипОбъектаМетаданных = "Обработки" Тогда	
		АвтоФорма = Новый Структура("Имя,Синоним", "Обработка." + ИмяОбъектаМетаданных + ".Форма", "Форма (А)");
	ИначеЕсли ТипОбъектаМетаданных = "Задачи" Тогда	
		АвтоФорма = Новый Структура("Имя,Синоним", "Задача." + ИмяОбъектаМетаданных + ".ФормаСписка", "Форма списка (А)");
	ИначеЕсли ТипОбъектаМетаданных = "БизнесПроцессы" Тогда	
		АвтоФорма = Новый Структура("Имя,Синоним", "БизнесПроцесс." + ИмяОбъектаМетаданных + ".ФормаСписка", "Форма списка (А)");
	КонецЕсли;
	Возврат АвтоФорма;
КонецФункции

&НаКлиенте
Процедура ОбновитьДокументHTML();
	Текст = История.ПолучитьТекст();
	ДокументHTML = Новый ДокументHTML("История действий");	
	ЭлементТело = ДокументHTML.СоздатьЭлемент("body");
	ДокументHTML.Тело = ЭлементТело;	
	ЭлементБлок = ДокументHTML.СоздатьЭлемент("p");
	ЭлементТело.ДобавитьДочерний(ЭлементБлок);
	КоличествоСтрок = СтрЧислоСтрок(Текст);
	Для НомерСтроки = 1 По КоличествоСтрок Цикл
		ДобавитьТекстовыйУзел(ЭлементБлок, СтрПолучитьСтроку(Текст, НомерСтроки),
			?(НомерСтроки = КоличествоСтрок, Ложь, Истина));
	КонецЦикла;
	Документ_HTML = ПолучитьТекстHTMLИзОбъектаДокументHTML(ДокументHTML);	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьТекстовыйУзел(ЭлементРодитель, Текст, ДобавлятьПереносСтроки = Ложь)
	ДокументВладелец = ЭлементРодитель.ДокументВладелец;
	ТекстовыйУзел = ДокументВладелец.СоздатьТекстовыйУзел(Текст);              
	ЭлементРодитель.ДобавитьДочерний(ТекстовыйУзел);
	Если ДобавлятьПереносСтроки Тогда
		ЭлементРодитель.ДобавитьДочерний(ДокументВладелец.СоздатьЭлемент("br"));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьТекстHTMLИзОбъектаДокументHTML(ДокументHTML)	
	ЗаписьDOM = Новый ЗаписьDOM;
	ЗаписьHTML = Новый ЗаписьHTML;
	ЗаписьHTML.УстановитьСтроку();
	ЗаписьDOM.Записать(ДокументHTML,ЗаписьHTML);
	Возврат ЗаписьHTML.Закрыть();	
КонецФункции

&НаКлиенте
Процедура ИнтерфейсОбновить(Команда)
	ОбновитьИнтерфейс();
КонецПроцедуры

&НаКлиенте
Процедура ПерезапуститьПриложение(Команда)
	ПрекратитьРаботуСистемы(Истина,);
КонецПроцедуры


