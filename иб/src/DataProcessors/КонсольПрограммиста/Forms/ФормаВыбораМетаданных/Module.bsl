
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если ЭтоПростойТип(Параметры.Значение) Тогда
		Поиск = Строка(ТипЗнч(Параметры.Значение));
	Иначе
		Поиск = Параметры.Значение.Метаданные().ПолноеИмя();
	КонецЕсли; 
	
	ТекСтрока = ПолучитьДеревоМетаданных1Конфигурации(Поиск);
	
	Если НЕ ТекСтрока = Неопределено Тогда
		Элементы.ДеревоМетаданных.ТекущаяСтрока = ТекСтрока.ПолучитьИдентификатор();
	КонецЕсли; 
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЭтоПростойТип(Значение)
	Тип = ТипЗнч(Значение);
	Если ЛОЖЬ
		 ИЛИ Тип = Тип("Число")
		 ИЛИ Тип = Тип("Строка") 
		 ИЛИ Тип = Тип("Дата") 
		 ИЛИ Тип = Тип("Булево") 
		 ИЛИ Тип = Тип("Дата") 
		 ИЛИ Тип = Тип("Null") 
		 ИЛИ Тип = Тип("ХранилищеЗначения") 
		 ИЛИ Тип = Тип("УникальныйИдентификатор")
		 ИЛИ Тип = Тип("ВидСчета")
		 ИЛИ Тип = Тип("ВидДвиженияНакопления")
		 ИЛИ Значение = Неопределено
	Тогда
		Возврат ИСТИНА;
	КонецЕсли; 
	Возврат Ложь;
КонецФункции // ЭтоПростойТип()

&НаСервере
Функция ПолучитьДеревоМетаданных1Конфигурации(Поиск,Отбор = Неопределено) Экспорт
	
	ТекСтрока = Неопределено;
	ИспользоватьОтбор = (Отбор <> Неопределено);
	
	КоллекцииОбъектовМетаданных = Новый ТаблицаЗначений;
	КоллекцииОбъектовМетаданных.Колонки.Добавить("Имя");
	КоллекцииОбъектовМетаданных.Колонки.Добавить("Синоним");
	КоллекцииОбъектовМетаданных.Колонки.Добавить("Картинка");
	КоллекцииОбъектовМетаданных.Колонки.Добавить("КартинкаОбъекта");
	КоллекцииОбъектовМетаданных.Колонки.Добавить("ФормаОткрытия");
	
	ФормаВыбора = "ФормаВыбора";
	ФормаОткрытия = "";
	
	//НоваяСтрокаКоллекцииОбъектовМетаданных("Константы",               "Константы",                 	ФормаОткрытия,	БиблиотекаКартинок.Константа,              БиблиотекаКартинок.Константа,                    КоллекцииОбъектовМетаданных);
	НоваяСтрокаКоллекцииОбъектовМетаданных("Справочники",             "Справочники",               	ФормаВыбора,	БиблиотекаКартинок.Справочник,             БиблиотекаКартинок.Справочник,                   КоллекцииОбъектовМетаданных);
	НоваяСтрокаКоллекцииОбъектовМетаданных("Документы",               "Документы",                 	ФормаВыбора,	БиблиотекаКартинок.Документ,               БиблиотекаКартинок.ДокументОбъект,               КоллекцииОбъектовМетаданных);
	НоваяСтрокаКоллекцииОбъектовМетаданных("ПланыВидовХарактеристик", "Планы видов характеристик", 	ФормаВыбора,	БиблиотекаКартинок.ПланВидовХарактеристик, БиблиотекаКартинок.ПланВидовХарактеристикОбъект, КоллекцииОбъектовМетаданных);
	НоваяСтрокаКоллекцииОбъектовМетаданных("ПланыСчетов",             "Планы счетов",             	ФормаВыбора,	БиблиотекаКартинок.ПланСчетов,             БиблиотекаКартинок.ПланСчетовОбъект,             КоллекцииОбъектовМетаданных);
	НоваяСтрокаКоллекцииОбъектовМетаданных("ПланыВидовРасчета",       "Планы видов характеристик", 	ФормаВыбора,	БиблиотекаКартинок.ПланВидовХарактеристик, БиблиотекаКартинок.ПланВидовХарактеристикОбъект, КоллекцииОбъектовМетаданных);
	//НоваяСтрокаКоллекцииОбъектовМетаданных("РегистрыСведений",        "Регистры сведений",         Истина,	Ложь,	БиблиотекаКартинок.РегистрСведений,        БиблиотекаКартинок.РегистрСведений,              КоллекцииОбъектовМетаданных);
	//НоваяСтрокаКоллекцииОбъектовМетаданных("РегистрыНакопления",      "Регистры накопления",       Истина,	Ложь,	БиблиотекаКартинок.РегистрНакопления,      БиблиотекаКартинок.РегистрНакопления,            КоллекцииОбъектовМетаданных);
	//НоваяСтрокаКоллекцииОбъектовМетаданных("РегистрыБухгалтерии",     "Регистры бухгалтерии",      Истина,	Ложь,	БиблиотекаКартинок.РегистрБухгалтерии,     БиблиотекаКартинок.РегистрБухгалтерии,           КоллекцииОбъектовМетаданных);
	//НоваяСтрокаКоллекцииОбъектовМетаданных("РегистрыРасчета",         "Регистры расчета",          Истина,	Ложь,	БиблиотекаКартинок.РегистрРасчета,         БиблиотекаКартинок.РегистрРасчета,               КоллекцииОбъектовМетаданных);
	НоваяСтрокаКоллекцииОбъектовМетаданных("БизнесПроцессы",          "Бизнес-процессы",           	ФормаВыбора,	БиблиотекаКартинок.БизнесПроцесс,          БиблиотекаКартинок.БизнесПроцессОбъект,          КоллекцииОбъектовМетаданных);
	НоваяСтрокаКоллекцииОбъектовМетаданных("Задачи",                  "Задачи",                    	ФормаВыбора,	БиблиотекаКартинок.Задача,                 БиблиотекаКартинок.ЗадачаОбъект,                 КоллекцииОбъектовМетаданных);
	НоваяСтрокаКоллекцииОбъектовМетаданных("Перечисления",            "Перечисления",         		ФормаВыбора,	БиблиотекаКартинок.Перечисление,                 БиблиотекаКартинок.Перечисление,                 КоллекцииОбъектовМетаданных);
	
	
	// возвращаемое значение функции
	ДеревоМетаданных1 = ДеревоМетаданных .ПолучитьЭлементы();
	
	ПростыеТипы = новый ТаблицаЗначений;
	ПростыеТипы.Колонки.Добавить("Имя");
	ПростыеТипы.Колонки.Добавить("Синоним");
	ПростыеТипы.Колонки.Добавить("Картинка");
	ПростыеТипы.Колонки.Добавить("КартинкаОбъекта");
	ПростыеТипы.Колонки.Добавить("ФормаОткрытия");
	
	НоваяСтрокаКоллекцииОбъектовМетаданных("Строка"	,"Строка"	,""	,БиблиотекаКартинок.ВыбратьТип,БиблиотекаКартинок.ВыбратьТип,ПростыеТипы);
	НоваяСтрокаКоллекцииОбъектовМетаданных("Дата"	,"Дата"		,""	,БиблиотекаКартинок.ВыбратьТип,БиблиотекаКартинок.ВыбратьТип,ПростыеТипы);
	НоваяСтрокаКоллекцииОбъектовМетаданных("Булево"	,"Булево"	,""	,БиблиотекаКартинок.ВыбратьТип,БиблиотекаКартинок.ВыбратьТип,ПростыеТипы);
	НоваяСтрокаКоллекцииОбъектовМетаданных("Число"	,"Число"	,""	,БиблиотекаКартинок.ВыбратьТип,БиблиотекаКартинок.ВыбратьТип,ПростыеТипы);
	
	Для Каждого СтрокаКоллекции Из ПростыеТипы Цикл
		СтрокаДерева = ДеревоМетаданных1.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаДерева, СтрокаКоллекции); 
		СтрокаДерева.ПолноеИмя = СтрокаДерева.Имя;
		Если строкаДерева.ПолноеИмя = Поиск Тогда
			ТекСтрока = СтрокаДерева;
		КонецЕсли; 
	КонецЦикла;	
	Для Каждого СтрокаКоллекции Из КоллекцииОбъектовМетаданных Цикл
		
		СтрокаДерева = ДеревоМетаданных1.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаДерева, СтрокаКоллекции);
		СтрокаДерева.НеМожетьВыбираться = Истина;
		Для Каждого ОбъектМетаданных Из Метаданные[СтрокаКоллекции.Имя] Цикл
			
			Если ИспользоватьОтбор Тогда
				
				ОбъектПрошелФильтр = Истина;
				Для Каждого ЭлементОтбора Из Отбор Цикл
					
					Значение = ?(ВРег(ЭлементОтбора.Ключ) = ВРег("ПолноеИмя"), ОбъектМетаданных.ПолноеИмя(), ОбъектМетаданных[ЭлементОтбора.Ключ]);
					Если ЭлементОтбора.Значение.Найти(Значение) = Неопределено Тогда
						ОбъектПрошелФильтр = Ложь;
						Прервать;
					КонецЕсли;
					
				КонецЦикла;
				
				Если Не ОбъектПрошелФильтр Тогда
					Продолжить;
				КонецЕсли;
				
			КонецЕсли;
			
			//СтрокаДереваОМ = СтрокаДерева.Строки.Добавить();
			СтрокаДереваОМ = СтрокаДерева.ПолучитьЭлементы().Добавить();
			СтрокаДереваОМ.Имя       = ОбъектМетаданных.Имя;
			СтрокаДереваОМ.ПолноеИмя = ОбъектМетаданных.ПолноеИмя();			
			Если ОбъектМетаданных.Синоним = "" Тогда
				СтрокаДереваОМ.Синоним = СтрокаДереваОМ.Имя;
			Иначе
				СтрокаДереваОМ.Синоним   = ОбъектМетаданных.Синоним;
			КонецЕсли; 
			СтрокаДереваОМ.Картинка  = СтрокаКоллекции.КартинкаОбъекта;
			СтрокаДереваОМ.ФормаОткрытия  = СтрокаКоллекции.ФормаОткрытия;
			
			Если СтрокаДереваОМ.ПолноеИмя = Поиск Тогда
				ТекСтрока = СтрокаДереваОМ;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	// удаляем строки без подчиненных элементов
	Если ИспользоватьОтбор Тогда
		
		// используем обратный порядок обхода дерева значений
		КолвоЭлементовКоллекции = ДеревоМетаданных1.ПолучитьЭлементы().Количество();
		
		Для ОбратныйИндекс = 1 По КолвоЭлементовКоллекции Цикл
			
			ТекущийИндекс = КолвоЭлементовКоллекции - ОбратныйИндекс;
			СтрокаДерева = ДеревоМетаданных1.ПолучитьЭлементы()[ТекущийИндекс];
			Если СтрокаДерева.ПолучитьЭлементы().Количество() = 0 Тогда
				ДеревоМетаданных1.ПолучитьЭлементы().Удалить(ТекущийИндекс);
			КонецЕсли;

		КонецЦикла;
	
	КонецЕсли;
	
	Возврат ТекСтрока;
	
КонецФункции

Процедура НоваяСтрокаКоллекцииОбъектовМетаданных(Имя, Синоним,ФормаОткрытия, Картинка, КартинкаОбъекта, Таб)
	
	НоваяСтрока = Таб.Добавить();
	НоваяСтрока.Имя               = Имя;
	НоваяСтрока.Синоним           = Синоним;
	НоваяСтрока.Картинка          = Картинка;
	НоваяСтрока.КартинкаОбъекта   = КартинкаОбъекта;
	НоваяСтрока.ФормаОткрытия   	= ФормаОткрытия;
КонецПроцедуры


&НаКлиенте
Процедура Выбрать(Команда)
	ТД = Элементы.ДеревоМетаданных.ТекущиеДанные;
	Если ТД.НеМожетьВыбираться Тогда
		Возврат;
	КонецЕсли; 
	Если ТД.ФормаОткрытия = "" Тогда
		Закрыть(Тип(ТД.Имя));
	Иначе
		Закрыть(ТД.ПолноеИмя+"."+ТД.ФормаОткрытия);
	КонецЕсли;    	
КонецПроцедуры


&НаКлиенте
Процедура ДеревоМетаданныхВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Выбрать(NULL);
КонецПроцедуры

