//// загрузка из файла программы проектирования "Протеус"
//  файл создается по команде: Сервис/Спецификация/"Full CSV Output"
//пример файла:
//Category,Reference,Value,Order Code
//Resistors,"R1",100R,M100R
//Resistors,"R2",100R,M100R
//Resistors,"R3",100R,M100R
//Resistors,"R4",100R,M100R
//Resistors,"R5",100R,M100R
//Resistors,"R6",100R,M100R
//Resistors,"R7",100R,M100R
//Resistors,"R8",100R,M100R
//Resistors,"R9",300R,M300R
//Resistors,"R10",300R,M300R
//Resistors,"R11",300R,M300R
//Resistors,"R12",300R,M300R
//Resistors,"R13",300R,M300R
//Resistors,"R14",300R,M300R
//Integrated Circuits,"U1",ATTINY261,
//Integrated Circuits,"U2",DS2413P,
//Integrated Circuits,"U3",DS2413P,
//Integrated Circuits,"U4",4015,


&НаКлиенте
Процедура Загрузить()
	Если Объект.ФорматСАПР.Пустая() Тогда
		Предупреждение("Не указан формат САПРа",1);
		Возврат;
	КонецЕсли;
	
	Если ПодключитьРасширениеРаботыСФайлами() Тогда
		ВыборФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ВыборФайла.МножественныйВыбор = Ложь;
		ВыборФайла.Заголовок = НСтр("ru = 'Выбор файла'");
		РасширениеФайла=ПолучитьРасширение();
		ВыборФайла.Фильтр = "файлы САПР (*."+РасширениеФайла +")|*."+РасширениеФайла;
		
		Если ВыборФайла.Выбрать() Тогда
			ПолноеИмяФайла = ВыборФайла.ВыбранныеФайлы[0];
			ТекстДок= Новый ТекстовыйДокумент;
			ТекстДок.Прочитать(ПолноеИмяФайла);
			
			Попытка
				Загружено=ПолучитьДанныеИзСАПРа(ТекстДок); //заполним таблицу из файла
				
				Если Не Загружено Тогда
					Предупреждение ("Файл не соответствует формату САПРа");
					Возврат;
				КонецЕсли;
			Исключение  
				Предупреждение ("Не соответствие формата",5);
				Возврат;
			КонецПопытки;  
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьРасширение()
	Возврат Объект.ФорматСАПР.РасширениеФайла;	
КонецФункции

Функция ПолучитьДанныеИзСАПРа(ТекстДок)
	НомГруппы=0;
	НомНаименования=0;
	НомНоминала=0;
	НомПозиции=0;
	НомКорпуса=0;
	НомКоличество=0;
	НомРеквизит=0;
	
	СтрКолонок=ТекстДок.ПолучитьСтроку(1);
	СтрКолонок = СтрЗаменить(СтрКолонок,Объект.ФорматСАПР.Разделитель, Символы.ПС); 
	
	КолПолей=СтрЧислоСтрок(СтрКолонок);
	
	Табл= Объект.ФорматСАПР.ТаблицаСоответствий;
	Для каждого Стр из Табл Цикл
		Если Найти(СтрКолонок, Стр.IDколонки) = 0 Тогда
			Возврат Ложь;  //не соответствие формату
		Иначе
			Если ПустаяСтрока(Стр.РеквизитыИндентификатораСАПРа) Тогда
				
			ИначеЕсли Стр.РеквизитыИндентификатораСАПРа="Группа" Тогда	//родитель
				НомГруппы=Стр.НомерСтроки;
				ХарГруппы=Стр.Характеристика;
			ИначеЕсли Стр.РеквизитыИндентификатораСАПРа="Наименование" Тогда
				НомНаименования=Стр.НомерСтроки;
				ХарНаименования=Стр.Характеристика;
			ИначеЕсли Стр.РеквизитыИндентификатораСАПРа="Номинал" Тогда	
				НомНоминала=Стр.НомерСтроки;
				ХарНоминала=Стр.Характеристика;
			ИначеЕсли Стр.РеквизитыИндентификатораСАПРа="Позиция" Тогда	
				НомПозиции=Стр.НомерСтроки;
				//ХарПозиции=Стр.Характеристика;
			ИначеЕсли Стр.РеквизитыИндентификатораСАПРа="Корпус" Тогда	
				НомКорпуса=Стр.НомерСтроки;
				ХарКорпуса=Стр.Характеристика;
			ИначеЕсли Стр.РеквизитыИндентификатораСАПРа="Количество" Тогда	
				НомКоличество=Стр.НомерСтроки;
				//ХарНаименования=Стр.Характеристика;
			ИначеЕсли Стр.РеквизитыИндентификатораСАПРа="Реквизит" Тогда
				НомРеквизит=Стр.НомерСтроки;
				ХарРеквизит=Стр.Характеристика;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	НачатьТранзакцию();
	Объект.Спецификация.Очистить();
	
	Для НомерСтр=2 по ТекстДок.КоличествоСтрок() Цикл
		СтрФайла=ТекстДок.ПолучитьСтроку(НомерСтр);
		Если ПустаяСтрока(СтрФайла) Тогда
			Продолжить;
		КонецЕсли;
		
		ТекущаяСтрока = СтрЗаменить(СтрФайла,"""", "");//заменим двойные ковычки на одинарные 
		ТекущаяСтрока = СтрЗаменить(ТекущаяСтрока,Объект.ФорматСАПР.Разделитель, Символы.ПС); 
		
		
		Стр= Объект.Спецификация.Добавить();
		СписокХар  =Новый СписокЗначений;
	
		//группа справочника "ИдентификаторыСАПР"
		Если Не НомГруппы=0 Тогда
			Стр.Родитель  = СтрПолучитьСтроку(ТекущаяСтрока,  НомГруппы); //1 Category =
			СписокХар.Добавить(ХарГруппы,Стр.Родитель);
		КонецЕсли;
		
		//Наименование
		Если Не НомНаименования=0 Тогда
			Value       	= СтрПолучитьСтроку(ТекущаяСтрока, НомНаименования); //3 Value=100R или ATTINY261=
		КонецЕсли;
		
		//Номинал
		Если Не НомНоминала=0 Тогда
			Стр.Номинал      = СтрПолучитьСтроку(ТекущаяСтрока, НомНоминала);  //4 OrderCode=M100R 
			СписокХар.Добавить(ХарНоминала,Стр.Номинал);
		КонецЕсли;
		
		//определили Группу,Наименование,Номинал - создадим идентификатор
		Если Не НомГруппы=0 и Не НомНаименования=0 и Не НомНоминала=0 Тогда //
			Стр.Значение= ПолучитьИдентификатор(Стр.Родитель,Value,Стр.Номинал); //.Value  ,Стр.Номинал
			Стр.Номенклатура= ПолучитьНоменклатуру(Стр.Значение);//
		КонецЕсли;
			// реквизит
		Если Не НомРеквизит=0 Тогда
			ЗначениеХарактеристики      = СтрПолучитьСтроку(ТекущаяСтрока, НомРеквизит);  
			СписокХар.Добавить(ХарРеквизит,ЗначениеХарактеристики);
		КонецЕсли;
	
		
		// тип корпуса
		Если Не НомКорпуса=0 Тогда
			Footprint      = СтрПолучитьСтроку(ТекущаяСтрока, НомКорпуса);  
			Стр.Корпус      = ПолучитьКорпус(Footprint);  
			СписокХар.Добавить(ХарКорпуса,Стр.Корпус);
		КонецЕсли;
		
		//заполним элементы
		Если Не НомГруппы=0 и Не НомНаименования=0 и Не НомКорпуса=0 и СоздаватьНоменклатуру Тогда // есть что заполнять
			Если  Стр.Номенклатура.Корпус.Пустая() и Не Стр.Корпус.Пустая()  Тогда  //вначале прикрутим корпус
				Спр=Стр.Номенклатура.ПолучитьОбъект();
				Спр.Корпус=Стр.Корпус;
				Спр.Записать();
			КонецЕсли;
		КонецЕсли;
		
		Если Не НомГруппы=0 и Не НомНаименования=0  и СоздаватьИндентификаторы Тогда // есть что заполнять
			Если  Стр.Значение.Номенклатура.Пустая() и Не Стр.Номенклатура.Пустая() Тогда
				Индентиф=Стр.Значение.ПолучитьОбъект(); //подключим связь к идентификатору
				Индентиф.Номенклатура=Стр.Номенклатура;
				Индентиф.Записать();
			КонецЕсли;
		КонецЕсли;
		////////////////////////////////////////////	
		// количество
		Стр.Количество  =1; //не меньше
		Если Не НомКоличество=0 Тогда
			Стр.Количество  = СтрПолучитьСтроку(ТекущаяСтрока, НомКоличество);  
		КонецЕсли;
		
		//Позиция на плате
		Если Не НомПозиции=0 Тогда
			Designator       = СтрПолучитьСтроку(ТекущаяСтрока, НомПозиции);  
			Если Стр.Количество=1 Тогда
				Стр.Позиция=СокрЛП(Designator);
			Иначе
				Designator = СтрЗаменить(Designator,",", Символы.ПС); //создали новый список строк
				КолСтр=Стр.Количество-1;
				Для НомерПодСтр=1 по КолСтр Цикл
					ПодСтрока = СтрПолучитьСтроку(Designator,  НомерПодСтр); //
					Стр.Позиция=СокрЛП(ПодСтрока);
					
					ИндексТекСтроки = Объект.Спецификация.Индекс(Стр); //запомним индекс
					
					Стр= Объект.Спецификация.Добавить(); //новая строка
					ЗаполнитьЗначенияСвойств(Стр,Объект.Спецификация.Получить(ИндексТекСтроки)); //скопируем предыдущую
				КонецЦикла;		
				ПодСтрока = СтрПолучитьСтроку(Designator,  НомерПодСтр); //добавим в последнюю
				Стр.Позиция=СокрЛП(ПодСтрока);
			КонецЕсли;
		КонецЕсли;
		
		Если Не Стр.Номенклатура.Пустая()и СоздаватьХарактеристики Тогда
			ЗапонитьХарактерисики(Стр.Номенклатура,СписокХар);
		КонецЕсли;
	
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	Возврат Истина;
КонецФункции

Функция ПолучитьКорпус(Корпус)

		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	ТипыКорпусов.Ссылка
		               |ИЗ
		               |	Справочник.ТипыКорпусов КАК ТипыКорпусов
		               |ГДЕ
		               |	ТипыКорпусов.ЭтоГруппа = ЛОЖЬ
		               |	И ТипыКорпусов.Наименование = &Наименование
		               |	И ТипыКорпусов.ПометкаУдаления = ЛОЖЬ";
		
		Запрос.УстановитьПараметр("Наименование",Корпус);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Если Выборка.Следующий() Тогда
			Спр=Выборка.Ссылка;
		Иначе
			Спр=Справочники.ТипыКорпусов.ПустаяСсылка();
		КонецЕсли;	 
	
	Если Спр.Пустая()и СоздаватьИндентификаторы Тогда
		Спр=Справочники.ТипыКорпусов.СоздатьЭлемент();
		Спр.Наименование=Корпус;
		Спр.Записать();
	КонецЕсли;
	
	Возврат Спр.Ссылка;
КонецФункции

Функция ПолучитьИдентификатор(Родитель,Наименование,Номинал)
	
	//группа
	Если Не ПустаяСтрока(Родитель) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИдентификаторыСАПР.Ссылка
		|ИЗ
		|	Справочник.ИдентификаторыСАПР КАК ИдентификаторыСАПР
		|ГДЕ
		|	ИдентификаторыСАПР.ЭтоГруппа = ИСТИНА
		|	И ИдентификаторыСАПР.Наименование = &Наименование";
		
		Запрос.УстановитьПараметр("Наименование",Родитель );
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Если Выборка.Следующий() Тогда
			Группа=Выборка.Ссылка;
		Иначе
			Группа=Справочники.ИдентификаторыСАПР.ПустаяСсылка();
		КонецЕсли;	 
		Если Группа.Пустая()и СоздаватьИндентификаторы Тогда
			Группа=Справочники.ИдентификаторыСАПР.СоздатьГруппу();
			Группа.Наименование= Родитель;
			Группа.Записать();
			Группа=Группа.Ссылка;
		КонецЕсли;
	КонецЕсли;
	
	//элемент	
	Если ПустаяСтрока(Наименование) Тогда
		Спр= Справочники.ИдентификаторыСАПР.ПустаяСсылка();
	Иначе
		Спр= Справочники.ИдентификаторыСАПР.НайтиПоНаименованию(Наименование,,Группа);
		Если Спр.Пустая()и СоздаватьИндентификаторы Тогда
			Спр=Справочники.ИдентификаторыСАПР.СоздатьЭлемент();
			Спр.Родитель= Группа;
			Спр.Наименование=Наименование;
			Спр.Номинал=Номинал;
			Спр.Записать();
			Возврат Спр.Ссылка;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Спр.Ссылка;
	
КонецФункции
Функция ПолучитьНоменклатуру(СсылкаИдентификатор)
	Если  СсылкаИдентификатор.Пустая() Тогда    
		Возврат Справочники.Номенклатура.ПустаяСсылка();
	Иначе
		СпрНоменкулатуры=СсылкаИдентификатор.Номенклатура;
	КонецЕсли;
	
	Если Не СпрНоменкулатуры.Пустая() Тогда    
		Возврат СпрНоменкулатуры;
	КонецЕсли;
	
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	Номенклатура.Ссылка
		               |ИЗ
		               |	Справочник.Номенклатура КАК Номенклатура
		               |ГДЕ
		               |	Номенклатура.ЭтоГруппа = ЛОЖЬ
		               |	И Номенклатура.Наименование = &Наименование
		               |	И Номенклатура.ПометкаУдаления = ЛОЖЬ";
		
		Запрос.УстановитьПараметр("Наименование",СсылкаИдентификатор.Наименование);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Если Выборка.Следующий() Тогда
			СпрНоменкулатуры=Выборка.Ссылка;
		Иначе
			СпрНоменкулатуры=Справочники.Номенклатура.ПустаяСсылка();
		КонецЕсли;	
		
		Если СпрНоменкулатуры.Пустая() и СоздаватьНоменклатуру Тогда
			Спр=Справочники.Номенклатура.СоздатьЭлемент();
			Спр.Наименование=СсылкаИдентификатор.Наименование;
			//Спр.Корпус=СсылкаКорпус;
			Спр.Записать();
			СпрНоменкулатуры= Спр.Ссылка;
		КонецЕсли;
	Возврат СпрНоменкулатуры;
	
КонецФункции
Процедура ЗапонитьХарактерисики(СпрТовара,СписокХар)
	ЕстьХарактеристика=Ложь;
	
	Для каждого Стр из СписокХар Цикл
		Если Стр.Значение.Пустая() или ПустаяСтрока(Стр.Представление) Тогда
			Продолжить;
		КонецЕсли;
		ЕстьХарактеристика=Истина;
		
		Спр=СпрТовара.ПолучитьОбъект();
		
		НайденаСтрока=Спр.Характеристики.Найти(Стр.Значение);
		Если НайденаСтрока=Неопределено Тогда
			СтрХар=Спр.Характеристики.Добавить();
			СтрХар.Наименование=Стр.Значение;
			СтрХар.Значение=Стр.Представление;
		Иначе
			НайденаСтрока.Значение=Стр.Представление;
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьХарактеристика Тогда
		Спр.Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВПроект(Команда)
	Если КонтрольЗаполнения() Тогда
		ПараметрыТовара = Новый Структура;
		ПараметрыТовара.Вставить("Товар",Объект.Спецификация);
		ПараметрыТовара.Вставить("Тип","Спецификация");
		ОповеститьОВыборе(ПараметрыТовара);
	Иначе
		Предупреждение("В списке имеется не индентифицированная номенклатура!");	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция КонтрольЗаполнения()
	Для каждого Стр из Объект.Спецификация Цикл
		Если Стр.Номенклатура=Справочники.Номенклатура.ПустаяСсылка() Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	Возврат Истина;
КонецФункции


&НаКлиенте
Процедура ПриИзмененииИдентификатора(Элемент)
	ТекущийЭлемент.ТекущиеДанные.Номенклатура=ПолучитьСсылкуНоменклатуры(Элемент.ТекстРедактирования);
КонецПроцедуры
Функция  ПолучитьСсылкуНоменклатуры(Наименование)
	Возврат Справочники.ИдентификаторыСАПР.НайтиПоНаименованию(Наименование).Номенклатура;	
КонецФункции

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	ТД=ТекущийЭлемент.ТекущиеДанные;
	ТД.Номенклатура=Параметр.Товар;
	//ОбновитьПовторноИспользуемыеЗначения();
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.ЗакрыватьПриВыборе=Неопределено Тогда
		Элементы.ПеренестиВПроект.Доступность=Ложь;
	КонецЕсли;
КонецПроцедуры

