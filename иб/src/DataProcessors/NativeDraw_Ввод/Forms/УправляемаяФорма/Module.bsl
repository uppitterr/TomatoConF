
&НаКлиенте
Перем NativeDraw_ВнешняяКомпонента;


&НаСервере
Функция			NativeDraw_ПолучитьКомпоненту()
	
	#Если НЕ ВебКлиент Тогда

		Модуль		=	РеквизитФормыВЗначение("Объект");
		Возврат		Модуль.ПолучитьМакет("NativeDraw_2_6_2");
		
	#Иначе
		
		Возврат "";
	
	#КонецЕсли
	

КонецФункции

&НаКлиенте
Функция			NativeDraw_Инициализация()
	
	#Если НЕ ВебКлиент Тогда

		Попытка
			
			NativeDraw_ПутьКомпоненты	=	КаталогВременныхФайлов() + "NativeDraw_2_6_2.dll";
			Компонента					=	NativeDraw_ПолучитьКомпоненту();
			Компонента.Записать(NativeDraw_ПутьКомпоненты);
			
			Если ПодключитьВнешнююКомпоненту(NativeDraw_ПутьКомпоненты, "КомпонентаРисования", ТипВнешнейКомпоненты.Native) Тогда
				
				NativeDraw_ВнешняяКомпонента	= Новый("AddIn.КомпонентаРисования.NativeDraw");
				NativeDraw_Версия				= NativeDraw_ВнешняяКомпонента.Версия;
				
				Возврат Истина;
				
			Иначе
				
				NativeDraw_Версия				= ОписаниеОшибки();	
				Возврат Ложь;
				
			КонецЕсли;

		Исключение
			
			Возврат Ложь;
			
		КонецПопытки;
	
	#Иначе

		Возврат Ложь;
	
	#КонецЕсли
	
КонецФункции // NativeDraw_Инициализация()

&НаКлиенте
Функция			NativeDraw_Деинициализация()
	
	#Если НЕ ВебКлиент Тогда
		
		NativeDraw_ВнешняяКомпонента = NULL;
	//	УдалитьФайлы(NativeDraw_ПутьКомпоненты);
			
	#КонецЕсли

КонецФункции // NativeDraw_Деинициализация()

&НаКлиенте
Процедура		ДобавитьЛог(Событие, Окно, X, Y, D, A)

	Если  Объект.Лог.Количество() > 1000 Тогда
		
		Для н = 0 По 900 Цикл
			
			Объект.Лог.Удалить(0);	
			
		КонецЦикла;
		
	КонецЕсли;
	
	НоваяСтрока			=	Объект.Лог.Добавить();
	
	НоваяСтрока.Событие	=	Событие;	
	НоваяСтрока.Окно	=	Окно;	
	НоваяСтрока.X		=	X;	
	НоваяСтрока.Y		=	Y;	
	НоваяСтрока.D		=	D;	
	НоваяСтрока.A		=	A;
	
	Элементы.Лог.ТекущаяСтрока =	Объект.Лог.Количество() - 1;	

КонецПроцедуры


&НаСервере
Функция		РазложитьСтрокуВМассивПодстрок_НаСервере(Знач Стр, Разделитель = ",")
	
	Модуль		=	РеквизитФормыВЗначение("Объект");
	Возврат		Модуль.РазложитьСтрокуВМассивПодстрок(Стр, Разделитель);
		
КонецФункции


&НаСервере
Процедура	ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.Мышь.Добавить().ДействиеМыши	=	"ДвижениеМыши";	
	Объект.Мышь.Добавить().ДействиеМыши	=	"НажатиеЛевойКнопкиМыши";	
	Объект.Мышь.Добавить().ДействиеМыши	=	"ОтпусканиеЛевойКнопкиМыши";
	
	Объект.Клавиатура.Добавить().Клавиша	=	37;	
	Объект.Клавиатура.Добавить().Клавиша	=	38;	
	Объект.Клавиатура.Добавить().Клавиша	=	39;	
	Объект.Клавиатура.Добавить().Клавиша	=	40;
	
	Для каждого Элемент Из Объект.Клавиатура Цикл
		
		Элемент.Блокировать			=	Истина;
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура	ПриОткрытии(Отказ)
	
	Отказ	=	НЕ NativeDraw_Инициализация();

	Если НЕ Отказ Тогда
		
		//
		//СЗ_Клавиатура	=	Новый СписокЗначений;
		//СЗ_ДействияМыши	=	Новый СписокЗначений;

		СЗ_Клавиатура	=	Элементы.Клавиатура.ПодчиненныеЭлементы.КлавиатураКлавиша.СписокВыбора;
		СЗ_ДействияМыши	=	Элементы.Мышь.ПодчиненныеЭлементы.МышьДействиеМыши.СписокВыбора;

		СЗ_Клавиатура.Добавить(1, "VK_LBUTTON");	
		СЗ_Клавиатура.Добавить(2, "VK_RBUTTON");	
		СЗ_Клавиатура.Добавить(3, "VK_CANCEL");	
		СЗ_Клавиатура.Добавить(4, "VK_MBUTTON");	
		СЗ_Клавиатура.Добавить(5, "VK_XBUTTON1");	
		СЗ_Клавиатура.Добавить(6, "VK_XBUTTON2");	

		СЗ_Клавиатура.Добавить(8, "VK_BACK");	
		СЗ_Клавиатура.Добавить(9, "VK_TAB");	

		СЗ_Клавиатура.Добавить(12, "VK_CLEAR");	
		СЗ_Клавиатура.Добавить(13, "VK_RETURN");	

		СЗ_Клавиатура.Добавить(16, "VK_SHIFT");	
		СЗ_Клавиатура.Добавить(17, "VK_CONTROL");
		СЗ_Клавиатура.Добавить(18, "VK_MENU");

		СЗ_Клавиатура.Добавить(19, "VK_PAUSE");	
		СЗ_Клавиатура.Добавить(20, "VK_CAPITAL");
		СЗ_Клавиатура.Добавить(21, "VK_KANA");

		СЗ_Клавиатура.Добавить(23, "VK_JUNJA");
		СЗ_Клавиатура.Добавить(24, "VK_FINAL");
		
		СЗ_Клавиатура.Добавить(25, "VK_HANJA");

		СЗ_Клавиатура.Добавить(27, "VK_ESCAPE");
		СЗ_Клавиатура.Добавить(28, "VK_CONVERT");
		СЗ_Клавиатура.Добавить(29, "VK_NONCONVERT");
		СЗ_Клавиатура.Добавить(30, "VK_ACCEPT");
		СЗ_Клавиатура.Добавить(31, "VK_MODECHANGE");
		СЗ_Клавиатура.Добавить(32, "VK_SPACE");
		СЗ_Клавиатура.Добавить(33, "VK_PRIOR");
		СЗ_Клавиатура.Добавить(34, "VK_NEXT");
		СЗ_Клавиатура.Добавить(35, "VK_END");
		СЗ_Клавиатура.Добавить(36, "VK_HOME");
		СЗ_Клавиатура.Добавить(37, "VK_LEFT");
		СЗ_Клавиатура.Добавить(38, "VK_UP");
		СЗ_Клавиатура.Добавить(39, "VK_RIGHT");
		СЗ_Клавиатура.Добавить(40, "VK_DOWN");
		СЗ_Клавиатура.Добавить(41, "VK_SELECT");

		СЗ_Клавиатура.Добавить(42, "VK_PRINT");
		СЗ_Клавиатура.Добавить(43, "VK_EXECUTE");
		СЗ_Клавиатура.Добавить(44, "VK_SNAPSHOT");
		СЗ_Клавиатура.Добавить(45, "VK_INSERT");
		СЗ_Клавиатура.Добавить(46, "VK_DELETE");
		СЗ_Клавиатура.Добавить(47, "VK_HELP");

		Для к = 48 По 57 Цикл
			
			СЗ_Клавиатура.Добавить(к, "VK_" + ВРег(Символ(к)));
		
		КонецЦикла;
		

		Для к = 65 По 90 Цикл
			
			СЗ_Клавиатура.Добавить(к, "VK_" + ВРег(Символ(к)));
		
		КонецЦикла;

		
		СЗ_Клавиатура.Добавить(91, "VK_LWIN");
		СЗ_Клавиатура.Добавить(92, "VK_RWIN");
		СЗ_Клавиатура.Добавить(93, "VK_APPS");

		СЗ_Клавиатура.Добавить(95, "VK_SLEEP");

		Для к = 0 По 9 Цикл
			
			СЗ_Клавиатура.Добавить(96 + к, "VK_NUMPAD" + к);
		
		КонецЦикла;
		
		СЗ_Клавиатура.Добавить(106, "VK_MULTIPLY");
		СЗ_Клавиатура.Добавить(107, "VK_ADD");
		СЗ_Клавиатура.Добавить(108, "VK_SEPARATOR");
		СЗ_Клавиатура.Добавить(109, "VK_SUBTRACT");
		СЗ_Клавиатура.Добавить(110, "VK_DECIMAL");
		СЗ_Клавиатура.Добавить(111, "VK_DIVIDE");

		
		Для к = 1 По 12 Цикл
			
			СЗ_Клавиатура.Добавить(111 + к, "VK_F" + к);
		
		КонецЦикла;
		
		
		СЗ_ДействияМыши.Добавить("ДвижениеМыши");
		
		СЗ_ДействияМыши.Добавить("НажатиеЛевойКнопкиМыши");
		СЗ_ДействияМыши.Добавить("ОтпусканиеЛевойКнопкиМыши");
		СЗ_ДействияМыши.Добавить("ДвойнойКликЛевойКнопкиМыши");
		
		СЗ_ДействияМыши.Добавить("НажатиеПравойКнопкиМыши");
		СЗ_ДействияМыши.Добавить("ОтпусканиеПравойКнопкиМыши");
		СЗ_ДействияМыши.Добавить("ДвойнойКликПравойКнопкиМыши");

		СЗ_ДействияМыши.Добавить("НажатиеСреднейКнопкиМыши");
		СЗ_ДействияМыши.Добавить("ОтпусканиеСреднейКнопкиМыши");
		СЗ_ДействияМыши.Добавить("ДвойнойКликСреднейКнопкиМыши");
		
		СЗ_ДействияМыши.Добавить("НажатиеXКнопкиМыши");
		СЗ_ДействияМыши.Добавить("ОтпусканиеXКнопкиМыши");
		СЗ_ДействияМыши.Добавить("ДвойнойКликXКнопкиМыши");

		СЗ_ДействияМыши.Добавить("ДвижениеКолесаМыши");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура	ПриЗакрытии()

	NativeDraw_Деинициализация();
	
КонецПроцедуры

&НаКлиенте
Процедура	ВнешнееСобытие(Источник, Событие, Данные)
	
	Если Источник = "NativeDraw" Тогда

		Если Событие = "СистемныйТаймер" Тогда
				
		Иначе
				

			Если		Событие = "НажатиеКлавиши"		ИЛИ
						Событие = "ОтпусканиеКлавиши"	ИЛИ
						Событие = "ПовторКлавиши"

				
			Тогда
			
					Массив			=	РазложитьСтрокуВМассивПодстрок_НаСервере(Данные, "|");
					
					п_ОКНО			=	Массив[0];
										
					LPARAM_X		=	Число(Массив[1]);
					LPARAM_Y		=	Число(Массив[2]);
					WPARAM_D		=	Число(Массив[3]);
					WPARAM_A		=	Число(Массив[4]);

					ДобавитьЛог(Событие, п_ОКНО, LPARAM_X, LPARAM_Y, WPARAM_D, WPARAM_A);

		
			ИначеЕсли	Событие = "ОкноИзменено"					ИЛИ
						Событие = "ОкноСвёрнуто"					ИЛИ
						Событие = "ОкноРазвёрнуто"					ИЛИ
						Событие = "ОкноВосстановлено"
 			Тогда
			
				Если NativeDraw_ВнешняяКомпонента.Окно_Главное() = Данные Тогда
					
					ДобавитьЛог(Событие, "ГЛАВ.ОКНО", 0, 0, 0, 0);
					
				Иначе
					
					ДобавитьЛог(Событие, Данные, 0, 0, 0, 0);

				КонецЕсли
					
					
			ИначеЕсли	Событие = "ДвижениеМыши"					ИЛИ
						Событие = "НажатиеЛевойКнопкиМыши"			ИЛИ
						Событие = "ОтпусканиеЛевойКнопкиМыши"		ИЛИ
						Событие = "ДвойнойКликЛевойКнопкиМыши"		ИЛИ
						Событие = "НажатиеПравойКнопкиМыши"			ИЛИ
						Событие = "ОтпусканиеПравойКнопкиМыши"		ИЛИ
						Событие = "ДвойнойКликПравойКнопкиМыши"		ИЛИ
						Событие = "НажатиеСреднейКнопкиМыши"		ИЛИ
						Событие = "ОтпусканиеСреднейКнопкиМыши"		ИЛИ
						Событие = "ДвойнойКликСреднейКнопкиМыши"	ИЛИ
						Событие = "НажатиеXКнопкиМыши"				ИЛИ
						Событие = "ОтпусканиеXКнопкиМыши"			ИЛИ
						Событие = "ДвойнойКликXКнопкиМыши"			ИЛИ
						Событие = "ДвижениеКолесаМыши"

				
			Тогда
			
					Массив			=	РазложитьСтрокуВМассивПодстрок_НаСервере(Данные, "|");
					
					п_ОКНО			=	Массив[0];
										
					LPARAM_X		=	Число(Массив[1]);
					LPARAM_Y		=	Число(Массив[2]);
					WPARAM_D		=	Число(Массив[3]);
					WPARAM_A		=	Число(Массив[4]);

					
					ДобавитьЛог(Событие, п_ОКНО, LPARAM_X, LPARAM_Y, WPARAM_D, WPARAM_A);

			КонецЕсли;
							
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура	ОчиститьЛог_НаСервере()
	
	Объект.Лог.Очистить();
	
КонецПроцедуры


&НаКлиенте
Процедура	ОчиститьЛог(Команда)
	
	Объект.Лог.Очистить();
	
КонецПроцедуры


&НаКлиенте
Процедура	ПрименитьОтменить(Команда)

	
	Если НЕ ТекущийЭлемент.Пометка Тогда
		
		NativeDraw_ВнешняяКомпонента.Перехват_Установить();
		
		NativeDraw_ВнешняяКомпонента.Ввод_АктивироватьПерехватМыши();
		NativeDraw_ВнешняяКомпонента.Ввод_АктивироватьПерехватКлавиатуры();
		
		Для каждого Элемент Из Объект.Клавиатура Цикл
			
			NativeDraw_ВнешняяКомпонента.Ввод_ЗадатьПерехватКлавиши(Элемент.Клавиша, Элемент.Блокировать);
			
		КонецЦикла;
		
		Для каждого Элемент Из Объект.Мышь Цикл
			
			NativeDraw_ВнешняяКомпонента.Ввод_ЗадатьПерехватДействияМыши(Элемент.ДействиеМыши, Элемент.Блокировать);
			
		КонецЦикла;


	Иначе
		
		NativeDraw_ВнешняяКомпонента.Ввод_ДеактивироватьПерехватМыши();
		NativeDraw_ВнешняяКомпонента.Ввод_ДеактивироватьПерехватКлавиатуры();

		NativeDraw_ВнешняяКомпонента.Перехват_Убрать();

	КонецЕсли;
	
	ТекущийЭлемент.Пометка	=	НЕ ТекущийЭлемент.Пометка;
	
КонецПроцедуры

